
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head><meta property="og:image" content="https://yabtcl.com/images/printScreen20160211.png" /><meta property="fb:app_id" content="353869758101477" />
<meta property="og:url" content="https://yabtcl.com/userAccount.aspx">
<meta property="og:type" content="article" />
<meta property="og:site_name" content="YABTCL - Bitcoin Lottery - Jackpots at 152 BTC">
<meta property="og:title" content="YABTCL.com - The most complete provably fair Bitcoin lottery with the greatest jackpots.">
<meta property="og:description" content="Three modes to play: Scheduled Lottery, Instant Lottery or Free Lottery. You choose.">
<meta name="description" content="YABTCL.com - The most complete provably fair Bitcoin lottery with the greatest jackpots." />
<meta name="keywords" content="bitcoin, bit coin, lottery, casino, lotto, gambling, free lottery, affiliate program" /><meta name="robots" content="index, follow" />
<script src="/cdn-cgi/apps/head/8WoHwDYfti2HmrDb8sYRuRMoNYw.js"></script><script src="js/jquery-1.11.2.min.js" type="text/javascript"></script>
<script src="js/jquery-ui.min.1.11.2.js" type="text/javascript"></script>
<script src="js/jquery.qrcode.min.js" type="text/javascript"></script>
<script src="//cdnjs.cloudflare.com/ajax/libs/qtip2/2.2.1/jquery.qtip.min.js" type="text/javascript"></script>
<link href="//cdnjs.cloudflare.com/ajax/libs/qtip2/2.2.1/jquery.qtip.min.css" rel="stylesheet" type="text/css" /><link href="css/custom-theme/jquery-ui-1.10.3.custom.min.css" rel="stylesheet" type="text/css" />
<script src="js/cldr.js" type="text/javascript"></script>
<script src="js/cldr/event.js" type="text/javascript"></script>
<script src="js/cldr/supplemental.js" type="text/javascript"></script>
<script src="js/globalize.js" type="text/javascript"></script>
<script src="js/globalize/message.js" type="text/javascript"></script>
<script src="js/globalize/number.js" type="text/javascript"></script>
<script src="js/globalize/plural.js" type="text/javascript"></script>
<script src="js/globalize/date.js" type="text/javascript"></script>
<script src="js/globalize/currency.js" type="text/javascript"></script>
<style type="text/css">
        .ui-dialog
        {
            font-size: 13px;
            text-align: left;
        }
        input, select, textarea
        {
            font-family: Verdana;
        }
	.fb-like span {
	    vertical-align: top !important;
	}
    </style>
<script type="text/javascript">
    var decodeEntities = (function () {
        //create a new html document (doesn't execute script tags in child elements)
        var doc = document.implementation.createHTMLDocument("");
        var element = doc.createElement('div');

        function getText(str) {
            element.innerHTML = str;
            str = element.textContent;
            element.textContent = '';
            return str;
        }

        function decodeHTMLEntities(str) {
            if (str && typeof str === 'string') {
                //called twice because initially text might be encoded like this: &lt;img src=fake onerror=&quot;prompt(1)&quot;&gt;
                return getText(str);
            }
        }
        return decodeHTMLEntities;
    })();
</script>
<script type="text/javascript">

    var langCode = 'en';
    var informMinimumBTC = decodeEntities('Inform the minimum BTC value\nto spend between draws to start asking\nverification through message signing:');
    var informValueGreaterThan0 = decodeEntities('Please inform a value greater than 0');
    var anErrorOcurredDuringTheRequest = decodeEntities('An error ocurred during the request. The Error was:');
    var invalidLoginAddressOrPassword = decodeEntities('Invalid Login/Address or Password.');
    var translatedRegister = 'Register';
    var translatedLogin = 'Login';
    var youMustInformAPassword = decodeEntities('You must inform a password.');
    var thePasswordMustHaveAtLeast6Characters = decodeEntities('The password must have at least 6 characters.');
    var thePasswordsDontMatch = decodeEntities('The passwords don&#39;t match.');
    var theAddressInformedIsInvalid = decodeEntities('The address informed is invalid');
    var translatedFinishRegistration = 'Finish Registration';
    var translatedCancel = 'Cancel';
    var pleaseInformYourLoginOrAddress = decodeEntities('Please inform your login or address.');
    var loginNotRegistered = decodeEntities('Login not registered');
    var addressNotRegistered = decodeEntities('Address not registered');
    var selectAnAddress = decodeEntities('Select an Address');
    var toResetYourPassword = 'To reset your password, sign the message below with your address <span id="addressMessage"></span>:'
    var translatedResetPassword = 'Reset Password';
    var youMustInformTheSignature = decodeEntities('You must inform the signature.');
    var pleaseSpecifyThePassword = decodeEntities('Please specify the password.');
    var anErrorOccuredWhenProccessingYourRequestPleaseTryAgain = decodeEntities('An error occured when proccessing your request, please try again.');
    var theSignatureVerificationFailedWeWillRefreshThePage = decodeEntities('The signature verification failed. We will refresh the page, so you can try again.');
    var yourRequestWillBeProccessedInAbout = 'Your request will be proccessed in about <span id="spSeconds"></span> seconds, thanks for your patience...'
    var tryingAgainInSeconds = 'Trying again(%triesCount%) in <span id="spSeconds"></span> seconds.';
    var looksLikeOurServer = 'Looks Like our server is having some problems verifying this request. Trying again(%triesCount%) in <span id="spSeconds"></span> seconds.';
    var translatedVerifying = 'Verifying...';
    var hitsJackpot6 = '6-Hits&nbsp;Jackpot:&nbsp;140.24454734&nbsp;BTC';
    var hitsJackpot5 = '5-Hits&nbsp;Jackpot:&nbsp;12.31428268&nbsp;BTC';
    var hitsJackpot4 = '4-Hits&nbsp;Jackpot:&nbsp;0.03248613&nbsp;BTC';
    var hitsJackpot3 = '3-Hits&nbsp;Jackpot:&nbsp;0.0329376&nbsp;BTC';
    var hitsJackpot2 = '2-Hits&nbsp;Jackpot:&nbsp;0.0171456&nbsp;BTC';
    var resetPassword = 'Reset Password';
    var translatedSentences = {};
    translatedSentences['theSignatureVerifyingTheRegistrationOfThisAddress'] = decodeEntities('The signature verifying the registration of this address was not valid. You will need to register it again.');
    translatedSentences['theSignatureVerifyingTheRegistrationOfThisUser'] = decodeEntities('The signature verifying the registration of this user was not valid. You will need to register again.');
    translatedSentences['youCanTryAgainIn5Seconds'] = decodeEntities('You can try again in 5 seconds.');
    translatedSentences['youAlreadyRegisteredAUserInThePast24Hours'] = decodeEntities('You already registered an user in the past 24 hours. Try again later.');
    translatedSentences['thisAddressIsAlreadyRegistered'] = decodeEntities('This address is already registered');
    translatedSentences['thisUsernameIsAlreadyRegistered'] = decodeEntities('This username is already registered');
    translatedSentences['yourLoginShouldHaveAtLeast'] = decodeEntities('Your login should have at least 4 characters, at most 30 characters and must contain only letters, numbers, dashes(-), dots(.) and underscores(_).');
    translatedSentences['invalidEmail'] = decodeEntities('Invalid email');
    translatedSentences['thisEmailIsAlreadyRegistered'] = decodeEntities('This email is already registered.');
    translatedSentences['weSentAnEmailToTheAddressRegisteredInYourAccountWithInstructionsToResetYourPassword'] = decodeEntities('We sent an email to the address registered in your account with instructions to reset your password.');
    var translatedProvidingYourEmail = "Providing your email is optional, but it is strongly recommended.";
    var translatedWeWillSendYouEmailsInTwoSituations = "We will send you emails in two situations:";
    var translatedWhenResettingYourPasswordIfYouDoNotProvideAnEmail = "When resetting your password. If you do not provide an email, the only way to reset your password is signing a specific message with your Bitcoin address.";
    var translatedToInformYouAboutUpdatesPromotionsGiveawaysAndOtherImportantInformation = "To inform you about updates, promotions, giveaways and other important information. You can review what kind of information you want from us in your profile page.";
    var translatedWeHateSpamSoWeWontGiveOrSellYourEmailAddress = "We hate spam, so we won&#39;t give or sell your email address to any third party.";

    if (langCode == 'zh-Hans') {
        langCode = 'zh';
    }
    if (langCode == 'zh-Hant') {
        langCode = 'zh-TW';
    }
    var langObject;
</script>
<link href="mbExtruder/css/mbExtruder.css" media="all" rel="stylesheet" type="text/css" />
<script type="text/javascript" src="mbExtruder/inc/jquery.hoverIntent.min.js"></script>
<script type="text/javascript" src="mbExtruder/inc/jquery.mb.flipText.js"></script>
<script type="text/javascript" src="mbExtruder/inc/mbExtruder.js"></script>
<style type="text/css">
        .tnNotSelected {border:1px solid #000000; font-family:Verdana; color: #000000; font-weight: bold; font-size: 11px; background-color: #FFFFFF; cursor:pointer; text-align:center; vertical-align:middle; width: 18px; height: 18px;}
        .tnSelected {border:1px solid #00AA00; font-family:Verdana; color: #FFFFFF; font-weight: bold; font-size: 11px; background-color: #00AA00; cursor:pointer; text-align:center; vertical-align:middle; width: 18px; height: 18px;}
        .tnInstantNotSelected {border:1px solid #000000; font-family:Verdana; color: #000000; font-weight: bold; font-size: 18px; background-color: #FFFFFF; cursor:pointer; text-align:center; vertical-align:middle; height: 32px; padding: 2px 5px; position: relative;}
        .tnInstantHit {border:1px solid #000000; font-family:Verdana; color: #FFFFFF; font-weight: bold; font-size: 18px; background-color: #FF0000; cursor:pointer; text-align:center; vertical-align:middle; height: 32px; padding: 2px 5px; position: relative;}
        .tnInstantSelected {border:1px solid #000000; font-family:Verdana; color: #FFFFFF; font-weight: bold; font-size: 18px; background-color: #00AA00; cursor:pointer; text-align:center; vertical-align:middle; height: 32px; padding: 2px 5px; position: relative;}
        .unconfTckt {background-color:#FFFF00; padding: 5px; margin: 0px 3px 3px 0px; border: 1px solid #000000; float: left; font-weight: bold;}
        .confTckt {background-color:#00CC00; padding: 5px; margin: 0px 3px 3px 0px; border: 1px solid #000000; float: left; font-weight: bold;}
        .tblTicket {border:1px solid #000000; background-color: #CCCCCC;}
        .divTicket {float: left; margin-right :5px; margin-bottom: 5px; width: 283px;}
        .divClearThreeTickets {clear: both}
        .ui-tabs-anchor {font-weight: bold}
        .ui-tabs .ui-tabs-panel {
    padding: 1em 0em;
}
.miniDefaultButton 
{
    margin-right: 2px
    border-width: 1px;
    font-weight: bold;
    padding: 0px 0px;
    background-color: rgb(187, 187, 187);
}
.trPrizeRed
{
    background-color: #FF3333; color: #FFFFFF; font-weight: bold
}
.trPrizeGreen
{
    background-color: #aed4b2; color: #000000; font-weight: bold
}
.trPrizeWhite
{
    background-color: #FFFFFF; color: #000000; font-weight: bold
}
.ui-widget 
{
    font-size: inherit;
}
.ui-widget-content a {
    color: blue;
}
        #tblMessages {border: 1px solid #FF0000; background-color: #FFEEEE; border-collapse: collapse;}
        #tblMessages td {border-bottom: 1px solid #FF0000;}

.ballMiss
    {
        background-image: url('images/ball-miss.png'); 
        width: 37px; 
        height: 37px; 
        line-height: 37px; 
        font-weight: bold;
        float:left;
        margin: 2px;
        position: relative;
        opacity: 0;
    }
.ballHit
    {
        background-image: url('images/ball-hit.png'); 
        width: 37px; 
        height: 37px; 
        line-height: 37px; 
        font-weight: bold;
        color: #FFFFFF;
        float:left;
        margin: 2px;
        position: relative;
        opacity: 0;
    }
.miss
{
  background-image: url("images/miss.png");
  background-position: center center;
  background-repeat: no-repeat;
  height: 100%;
  left: 0;
  position: absolute;
  top: 0;
  width: 100%;
}
    #tblLastGames, #tblYourLastGames, #tblTopProfit, #tblTopRoundsPlayed, .tblStyle
    {
        border: 1px solid #000000;
        border-collapse: collapse;
        margin: 0 auto;
        font-size: 12px;
        margin-top: 10px;
    }
    #tblLastGames th, #tblYourLastGames th, #tblTopProfit th, #tblTopRoundsPlayed th, .tblStyle th
    {
        background-color: #8cb290;
        border: 1px solid #000000;
        text-align: center;
        font-weight: bold;
        padding: 3px;
    }
    #tblLastGames td, #tblYourLastGames td, #tblTopRoundsPlayed td
    {
        border: 1px solid #000000;
        text-align: center;
        cursor: pointer;
        font-weight: bold;
        padding: 3px;
    }
    #tblTopProfit td, .tblStyle td
    {
        border: 1px solid #000000;
        text-align: center;
        font-weight: bold;
        padding: 3px;
    }
    
    .greenCell
    {
        background-color: #aed4b2;
    }
    
    .whiteCell
    {
        background-color: #FFFFFF;
    }
    .tdGDBold
    {
        font-weight: bold;
    }
    .noTitleStuff 
    {
        font-size: 13px;
    }
    .noTitleStuff .ui-dialog-titlebar {display:none}
    
    #btFreeBitcoins {
  background-color: #FF6000;
  -webkit-border-radius: 10px;
  border-radius: 10px;
  border: none;
  color: #000000;
  cursor: pointer;
  display: inline-block;
  font-family: Verdana;
  font-size: 12px;
  font-weight: bold;
  padding: 5px 20px;
  text-align: center;
  text-decoration: none;
}

#linkDeposit {
  background-color: #FF6000; -webkit-border-radius: 10px; border-radius: 10px; border: none; color: #000000; cursor: pointer; display: inline-block; font-family: Verdana; font-size: 17px; font-weight: bold; padding: 5px 15px; text-align: center; text-decoration: none; margin: 5px 10px;
}

.defaultButton.orangeButton {
  background-color: #ff8d2c;
  -webkit-border-radius: 10px;
  border-radius: 10px;
  border: none;
  color: #000000;
  cursor: pointer;
  display: inline-block;
  font-family: Verdana;
  font-size: 12px;
  font-weight: bold;
  padding: 5px 20px;
  text-align: center;
  text-decoration: none;
}

.ui-dialog.biggerBorder {
    border: 2px solid #000000
}

@-webkit-keyframes glowing {
  0% { background-color: #FF6000}
  50% { background-color: #FFDD00}
  100% { background-color: #FF6000}
}

@-moz-keyframes glowing {
  0% { background-color: #FF6000}
  50% { background-color: #FFDD00}
  100% { background-color: #FF6000}
}

@-o-keyframes glowing {
  0% { background-color: #FF6000}
  50% { background-color: #FFDD00}
  100% { background-color: #FF6000}
}

@-ms-keyframes glowing {
  0% { background-color: #FF6000}
  50% { background-color: #FFDD00}
  100% { background-color: #FF6000}
}

@keyframes glowing {
  0% { background-color: #FF6000}
  50% { background-color: #FFDD00}
  100% { background-color: #FF6000}
}

.btFreeBitcoinsAnimation {
  -webkit-animation: glowing 1500ms infinite;
  -moz-animation: glowing 1500ms infinite;
  -o-animation: glowing 1500ms infinite;
  -ms-animation: glowing 1500ms infinite;
  animation: glowing 1500ms infinite;
}

@-webkit-keyframes glowing2 {
  0% { background-color: #000000}
  50% { background-color: #DDDDDD}
  100% { background-color: #000000}
}

@-moz-keyframes glowing2 {
  0% { background-color: #000000}
  50% { background-color: #DDDDDD}
  100% { background-color: #000000}
}

@-o-keyframes glowing2 {
  0% { background-color: #000000}
  50% { background-color: #DDDDDD}
  100% { background-color: #000000}
}

@-ms-keyframes glowing2 {
  0% { background-color: #000000}
  50% { background-color: #DDDDDD}
  100% { background-color: #000000}
}

@keyframes glowing2 {
  0% { background-color: #000000}
  50% { background-color: #DDDDDD}
  100% { background-color: #000000}
}

.btChatAnimation {
  -webkit-animation: glowing2 1500ms infinite;
  -moz-animation: glowing2 1500ms infinite;
  -o-animation: glowing2 1500ms infinite;
  -ms-animation: glowing2 1500ms infinite;
  animation: glowing2 1500ms infinite;
}


</style>
<script type="text/javascript" src="https://www.google.com/recaptcha/api.js">
  </script>
<link rel="stylesheet" type="text/css" href="css/style.css" />
<!--[if IE 7]>
<link rel="stylesheet" media="screen, projection" href="css/ie7.css" />
<![endif]-->
<!--[if IE 6]>
<link rel="stylesheet" media="screen, projection" href="css/ie7.css" />
<![endif]-->
<title>
	Lotteries - YABTCL - Bitcoin Lottery - Jackpots at 152 BTC
</title></head>
<body>
<form method="post" action="./userAccount.aspx" id="form1">
<input type="hidden" name="__VIEWSTATE" id="__VIEWSTATE" value="zOlECsrH15oPtUIk+vPZuZ/vvxdbL/yX4YMoonArzqmC6ldMCPFQ3BjjF+1wal/dF9XHhKTDbpLEoS/OWFsb6fW+oFVjddqK4WXLgQkxs/g=" />
<script src="/ScriptResource.axd?d=D9drwtSJ4hBA6O8UhT6CQkg3bw_qZK8D_0qGWjM10vCwRSHocSkiwuFXLM1LKT7T9Z-xOLxj6gZJyez1dQ4akPPL1LsZU_UodOUFx0Obl97-XmtNkSP4dkhQsvkdKYFlKOP8x5ndlswiBPnHc8TZpsP8Ga3qSr5FmJ9X66N7HO41&amp;t=44237217" type="text/javascript"></script>
<script type="text/javascript">
//<![CDATA[
if (typeof(Sys) === 'undefined') throw new Error('ASP.NET Ajax client-side framework failed to load.');
//]]>
</script>
<script type="text/javascript">
//<![CDATA[
var PageMethods = function() {
PageMethods.initializeBase(this);
this._timeout = 0;
this._userContext = null;
this._succeeded = null;
this._failed = null;
}
PageMethods.prototype = {
_get_path:function() {
 var p = this.get_path();
 if (p) return p;
 else return PageMethods._staticInstance.get_path();},
verifyLogin:function(loginOrAddress,succeededCallback, failedCallback, userContext) {
/// <param name="loginOrAddress" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'verifyLogin',false,{loginOrAddress:loginOrAddress},succeededCallback,failedCallback,userContext); },
login:function(loginOrAddress,pass,succeededCallback, failedCallback, userContext) {
/// <param name="loginOrAddress" type="String">System.String</param>
/// <param name="pass" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'login',false,{loginOrAddress:loginOrAddress,pass:pass},succeededCallback,failedCallback,userContext); },
register:function(loginOrAddress,loginOrAddress2,pass,email,succeededCallback, failedCallback, userContext) {
/// <param name="loginOrAddress" type="String">System.String</param>
/// <param name="loginOrAddress2" type="String">System.String</param>
/// <param name="pass" type="String">System.String</param>
/// <param name="email" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'register',false,{loginOrAddress:loginOrAddress,loginOrAddress2:loginOrAddress2,pass:pass,email:email},succeededCallback,failedCallback,userContext); },
finishRegistration:function(pMessage,pSigningAddress,pSignature,loginOrAddress,loginOrAddress2,pass,val,pMinBTCToSpend,refUserID,email,succeededCallback, failedCallback, userContext) {
/// <param name="pMessage" type="String">System.String</param>
/// <param name="pSigningAddress" type="String">System.String</param>
/// <param name="pSignature" type="String">System.String</param>
/// <param name="loginOrAddress" type="String">System.String</param>
/// <param name="loginOrAddress2" type="String">System.String</param>
/// <param name="pass" type="String">System.String</param>
/// <param name="val" type="String">System.String</param>
/// <param name="pMinBTCToSpend" type="String">System.String</param>
/// <param name="refUserID" type="Number">System.Int32</param>
/// <param name="email" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'finishRegistration',false,{pMessage:pMessage,pSigningAddress:pSigningAddress,pSignature:pSignature,loginOrAddress:loginOrAddress,loginOrAddress2:loginOrAddress2,pass:pass,val:val,pMinBTCToSpend:pMinBTCToSpend,refUserID:refUserID,email:email},succeededCallback,failedCallback,userContext); },
resetPassword:function(pMessage,pSigningAddress,pSignature,succeededCallback, failedCallback, userContext) {
/// <param name="pMessage" type="String">System.String</param>
/// <param name="pSigningAddress" type="String">System.String</param>
/// <param name="pSignature" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'resetPassword',false,{pMessage:pMessage,pSigningAddress:pSigningAddress,pSignature:pSignature},succeededCallback,failedCallback,userContext); },
verifyPasswordReset:function(pBitAddress,pReqID,pVReqID,succeededCallback, failedCallback, userContext) {
/// <param name="pBitAddress" type="String">System.String</param>
/// <param name="pReqID" type="Number">System.Int32</param>
/// <param name="pVReqID" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'verifyPasswordReset',false,{pBitAddress:pBitAddress,pReqID:pReqID,pVReqID:pVReqID},succeededCallback,failedCallback,userContext); },
saveResetPassword:function(pPass,pUsID,pVUsID,succeededCallback, failedCallback, userContext) {
/// <param name="pPass" type="String">System.String</param>
/// <param name="pUsID" type="String">System.String</param>
/// <param name="pVUsID" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'saveResetPassword',false,{pPass:pPass,pUsID:pUsID,pVUsID:pVUsID},succeededCallback,failedCallback,userContext); },
resetPassByEmail:function(loginOrAddress,succeededCallback, failedCallback, userContext) {
/// <param name="loginOrAddress" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'resetPassByEmail',false,{loginOrAddress:loginOrAddress},succeededCallback,failedCallback,userContext); },
resetPasswordEmail:function(rpguid,pass,succeededCallback, failedCallback, userContext) {
/// <param name="rpguid" type="String">System.String</param>
/// <param name="pass" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'resetPasswordEmail',false,{rpguid:rpguid,pass:pass},succeededCallback,failedCallback,userContext); },
deleteMessage:function(pMsgID,csrf1,csrf2,succeededCallback, failedCallback, userContext) {
/// <param name="pMsgID" type="String">System.String</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'deleteMessage',false,{pMsgID:pMsgID,csrf1:csrf1,csrf2:csrf2},succeededCallback,failedCallback,userContext); },
getDepositAddress:function(succeededCallback, failedCallback, userContext) {
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'getDepositAddress',false,{},succeededCallback,failedCallback,userContext); },
buyTickets:function(pTickets,toDrawNumber,csrf1,csrf2,succeededCallback, failedCallback, userContext) {
/// <param name="pTickets" type="String">System.String</param>
/// <param name="toDrawNumber" type="Number">System.Int32</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'buyTickets',false,{pTickets:pTickets,toDrawNumber:toDrawNumber,csrf1:csrf1,csrf2:csrf2},succeededCallback,failedCallback,userContext); },
requestTickets:function(pTxtMessageRequest,pAddressRequest,pSignature,csrf1,csrf2,succeededCallback, failedCallback, userContext) {
/// <param name="pTxtMessageRequest" type="String">System.String</param>
/// <param name="pAddressRequest" type="String">System.String</param>
/// <param name="pSignature" type="String">System.String</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'requestTickets',false,{pTxtMessageRequest:pTxtMessageRequest,pAddressRequest:pAddressRequest,pSignature:pSignature,csrf1:csrf1,csrf2:csrf2},succeededCallback,failedCallback,userContext); },
verifyTicketsRequestProcess:function(succeededCallback, failedCallback, userContext) {
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'verifyTicketsRequestProcess',false,{},succeededCallback,failedCallback,userContext); },
getNewTickets:function(pLastTicketId,pLastMessageID,csrf1,csrf2,succeededCallback, failedCallback, userContext) {
/// <param name="pLastTicketId" type="Number">System.Int32</param>
/// <param name="pLastMessageID" type="Number">System.Int32</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'getNewTickets',false,{pLastTicketId:pLastTicketId,pLastMessageID:pLastMessageID,csrf1:csrf1,csrf2:csrf2},succeededCallback,failedCallback,userContext); },
getMorePlayedTickets:function(pPlayedTicketsAmountAlreadyGot,succeededCallback, failedCallback, userContext) {
/// <param name="pPlayedTicketsAmountAlreadyGot" type="Number">System.Int32</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'getMorePlayedTickets',false,{pPlayedTicketsAmountAlreadyGot:pPlayedTicketsAmountAlreadyGot},succeededCallback,failedCallback,userContext); },
updateBalance:function(succeededCallback, failedCallback, userContext) {
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'updateBalance',false,{},succeededCallback,failedCallback,userContext); },
stopGame:function(idILGame,csrf1,csrf2,succeededCallback, failedCallback, userContext) {
/// <param name="idILGame" type="Number">System.Int32</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'stopGame',false,{idILGame:idILGame,csrf1:csrf1,csrf2:csrf2},succeededCallback,failedCallback,userContext); },
playGameRound:function(idILGame,roundsToAdvance,isAutoPlay,stopAfterRounds,stopIfBalanceDecrease,stopIfBalanceIncrease,stopIfWinningsDropFromMaximumProfit,betMultiplier,prizeMultiplier,selectedNumbers,betValue,csrf1,csrf2,succeededCallback, failedCallback, userContext) {
/// <param name="idILGame" type="Number">System.Int32</param>
/// <param name="roundsToAdvance" type="Number">System.Int32</param>
/// <param name="isAutoPlay" type="Boolean">System.Boolean</param>
/// <param name="stopAfterRounds" type="Number">System.Int32</param>
/// <param name="stopIfBalanceDecrease" type="Number">System.Decimal</param>
/// <param name="stopIfBalanceIncrease" type="Number">System.Decimal</param>
/// <param name="stopIfWinningsDropFromMaximumProfit" type="Number">System.Decimal</param>
/// <param name="betMultiplier" type="Number">System.Decimal</param>
/// <param name="prizeMultiplier" type="Number">System.Decimal</param>
/// <param name="selectedNumbers" type="String">System.String</param>
/// <param name="betValue" type="Number">System.Decimal</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'playGameRound',false,{idILGame:idILGame,roundsToAdvance:roundsToAdvance,isAutoPlay:isAutoPlay,stopAfterRounds:stopAfterRounds,stopIfBalanceDecrease:stopIfBalanceDecrease,stopIfBalanceIncrease:stopIfBalanceIncrease,stopIfWinningsDropFromMaximumProfit:stopIfWinningsDropFromMaximumProfit,betMultiplier:betMultiplier,prizeMultiplier:prizeMultiplier,selectedNumbers:selectedNumbers,betValue:betValue,csrf1:csrf1,csrf2:csrf2},succeededCallback,failedCallback,userContext); },
playGameRound2:function(idILGame,roundsToAdvance,isAutoPlay,stopAfterRounds,stopIfBalanceDecrease,stopIfBalanceIncrease,stopIfWinningsDropFromMaximumProfit,betMultiplier,prizeMultiplier,selectedNumbers,betValue,csrf1,csrf2,pHE,succeededCallback, failedCallback, userContext) {
/// <param name="idILGame" type="Number">System.Int32</param>
/// <param name="roundsToAdvance" type="Number">System.Int32</param>
/// <param name="isAutoPlay" type="Boolean">System.Boolean</param>
/// <param name="stopAfterRounds" type="Number">System.Int32</param>
/// <param name="stopIfBalanceDecrease" type="Number">System.Decimal</param>
/// <param name="stopIfBalanceIncrease" type="Number">System.Decimal</param>
/// <param name="stopIfWinningsDropFromMaximumProfit" type="Number">System.Decimal</param>
/// <param name="betMultiplier" type="Number">System.Decimal</param>
/// <param name="prizeMultiplier" type="Number">System.Decimal</param>
/// <param name="selectedNumbers" type="String">System.String</param>
/// <param name="betValue" type="Number">System.Decimal</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="pHE" type="Number">System.Decimal</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'playGameRound2',false,{idILGame:idILGame,roundsToAdvance:roundsToAdvance,isAutoPlay:isAutoPlay,stopAfterRounds:stopAfterRounds,stopIfBalanceDecrease:stopIfBalanceDecrease,stopIfBalanceIncrease:stopIfBalanceIncrease,stopIfWinningsDropFromMaximumProfit:stopIfWinningsDropFromMaximumProfit,betMultiplier:betMultiplier,prizeMultiplier:prizeMultiplier,selectedNumbers:selectedNumbers,betValue:betValue,csrf1:csrf1,csrf2:csrf2,pHE:pHE},succeededCallback,failedCallback,userContext); },
getLastPlayedInstantLotteryGame:function(lastIDILGameSeen,succeededCallback, failedCallback, userContext) {
/// <param name="lastIDILGameSeen" type="Number">System.Int32</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'getLastPlayedInstantLotteryGame',false,{lastIDILGameSeen:lastIDILGameSeen},succeededCallback,failedCallback,userContext); },
updateDNSCD:function(csrf1,csrf2,succeededCallback, failedCallback, userContext) {
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'updateDNSCD',false,{csrf1:csrf1,csrf2:csrf2},succeededCallback,failedCallback,userContext); },
updateLBW:function(succeededCallback, failedCallback, userContext) {
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'updateLBW',false,{},succeededCallback,failedCallback,userContext); },
claimFreeBitcoins:function(recaptchaChallenge,recaptchaResponse,csrf1,csrf2,succeededCallback, failedCallback, userContext) {
/// <param name="recaptchaChallenge" type="String">System.String</param>
/// <param name="recaptchaResponse" type="String">System.String</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
return this._invoke(this._get_path(), 'claimFreeBitcoins',false,{recaptchaChallenge:recaptchaChallenge,recaptchaResponse:recaptchaResponse,csrf1:csrf1,csrf2:csrf2},succeededCallback,failedCallback,userContext); }}
PageMethods.registerClass('PageMethods',Sys.Net.WebServiceProxy);
PageMethods._staticInstance = new PageMethods();
PageMethods.set_path = function(value) {
PageMethods._staticInstance.set_path(value); }
PageMethods.get_path = function() { 
/// <value type="String" mayBeNull="true">The service url.</value>
return PageMethods._staticInstance.get_path();}
PageMethods.set_timeout = function(value) {
PageMethods._staticInstance.set_timeout(value); }
PageMethods.get_timeout = function() { 
/// <value type="Number">The service timeout.</value>
return PageMethods._staticInstance.get_timeout(); }
PageMethods.set_defaultUserContext = function(value) { 
PageMethods._staticInstance.set_defaultUserContext(value); }
PageMethods.get_defaultUserContext = function() { 
/// <value mayBeNull="true">The service default user context.</value>
return PageMethods._staticInstance.get_defaultUserContext(); }
PageMethods.set_defaultSucceededCallback = function(value) { 
 PageMethods._staticInstance.set_defaultSucceededCallback(value); }
PageMethods.get_defaultSucceededCallback = function() { 
/// <value type="Function" mayBeNull="true">The service default succeeded callback.</value>
return PageMethods._staticInstance.get_defaultSucceededCallback(); }
PageMethods.set_defaultFailedCallback = function(value) { 
PageMethods._staticInstance.set_defaultFailedCallback(value); }
PageMethods.get_defaultFailedCallback = function() { 
/// <value type="Function" mayBeNull="true">The service default failed callback.</value>
return PageMethods._staticInstance.get_defaultFailedCallback(); }
PageMethods.set_enableJsonp = function(value) { PageMethods._staticInstance.set_enableJsonp(value); }
PageMethods.get_enableJsonp = function() { 
/// <value type="Boolean">Specifies whether the service supports JSONP for cross domain calling.</value>
return PageMethods._staticInstance.get_enableJsonp(); }
PageMethods.set_jsonpCallbackParameter = function(value) { PageMethods._staticInstance.set_jsonpCallbackParameter(value); }
PageMethods.get_jsonpCallbackParameter = function() { 
/// <value type="String">Specifies the parameter name that contains the callback function name for a JSONP request.</value>
return PageMethods._staticInstance.get_jsonpCallbackParameter(); }
PageMethods.set_path("userAccount.aspx");
PageMethods.verifyLogin= function(loginOrAddress,onSuccess,onFailed,userContext) {
/// <param name="loginOrAddress" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.verifyLogin(loginOrAddress,onSuccess,onFailed,userContext); }
PageMethods.login= function(loginOrAddress,pass,onSuccess,onFailed,userContext) {
/// <param name="loginOrAddress" type="String">System.String</param>
/// <param name="pass" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.login(loginOrAddress,pass,onSuccess,onFailed,userContext); }
PageMethods.register= function(loginOrAddress,loginOrAddress2,pass,email,onSuccess,onFailed,userContext) {
/// <param name="loginOrAddress" type="String">System.String</param>
/// <param name="loginOrAddress2" type="String">System.String</param>
/// <param name="pass" type="String">System.String</param>
/// <param name="email" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.register(loginOrAddress,loginOrAddress2,pass,email,onSuccess,onFailed,userContext); }
PageMethods.finishRegistration= function(pMessage,pSigningAddress,pSignature,loginOrAddress,loginOrAddress2,pass,val,pMinBTCToSpend,refUserID,email,onSuccess,onFailed,userContext) {
/// <param name="pMessage" type="String">System.String</param>
/// <param name="pSigningAddress" type="String">System.String</param>
/// <param name="pSignature" type="String">System.String</param>
/// <param name="loginOrAddress" type="String">System.String</param>
/// <param name="loginOrAddress2" type="String">System.String</param>
/// <param name="pass" type="String">System.String</param>
/// <param name="val" type="String">System.String</param>
/// <param name="pMinBTCToSpend" type="String">System.String</param>
/// <param name="refUserID" type="Number">System.Int32</param>
/// <param name="email" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.finishRegistration(pMessage,pSigningAddress,pSignature,loginOrAddress,loginOrAddress2,pass,val,pMinBTCToSpend,refUserID,email,onSuccess,onFailed,userContext); }
PageMethods.resetPassword= function(pMessage,pSigningAddress,pSignature,onSuccess,onFailed,userContext) {
/// <param name="pMessage" type="String">System.String</param>
/// <param name="pSigningAddress" type="String">System.String</param>
/// <param name="pSignature" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.resetPassword(pMessage,pSigningAddress,pSignature,onSuccess,onFailed,userContext); }
PageMethods.verifyPasswordReset= function(pBitAddress,pReqID,pVReqID,onSuccess,onFailed,userContext) {
/// <param name="pBitAddress" type="String">System.String</param>
/// <param name="pReqID" type="Number">System.Int32</param>
/// <param name="pVReqID" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.verifyPasswordReset(pBitAddress,pReqID,pVReqID,onSuccess,onFailed,userContext); }
PageMethods.saveResetPassword= function(pPass,pUsID,pVUsID,onSuccess,onFailed,userContext) {
/// <param name="pPass" type="String">System.String</param>
/// <param name="pUsID" type="String">System.String</param>
/// <param name="pVUsID" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.saveResetPassword(pPass,pUsID,pVUsID,onSuccess,onFailed,userContext); }
PageMethods.resetPassByEmail= function(loginOrAddress,onSuccess,onFailed,userContext) {
/// <param name="loginOrAddress" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.resetPassByEmail(loginOrAddress,onSuccess,onFailed,userContext); }
PageMethods.resetPasswordEmail= function(rpguid,pass,onSuccess,onFailed,userContext) {
/// <param name="rpguid" type="String">System.String</param>
/// <param name="pass" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.resetPasswordEmail(rpguid,pass,onSuccess,onFailed,userContext); }
PageMethods.deleteMessage= function(pMsgID,csrf1,csrf2,onSuccess,onFailed,userContext) {
/// <param name="pMsgID" type="String">System.String</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.deleteMessage(pMsgID,csrf1,csrf2,onSuccess,onFailed,userContext); }
PageMethods.getDepositAddress= function(onSuccess,onFailed,userContext) {
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.getDepositAddress(onSuccess,onFailed,userContext); }
PageMethods.buyTickets= function(pTickets,toDrawNumber,csrf1,csrf2,onSuccess,onFailed,userContext) {
/// <param name="pTickets" type="String">System.String</param>
/// <param name="toDrawNumber" type="Number">System.Int32</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.buyTickets(pTickets,toDrawNumber,csrf1,csrf2,onSuccess,onFailed,userContext); }
PageMethods.requestTickets= function(pTxtMessageRequest,pAddressRequest,pSignature,csrf1,csrf2,onSuccess,onFailed,userContext) {
/// <param name="pTxtMessageRequest" type="String">System.String</param>
/// <param name="pAddressRequest" type="String">System.String</param>
/// <param name="pSignature" type="String">System.String</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.requestTickets(pTxtMessageRequest,pAddressRequest,pSignature,csrf1,csrf2,onSuccess,onFailed,userContext); }
PageMethods.verifyTicketsRequestProcess= function(onSuccess,onFailed,userContext) {
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.verifyTicketsRequestProcess(onSuccess,onFailed,userContext); }
PageMethods.getNewTickets= function(pLastTicketId,pLastMessageID,csrf1,csrf2,onSuccess,onFailed,userContext) {
/// <param name="pLastTicketId" type="Number">System.Int32</param>
/// <param name="pLastMessageID" type="Number">System.Int32</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.getNewTickets(pLastTicketId,pLastMessageID,csrf1,csrf2,onSuccess,onFailed,userContext); }
PageMethods.getMorePlayedTickets= function(pPlayedTicketsAmountAlreadyGot,onSuccess,onFailed,userContext) {
/// <param name="pPlayedTicketsAmountAlreadyGot" type="Number">System.Int32</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.getMorePlayedTickets(pPlayedTicketsAmountAlreadyGot,onSuccess,onFailed,userContext); }
PageMethods.updateBalance= function(onSuccess,onFailed,userContext) {
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.updateBalance(onSuccess,onFailed,userContext); }
PageMethods.stopGame= function(idILGame,csrf1,csrf2,onSuccess,onFailed,userContext) {
/// <param name="idILGame" type="Number">System.Int32</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.stopGame(idILGame,csrf1,csrf2,onSuccess,onFailed,userContext); }
PageMethods.playGameRound= function(idILGame,roundsToAdvance,isAutoPlay,stopAfterRounds,stopIfBalanceDecrease,stopIfBalanceIncrease,stopIfWinningsDropFromMaximumProfit,betMultiplier,prizeMultiplier,selectedNumbers,betValue,csrf1,csrf2,onSuccess,onFailed,userContext) {
/// <param name="idILGame" type="Number">System.Int32</param>
/// <param name="roundsToAdvance" type="Number">System.Int32</param>
/// <param name="isAutoPlay" type="Boolean">System.Boolean</param>
/// <param name="stopAfterRounds" type="Number">System.Int32</param>
/// <param name="stopIfBalanceDecrease" type="Number">System.Decimal</param>
/// <param name="stopIfBalanceIncrease" type="Number">System.Decimal</param>
/// <param name="stopIfWinningsDropFromMaximumProfit" type="Number">System.Decimal</param>
/// <param name="betMultiplier" type="Number">System.Decimal</param>
/// <param name="prizeMultiplier" type="Number">System.Decimal</param>
/// <param name="selectedNumbers" type="String">System.String</param>
/// <param name="betValue" type="Number">System.Decimal</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.playGameRound(idILGame,roundsToAdvance,isAutoPlay,stopAfterRounds,stopIfBalanceDecrease,stopIfBalanceIncrease,stopIfWinningsDropFromMaximumProfit,betMultiplier,prizeMultiplier,selectedNumbers,betValue,csrf1,csrf2,onSuccess,onFailed,userContext); }
PageMethods.playGameRound2= function(idILGame,roundsToAdvance,isAutoPlay,stopAfterRounds,stopIfBalanceDecrease,stopIfBalanceIncrease,stopIfWinningsDropFromMaximumProfit,betMultiplier,prizeMultiplier,selectedNumbers,betValue,csrf1,csrf2,pHE,onSuccess,onFailed,userContext) {
/// <param name="idILGame" type="Number">System.Int32</param>
/// <param name="roundsToAdvance" type="Number">System.Int32</param>
/// <param name="isAutoPlay" type="Boolean">System.Boolean</param>
/// <param name="stopAfterRounds" type="Number">System.Int32</param>
/// <param name="stopIfBalanceDecrease" type="Number">System.Decimal</param>
/// <param name="stopIfBalanceIncrease" type="Number">System.Decimal</param>
/// <param name="stopIfWinningsDropFromMaximumProfit" type="Number">System.Decimal</param>
/// <param name="betMultiplier" type="Number">System.Decimal</param>
/// <param name="prizeMultiplier" type="Number">System.Decimal</param>
/// <param name="selectedNumbers" type="String">System.String</param>
/// <param name="betValue" type="Number">System.Decimal</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="pHE" type="Number">System.Decimal</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.playGameRound2(idILGame,roundsToAdvance,isAutoPlay,stopAfterRounds,stopIfBalanceDecrease,stopIfBalanceIncrease,stopIfWinningsDropFromMaximumProfit,betMultiplier,prizeMultiplier,selectedNumbers,betValue,csrf1,csrf2,pHE,onSuccess,onFailed,userContext); }
PageMethods.getLastPlayedInstantLotteryGame= function(lastIDILGameSeen,onSuccess,onFailed,userContext) {
/// <param name="lastIDILGameSeen" type="Number">System.Int32</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.getLastPlayedInstantLotteryGame(lastIDILGameSeen,onSuccess,onFailed,userContext); }
PageMethods.updateDNSCD= function(csrf1,csrf2,onSuccess,onFailed,userContext) {
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.updateDNSCD(csrf1,csrf2,onSuccess,onFailed,userContext); }
PageMethods.updateLBW= function(onSuccess,onFailed,userContext) {
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.updateLBW(onSuccess,onFailed,userContext); }
PageMethods.claimFreeBitcoins= function(recaptchaChallenge,recaptchaResponse,csrf1,csrf2,onSuccess,onFailed,userContext) {
/// <param name="recaptchaChallenge" type="String">System.String</param>
/// <param name="recaptchaResponse" type="String">System.String</param>
/// <param name="csrf1" type="String">System.String</param>
/// <param name="csrf2" type="String">System.String</param>
/// <param name="succeededCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="failedCallback" type="Function" optional="true" mayBeNull="true"></param>
/// <param name="userContext" optional="true" mayBeNull="true"></param>
PageMethods._staticInstance.claimFreeBitcoins(recaptchaChallenge,recaptchaResponse,csrf1,csrf2,onSuccess,onFailed,userContext); }
//]]>
</script>
<input type="hidden" name="__VIEWSTATEGENERATOR" id="__VIEWSTATEGENERATOR" value="C56C2AA1" />
<div id="fb-root"></div>
<div id="general" style="width: 961px;">
<div id="top">
<div id="left-content">
<div style="float:left; width: 171px; margin-left:40px; cursor: pointer" onclick="location.href = 'default.aspx?awqs=y'">
<img alt="logo" height="133" src="Images/bit-logo.png" />
</div>
<div style="text-align:center; margin: 0 auto; margin-top:20px; float:left;cursor: pointer" onclick="location.href = 'default.aspx?awqs=y'">
<img alt="logo" height="64" src="Images/yet-logo.png" width="203" /><br />
<span style="color: #FFFFFF; letter-spacing: 2px; font-family:Verdana; font-weight:bold; text-align:center; text-shadow: 1px 1px 1px #000000">Yet Another <br />BiTCoin Lottery</span>
</div>
<div class="clear"></div>
<div class="next-draw outerContainer">
<div class="innerContainer">
<div class="element" style="font-size: 14px"><strong style="color:black">Next Draw: 2019-03-06 00:00 UTC</strong></div>
</div>
</div>
</div>
<div id="right-content">
<ul style="width: auto; height: 1px; display: inline-block; white-space: nowrap; font-size: 13px; font-weight: normal; letter-spacing: normal; line-height: normal; font-family: Verdana; padding: 0px; float: right; margin-right: 33px; margin-top: 26px; " id="menuLang">
<li style="border: 0; margin: 0; padding: 2px" class="ui-state-focus" id="liMenuLang">English
<ul style="width: auto; display: inline-block; white-space: nowrap; border: 0; margin: 0; padding: 0px">
<li style="border: 0; margin: 0; padding: 0px"><a href="http://yabtcl.com/userAccount.aspx?lng=en">English</a></li>
<li style="border: 0; margin: 0; padding: 0px"><a href="http://yabtcl.com/userAccount.aspx?lng=zh-Hans">中文(简体)</a></li>
<li style="border: 0; margin: 0; padding: 0px"><a href="http://yabtcl.com/userAccount.aspx?lng=es">español</a></li>
<li style="border: 0; margin: 0; padding: 0px"><a href="http://yabtcl.com/userAccount.aspx?lng=pt">português (Brasil)</a></li>
<li style="border: 0; margin: 0; padding: 0px"><a href="http://yabtcl.com/userAccount.aspx?lng=ru">русский</a></li>
<li style="border: 0; margin: 0; padding: 0px"><a href="http://yabtcl.com/userAccount.aspx?lng=de">Deutsch</a></li>
<li style="border: 0; margin: 0; padding: 0px"><a href="http://yabtcl.com/userAccount.aspx?lng=tr">Türkçe</a></li>
<li style="border: 0; margin: 0; padding: 0px"><a href="http://yabtcl.com/userAccount.aspx?lng=th">ไทย</a></li>
</ul>
</li>
</ul>
<div class="total-prizes">
<span style="color: yellow; text-shadow: 1px  0px 0px #000000, -1px  0px 0px #000000, 0px  1px 0px #000000, 0px -1px 0px #000000, 1px  1px 0px #000000, -1px -1px 0px #000000, 1px -1px 0px #000000, -1px  1px 0px #000000">TOTAL PRIZES IN JACKPOTS</span>
</div>
<div style="width: 495px">
<table style="margin: 0 auto">
<tr>
<td>
<img alt="" src="Images/red-bitcoin.png" />
</td>
<td>
<div class="value-jack" style="text-shadow: 1px  0px 0px #000000, -1px  0px 0px #000000, 0px  1px 0px #000000, 0px -1px 0px #000000, 1px  1px 0px #000000, -1px -1px 0px #000000, 1px -1px 0px #000000, -1px  1px 0px #000000, 2px  0px 0px #000000, 2px  1px 0px #000000, 2px -1px 0px #000000, -2px  0px 0px #000000, -2px  1px 0px #000000, -2px -1px 0px #000000, 0px  2px 0px #000000, 1px  2px 0px #000000, -1px  2px 0px #000000, 0px -2px 0px #000000, 1px -2px 0px #000000, -1px -2px 0px #000000, 2px  2px 0px #000000, -2px -2px 0px #000000, 2px -2px 0px #000000, -2px  2px 0px #000000">
152.6414
</div>
</td>
</tr>
</table>
<div style="text-align: right; padding-right: 10px">
<div class="fb-like" data-href="https://facebook.com/yabtcl" data-layout="button" data-action="like" data-show-faces="false" data-share="false" style="display: inline"></div>
<a href="https://twitter.com/share" class="twitter-share-button" data-related="yabtcl" data-count="none">Tweet</a>
<div class="g-plusone" data-size="medium" data-href="https://yabtcl.com" data-annotation="none"></div>
</div>
</div>
</div>
</div>
<div class="clear"></div>
<div id="menu-line">
<center>
<div id="menu">
<div id="menuRight" class="menu-right">
<a id="aLoginSignup" style="text-decoration: none; color:white" href="javascript:void(0)">
<b>Login or Sign Up</b></a>
</div>
<div class="menu-left">
<table cellspacing="0" cellpadding="0" id="tblMenu"><tbody><tr><td><a href="default.aspx?awqs=y&lng=en">Home</a></td><td><a href="draws.aspx?lng=en">Draws</a></td><td><a href="help.aspx?lng=en">Help</a></td><td><a href="/cdn-cgi/l/email-protection#4a332b283e29260a332b283e292664292527">Contact&nbsp;Us</a></td><td><a href="freeLottery.aspx?lng=en">Free Lottery</a></td></tr></tbody></table>
</div>
</div>
</center>
<div class="clear"></div>
</div>
<div>
<img alt="top" height="18" src="Images/bg-page-top.png" width="961" />
</div>
<div id="pages-content" style="background-image:url('Images/bg-pages.png')">
<div style="padding: 0px 34px 0px 34px; min-height: 350px">
<div style="font-family: Verdana; font-size: 14px">
<div style="text-align: center; font-size: 21px; font-weight: bold;">LOTTERIES</div>
<div id="tabsLotteryTypes">
<ul>
<li><a href="#tabsLotteryTypes-2">Instant Lottery</a></li>
<li><a href="javascript: void(0)">Free Lottery</a></li>
</ul>
<div id="tabsLotteryTypes-2">
<div style="text-align:center; padding-left: 10px; float: left; width: 170px;">
<b>Prizes per hit</b><br />
<table cellpadding="2" id="tblPrizesPerHits" style="border: 1px solid #000000; border-collapse: collapse; width: 130px; margin: 0 auto">
<tr class="trPrizeGreen" id="trSelectMoreNumbers">
<td style="text-align: center; border: 1px solid #000000">Select more numbers</td>
</tr>
</table>
</div>
<div style="text-align:center; float: left; padding-left: 10px; width: 490px;">
<b>Choose From 1 To 16 Numbers</b><br />
<table class="tblTicket" id="Table1" style="margin: 0 auto;">
<tbody><tr><td>
<table cellspacing="5" id="tblInstantLotteryNumbers"><tr><td class="tnInstantNotSelected">01</td><td class="tnInstantNotSelected">02</td><td class="tnInstantNotSelected">03</td><td class="tnInstantNotSelected">04</td><td class="tnInstantNotSelected">05</td><td class="tnInstantNotSelected">06</td><td class="tnInstantNotSelected">07</td><td class="tnInstantNotSelected">08</td><td class="tnInstantNotSelected">09</td><td class="tnInstantNotSelected">10</td></tr><tr><td class="tnInstantNotSelected">11</td><td class="tnInstantNotSelected">12</td><td class="tnInstantNotSelected">13</td><td class="tnInstantNotSelected">14</td><td class="tnInstantNotSelected">15</td><td class="tnInstantNotSelected">16</td><td class="tnInstantNotSelected">17</td><td class="tnInstantNotSelected">18</td><td class="tnInstantNotSelected">19</td><td class="tnInstantNotSelected">20</td></tr><tr><td class="tnInstantNotSelected">21</td><td class="tnInstantNotSelected">22</td><td class="tnInstantNotSelected">23</td><td class="tnInstantNotSelected">24</td><td class="tnInstantNotSelected">25</td><td class="tnInstantNotSelected">26</td><td class="tnInstantNotSelected">27</td><td class="tnInstantNotSelected">28</td><td class="tnInstantNotSelected">29</td><td class="tnInstantNotSelected">30</td></tr><tr><td class="tnInstantNotSelected">31</td><td class="tnInstantNotSelected">32</td><td class="tnInstantNotSelected">33</td><td class="tnInstantNotSelected">34</td><td class="tnInstantNotSelected">35</td><td class="tnInstantNotSelected">36</td><td class="tnInstantNotSelected">37</td><td class="tnInstantNotSelected">38</td><td class="tnInstantNotSelected">39</td><td class="tnInstantNotSelected">40</td></tr><tr><td class="tnInstantNotSelected">41</td><td class="tnInstantNotSelected">42</td><td class="tnInstantNotSelected">43</td><td class="tnInstantNotSelected">44</td><td class="tnInstantNotSelected">45</td><td class="tnInstantNotSelected">46</td><td class="tnInstantNotSelected">47</td><td class="tnInstantNotSelected">48</td><td class="tnInstantNotSelected">49</td><td class="tnInstantNotSelected">50</td></tr><tr><td class="tnInstantNotSelected">51</td><td class="tnInstantNotSelected">52</td><td class="tnInstantNotSelected">53</td><td class="tnInstantNotSelected">54</td><td class="tnInstantNotSelected">55</td><td class="tnInstantNotSelected">56</td><td class="tnInstantNotSelected">57</td><td class="tnInstantNotSelected">58</td><td class="tnInstantNotSelected">59</td><td class="tnInstantNotSelected">60</td></tr><tr><td class="tnInstantNotSelected">61</td><td class="tnInstantNotSelected">62</td><td class="tnInstantNotSelected">63</td><td class="tnInstantNotSelected">64</td><td class="tnInstantNotSelected">65</td><td class="tnInstantNotSelected">66</td><td class="tnInstantNotSelected">67</td></tr></table>
</td></tr>
</tbody></table>
</div>
<div id="divGameConfiguration" style="float: left; padding-left: 10px; padding-top: 20px; text-align: center; width: 188px;"><b>Bet value: <br><input type="text" style="width: 100px; margin-top: 5px;" id="tbBetValue" /> BTC</b><br /><input type="button" class="miniDefaultButton" id="btBetValueMin" value="Min" style="margin-top: 5px" /><input type="button" class="miniDefaultButton" id="btBetValued2" value="/2" /><input type="button" class="miniDefaultButton" id="btBetValuex2" value="x2" /><input type="button" class="miniDefaultButton" id="btBetValueMax" value="Max" /><br /><br /><div id="divButtonsPlay2"><input type="button" id="btPlayInstant" value="Play" class="defaultButton" style="padding: 5px;" />&nbsp;<input type="button" id="btClearInstant" value="Clear" class="defaultButton" style="margin-bottom: 10px; padding: 5px;" /><br /><div id="divShowDialogChangeHouseEdge" style="display: none; font-size: smaller; margin-bottom: 5px; font-weight: bold;"><input type="checkbox" id="cbShowDialogsChangeHouseEdge" /><label for="cbShowDialogsChangeHouseEdge">Show dialog to select house edge</label></div><span style="font-size: smaller; display: none" id="spMaxPayoutPerBet">Maximum payout per bet is <span id="spMaximumPayout"></span> BTC, so the maximum bet for this amount of chosen numbers is <span id="spMaximumBet"></span> BTC<br /></span><br /><input type="button" value="Free Bitcoins" id="btFreeBitcoins" class="defaultButton btFreeBitcoinsAnimation" style="font-size: smaller;" /><br /><br /></div><div id="divButtonsStop" style="display: none"><input type="button" id="btStopInstant" value="Stop" class="defaultButton" /><br /><div id="divAdvanceRounds" style="font-weight: bold; margin-top: 20px; font-size: 13px">Advance <br><input type="text" style="width: 80px; margin-top: 5px;" id="tbAdvanceRounds" /> rounds (Max of 1000 rounds per request)<br /><input type="button" id="btAdvanceInstant" value="Advance" class="defaultButton" style="margin-top: 5px" /></div></div>
</div>
<div style="clear: both"></div>
<div id="divQuickPick" style="padding: 10px; font-weight: bold;">
<table style="margin: 0 auto;"><tr>
<td>Pick random numbers: </td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">1</td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">2</td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">3</td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">4</td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">5</td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">6</td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">7</td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">8</td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">9</td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">10</td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">11</td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">12</td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">13</td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">14</td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">15</td>
<td style="border: 1px solid; padding: 3px; cursor: pointer">16</td>
</tr></table>
<div style="clear: both"></div>
</div>
<div id="divCurrentGame" style="font-weight: bold; display: none;"><center>
<center>
<div id="divWinningNumbers" style="overflow: hidden; margin: 10px 0px; width: 656px">
<center>
<div id="divWN1" style="left: 700px; opacity:0"></div>
<div id="divWN2" style="left: 700px; opacity:0"></div>
<div id="divWN3" style="left: 700px; opacity:0"></div>
<div id="divWN4" style="left: 700px; opacity:0"></div>
<div id="divWN5" style="left: 700px; opacity:0"></div>
<div id="divWN6" style="left: 700px; opacity:0"></div>
<div id="divWN7" style="left: 700px; opacity:0"></div>
<div id="divWN8" style="left: 700px; opacity:0"></div>
<div id="divWN9" style="left: 700px; opacity:0"></div>
<div id="divWN10" style="left: 700px; opacity:0"></div>
<div id="divWN11" style="left: 700px; opacity:0"></div>
<div id="divWN12" style="left: 700px; opacity:0"></div>
<div id="divWN13" style="left: 700px; opacity:0"></div>
<div id="divWN14" style="left: 700px; opacity:0"></div>
<div id="divWN15" style="left: 700px; opacity:0"></div>
<div id="divWN16" style="left: 700px; opacity:0"></div>
</center>
</div>
</center>
<div style="clear: both;"></div>
<table id="tblGameStatus" style="font-size: smaller; margin-top: 10px; text-align: center; border-collapse: collapse; display: none;" cellpadding="5" cellspacing="0"><tr style="background-color: #aed4b2"><th style="border: 1px solid black;">Round</th><th style="border: 1px solid black;">Bet value</th><th style="border: 1px solid black">Winnings</th><th style="border: 1px solid black;">Maximum profit got</th><th style="border: 1px solid black;">House edge</th></tr><tr><td id="tdRounds" style="border: 1px solid black;">0</td><td id="tdBetValue" style="border: 1px solid black;">0</td><td id="tdWinnings" style="border: 1px solid black;">0</td><td id="tdCouldHaveWon" style="color: #00BB00; border: 1px solid black;">0</td><td id="tdHouseEdgeGame" style="color: #00BB00; border: 1px solid black;">0</td></tr></table>
</center></div>
<hr />
<div style="text-align: left; padding-left: 15px; padding-right: 30px; float: left; margin-bottom: 10px">
<b>
<input type="checkbox" id="cbAutoPlay" /><label for="cbAutoPlay">Auto Play</label></b></div>
<div style="text-align: left; padding-left: 30px; padding-right: 30px; float: left; ">
<b>
<input type="checkbox" id="cbPlayForFun" checked="checked" disabled="disabled" /><label for="cbPlayForFun">Play for fun</label>
<span id="spPlayForFunBalance"> - Balance: <span id="spFreeCreditsValue">1000</span> Play BTC</span></b></div>
<div style="clear: both">
</div>
<div style="border: 1px solid; text-align: left; padding: 5px; margin: 0px 0px 10px 10px; float: left; display: none;" id="divAutoPlay">
<div style="float: left"><input type="checkbox" id="cbStopAfterRounds" checked="checked" /><label for="cbStopAfterRounds">Stop after </label><input type="text" style="width: 80px" id="tbMaximumRounds" value="10" /><label for="cbStopAfterRounds"> rounds</label><br />
<input type="checkbox" id="cbStopIfBalanceDrops" /><label for="cbStopIfBalanceDrops">Stop if balance drops by </label><input type="text" style="width: 80px" id="tbStopIfBalanceDrops" disabled="disabled" /><label for="cbStopIfBalanceDrops"> BTC</label><br />
<input type="checkbox" id="cbStopIfBalanceIncreases" /><label for="cbStopIfBalanceIncreases">Stop if balance increases by </label><input type="text" style="width: 80px" id="tbStopIfBalanceIncreases" disabled="disabled" /><label for="cbStopIfBalanceIncreases"> BTC</label><br />
<input type="checkbox" id="cbStopIfWinningsDropFromMaximumProfit" /><label for="cbStopIfWinningsDropFromMaximumProfit">Stop if your winnings drop </label><input type="text" style="width: 80px" id="tbStopIfWinningsDropFromMaximumProfit" disabled="disabled" /><label for="cbStopIfWinningsDropFromMaximumProfit"> BTC from the maximum profit got.</label><br />
<input type="checkbox" id="cbMultiplyYourBetBy" /><label for="cbMultiplyYourBetBy">Multiply your bet by </label><input type="text" style="width: 80px" id="tbBetMultiplier" disabled="disabled" /><label for="cbMultiplyYourBetBy"> when your prize multiplier is lower than </label><input type="text" style="width: 80px" id="tbPrizeMultiplier" disabled="disabled" /><label for="cbMultiplyYourBetBy">x.</label><br />
<span style="font-size: smaller;">Your bet will return to the original value when you hit a higher multiplier. And if your bet become higher than the maximum bet value, the game will stop.<br />Clicking on any line of the &quot;Prizes Per Hit&quot; table, the multipliers fields above wil be filled with the correct value if you want to use the martingale system.</span></div><div style="clear: both"></div>
</div>
<div style="clear: both">
</div>
<hr />
<div style="padding-bottom: 20px"><div id="divButtonsPlay"><b>The house edge percentage for your games is <select id="slctHouseEdge"><option>1</option><option>0.9</option><option>0.8</option><option>0.7</option><option>0.6</option><option>0.5</option><option>0.4</option><option>0.3</option><option>0.2</option><option>0.1</option><option>0</option></select>%.<br /><a href="help.aspx#vHouseEdge" target="_blank">Click here to learn how to lower it</a></b><br /><br /><b></b></div></div>
<div id="dialogConfirmPlay" style="display: none">
<span id="spConfirmStartGame"></span><br /><br />
<input type="checkbox" id="cbDisableConfirmStartGame" /><label for="cbDisableConfirmStartGame">Do not show this confirmation when playing with real BTC</label>
</div>
<div id="dialogHouseEdgeChange" style="display: none; font-size: 14px; padding: 25px; font-weight: bold">
Starting on 2016-10-21, the maximum bet value will depend on the house edge of the game.
<br /><br />
As this game has an house edge of <span id="spCurrHouseEdgeDialogHouseEdgeChange"></span>%, the maximum bet value is <span id="spMaxBetValueDialogHouseEdgeChange"></span> BTC. What do you want to do?<br />
<input type="button" id="btRaiseHouseEdge" value="raise" class="defaultButton orangeButton" style="width: 450px; white-space: normal; margin-top: 20px;" />
<input type="button" id="btKeepHouseEdge" value="keep" class="defaultButton orangeButton" style="width: 450px; white-space: normal; margin-bottom: 20px" />
<input type="checkbox" id="cbDoNotShowDialogHouseEdge" /><label for="cbDoNotShowDialogHouseEdge">Do not show this confirmation dialog during this session and remember the selected action.</label>
</div>
<div id="dialogHouseEdgeChangeMultiplier" style="display: none; font-size: 14px; padding: 25px; font-weight: bold">
Starting on 2016-10-21, the maximum bet value will depend on the house edge of the game.
<br /><br />
As this game has an house edge of <span id="spCurrHouseEdgeDialogHouseEdgeChangeMultiplier"></span>%, the maximum bet value is <span id="spMaxBetValueDialogHouseEdgeChangeMultiplier"></span> BTC. What do you want to do?<br /><br />
As you have the multiplier option enabled, you can choose what house edge you want for your game, so you can have a higher maximum bet value:
<br /><br />
Raise the house edge to <select id="slctHouseEdgeDialogHouseEdgeChangeMultiplier"></select>% and your maximum bet will be <span id="spMaxBetValueDialogHouseEdgeChangeMultiplierSelect"></span> BTC
<br />
<center>
<input type="button" id="btConfirmChangeHouseEdgeMultiplier" value="Continue" class="defaultButton orangeButton" style="margin-bottom: 20px; margin-top: 20px; font-size: 14px" /><br /></center>
<input type="checkbox" id="cbDoNotShowDialogHouseEdgeMultiplier" /><label for="cbDoNotShowDialogHouseEdgeMultiplier">Do not show this confirmation dialog during this session and remember the selected house edge</label>
</div>
<hr />
<div id="divInstantLotteryLastGames">
<ul>
<li><a href="#tabsInstantLotteryLastGames">All Games</a></li>
<li style="background: none; background-color: #FFFFA0;"><a href="#tabsLeaderBoard">Leaderboard</a></li>
</ul>
<div id="tabsInstantLotteryLastGames"><center><span style="font-size: 16px; font-weight: bold;">Last Games</span><br />
<table id="tblLastGames">
<tr>
<th>Date</th>
<th>Player</th>
<th>Rounds</th>
<th>Bet value</th>
<th>Winnings</th>
<th>Maximum profit got</th>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000020', '1', '1pQHiFQZFeBX1u94DLEQPd5vT7wtp3qoRwQXjcAu1GHUafW2UEN29XKpPyc3NPB977MWrB4P4rZxxLg7xcs9tLv', 'redbool09', '-0.00000020', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:20', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:20 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #FF0000">-0.00000020</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000080', '1', '4G4U7XGmhs5BmbuZZBiX7U6fDSgfdBVBD9sHMqbp2pWeUULmFG84WaLLsdHvwsmf8EoHvAABVvbRS31y6A4weqPk', '18atEaY5HFr3aJzwZQpZTuzLEj2ktvFwH2', '0.00000160', '0.00000160', '0', '0.00000000', '0.00000000', '2019-03-03 18:20', '0.00000000', '0', '0', '30-40-67', '1')">
<td>2019-03-03 18:20 UTC</td>
<td>18atEaY5HFr3aJzwZQpZTuzLEj2ktvFwH2</td>
<td>1</td>
<td>0.00000080</td>
<td style="color: #00BB00">0.00000160</td>
<td>0.00000160</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00001280', '1', 'wZwPtepRyZA7fdmBSSXALAUWAWLHJGvRZ3exNeTn4s61eRpq3JiWM3UkT1RVcJwK1GyZYhjo4iftVacBLHbUYgk', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '0.00005120', '0.00005120', '0', '0.00000000', '0.00000000', '2019-03-03 18:20', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:20 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #00BB00">0.00005120</td>
<td>0.00005120</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00001280', '4', '2Xw5nWjjS6iUaRsegXCwHUfngnggsC2qi4Bii34yJsngDbpadUi2ivqSPgDyAQE8usJBUei7SVYsDNjJGyN3QJUZ', 'Nairobi1981', '-0.00005192', '0.00000000', '10', '0.00000000', '0.00000100', '2019-03-03 18:19', '0.00000000', '1.00970874', '104', '4-6-8-9-15-19-26-33-40-41-44-51-54-58-59', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>Nairobi1981</td>
<td>4</td>
<td>0.00001280</td>
<td style="color: #FF0000">-0.00005192</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000300', '1', '552SPMGmKDDaEiXuTGHpnDM8Qkg9UnfvjzJTzrXCEcWcevHV195TdXfvaq416H1PRxhmPc7Dnp1riyUW27qdt8VZ', 'viktor5254', '-0.00000300', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:20', '0.00000000', '0', '0', '13-15-17-22-24-26-28-33-35-36-38-42-43-45-47', '1')">
<td>2019-03-03 18:20 UTC</td>
<td>viktor5254</td>
<td>1</td>
<td>0.00000300</td>
<td style="color: #FF0000">-0.00000300</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '2', '2U7VL4uqK6vQZDnkmMC6yVno4VYWf1DCyCNJoYbVym39ySPnExUAkMSK1LfGUX2owmNxFCKvhXNb7rByVkJtY7Bc', 'Durotan', '-0.00000020', '0.00000000', '30', '0.00000000', '0.00000000', '2019-03-03 18:20', '0.00000000', '0', '0', '2-5-7-12-14-17-32-36-41-45-47-52-59-60', '1')">
<td>2019-03-03 18:20 UTC</td>
<td>Durotan</td>
<td>2</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00000020</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000040', '2', '3GanKuvfDkTR1SpYARtg3XQQqWZsX62YKvDKq7n8sTU8o44yiaLu48Hrr5QLVwtwXNVvJvLjHqbidmdREhenD9UW', 'Samuel17', '0.00000040', '0.00000080', '0', '0.00000000', '0.00000000', '2019-03-03 18:20', '0.00000000', '0', '0', '12-39-42', '1')">
<td>2019-03-03 18:20 UTC</td>
<td>Samuel17</td>
<td>2</td>
<td>0.00000040</td>
<td style="color: #00BB00">0.00000040</td>
<td>0.00000080</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000040', '1', 'jV7FB5JKjETfvSqTC9nFcjVJADNacKEZNcvxkm4AF4ZsoU8aHDEGW5XpsxLgiJeYmo8HbP5KKm9Ngn6GecjiSfY', '18atEaY5HFr3aJzwZQpZTuzLEj2ktvFwH2', '-0.00000040', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '30-40-67', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>18atEaY5HFr3aJzwZQpZTuzLEj2ktvFwH2</td>
<td>1</td>
<td>0.00000040</td>
<td style="color: #FF0000">-0.00000040</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '10', 'WZ1LMhkfpTJHow9JfAJemjWwJypf5x17EGKceSBSzE9TzR69Cihm3JCs7QgNp6TmdWdmyRojzr5CeA6yeYdKyML', 'Lowelaserna', '0.00000040', '0.00000060', '10', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '6-7-8-10-13-22-28-31-33-40-50-52-57-63-64', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>Lowelaserna</td>
<td>10</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00000040</td>
<td>0.00000060</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '10', '2Au7QNc4etERJQn3rWAJ5ja362woei6hVjmUY3AUKVRJ96xyuBGi9AYy2nYq95rTFhTAPC7pdzLD3Rt6vmSbXXUb', 'kristina0202', '0.00000080', '0.00000080', '10', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '24-28-31-40-67', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>kristina0202</td>
<td>10</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00000080</td>
<td>0.00000080</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00001280', '1', '22goHxzDNWsFM7GdSnZeosNWEm55eSCp7M6gqYCQvP8q71HcbgEKwNmJyxC1b8Ysz2Uq4gzyRUHTYLyXFbfy6Wkb', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '-0.00001280', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:19 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #FF0000">-0.00001280</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000020', '1', '4bfGtB9wbLLueZk398Fr5564jYH2MNXDjxRKKJUjVVEAWoFo7war5gnHJfPLHJQjGP5pxTRHsuLEuEsxfDs3WN3r', 'redbool09', '-0.00000020', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #FF0000">-0.00000020</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000300', '1', 'ueZZVRamK8TovCDPyxiyjE84BMzEVtgoiJ13kva7c6kkCy3YAwqtJQXeJC3WUEtJj3bVRjyzkohWaGZdEwPKoLR', 'viktor5254', '-0.00000300', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '13-15-17-22-24-26-28-33-35-36-38-42-43-45-47', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>viktor5254</td>
<td>1</td>
<td>0.00000300</td>
<td style="color: #FF0000">-0.00000300</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000200', '1', '8NyCjm9Nwz7wocFXcAghaFiU9MA6GMyWXz2NCV4wbH3omKc195SFM59cMwgbZ5eCnd9PQYsgGAq2ZPJnA8LvGNJ', 'rookster', '-0.00000200', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '7-10-13-14-19-28-29-45-53-55-57-59-61', '0.4')">
<td>2019-03-03 18:19 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #FF0000">-0.00000200</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000040', '1', 'GodouMjkK4VUtSZDb8pypYTVsyD72WDxR4uWY8MnZtVBt9ekkGRa3tenS4Bnqfb7YZK7DzZotm9yGySaWNtGv17', '18atEaY5HFr3aJzwZQpZTuzLEj2ktvFwH2', '-0.00000040', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '30-40-56-67', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>18atEaY5HFr3aJzwZQpZTuzLEj2ktvFwH2</td>
<td>1</td>
<td>0.00000040</td>
<td style="color: #FF0000">-0.00000040</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00001280', '1', '4uKsSycva89Vmrb3tCLyZAmYumL2WhLJJx3aRB3KPvcgaypehcAmkdmaK79LAMTnXTqHvNxMQDh6hMzjVkaMMxpZ', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:19 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000020', '1', '3GrpbGvc7uTWBe33RxSWZG2bk5kZzrmBNbjJKwY1S5kYCHihyxGnRcmhWdV5sLBJHeArbH9zqGUvvNHW97ApA9YE', 'redbool09', '-0.00000020', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #FF0000">-0.00000020</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000200', '1', '5tTdKi6xExmCL8v8u7Qw1eohKtXXaPVL2AJ5KXxF4Vses6vtrKG171mDnvnTDtoPxGdPk69UAk1r8TFQ1TFL1FEx', 'rookster', '-0.00000200', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '7-10-13-14-19-28-29-45-53-55-57-59-61', '0.4')">
<td>2019-03-03 18:19 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #FF0000">-0.00000200</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000300', '1', '3utES9bb3mxbX4EDMf2q9JZ2DM76jeQVTsALgh2pHgiifnvmqZSnSQrgzz3Xh2MXmtdeS4qcUMA5TLiNkgGSD93Z', 'viktor5254', '-0.00000300', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '13-15-17-22-24-26-28-33-35-36-38-42-43-45-47', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>viktor5254</td>
<td>1</td>
<td>0.00000300</td>
<td style="color: #FF0000">-0.00000300</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000040', '3', '4BWCvD53HdSJeiGGbzaoPjwr3y4Nfdu9xGrqW1sapd4Fwu4GUQWDCNtBURSEvx418SLKDDNcBiB5txe3wEvFojsn', 'Samuel17', '0.00000040', '0.00000080', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '11-18-25', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>Samuel17</td>
<td>3</td>
<td>0.00000040</td>
<td style="color: #00BB00">0.00000040</td>
<td>0.00000080</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '10', '27ocaNvQjxuesY3rXrtgXJTapGYGkYkS4KCgU4Gox4TUGdy47MFqEFsc3fkoxkC91czS9RygUaS9XSTScUbYeWmZ', '169GRo4dcRC2N6XL94wGpgFarbZXsQbVQe', '0.00000150', '0.00000170', '10', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '3-5-8-9-17-18-19-20-23-38-39-41-42-46-54-55', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>169GRo4dcRC2N6XL94wGpgFarbZXsQbVQe</td>
<td>10</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00000150</td>
<td>0.00000170</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '10', '2w6TVMS4BRgSaDRp7xSVRFqbhoUfyFjfWZqkTEaZniyv3fpVDxMr1jsojs2gGEbCxc6xPW6hE19ycaxLDTHPtgNR', 'Durotan', '0.00000080', '0.00000100', '30', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-7-14-17-36-45-47-59-60', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>Durotan</td>
<td>10</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00000080</td>
<td>0.00000100</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00001280', '1', '4SGSzaWLgv4ohKJBDVS3wc5GVrmFoHqWbe6ZFZpnB2h8jTnDeBUhakvwudagcB1S6SV4NHBa2FbSAe5bpVfXCRcH', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '-0.00001280', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:19 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #FF0000">-0.00001280</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000020', '1', '2mWySEAhNTjcD2q1GHW4G3utZmtTdp9bLWKf5wcKSqToyj551FZrirnvLiznivQedcMvjJiVBCngQ4FoBxKpPhw2', 'redbool09', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '38', 'Gti8mjfdFSoEXvRU774AwRYMvxM4zGipZ7vtjxXR9eGhr7QUYPPSaTemDRecjyg8shLAMccVC7tASdARTQmcooV', 'wtkmail', '-0.00000120', '0.00000070', '1000', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '6-9-14-19-36-40-52-58-66', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>wtkmail</td>
<td>38</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00000120</td>
<td>0.00000070</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000300', '1', '38snXzDvyBjTyB1ZN9FiDUrWYA3ZUfU7Tf21F3HhMDZxLsvXrVfmoUd12pM5GLxWitcEEdi46nvRNRc5qBPKxTrA', 'viktor5254', '-0.00000300', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '13-15-17-22-24-26-28-33-35-36-38-42-43-45-47', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>viktor5254</td>
<td>1</td>
<td>0.00000300</td>
<td style="color: #FF0000">-0.00000300</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000030', '5', 'FGR7jXrgDLKT3deM9fdeAgym17rCBgLcq9bjJJpRQrkGWYo2xGKLQUwzLBMr63YmqaqesFj1T4zafmwWsMKteif', 'Nver', '-0.00000060', '0.00000000', '5', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '1-3-7-8-10-11-12-13-16-17-18-26-27-56-65-67', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>Nver</td>
<td>5</td>
<td>0.00000030</td>
<td style="color: #FF0000">-0.00000060</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00001280', '1', '2BKPnk7QhDLfhdme6T8B3v9tsMnm3wRfYE8AWRsdS6EuAB9HHKavU8nk9yaeGwn5TGSHqHMxRAFbYxT11oLommC', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:19 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000300', '1', '4jCvtJNB1gBgzKdjoTPqrkpVb1jcATaKcjRkuyjS2afoybdWVjWeYrJHkUNpWjBLYSBXE5RAef9VJ7NCgTidVbLZ', 'viktor5254', '-0.00000300', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '13-15-17-22-24-26-28-33-35-36-38-42-43-45-47', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>viktor5254</td>
<td>1</td>
<td>0.00000300</td>
<td style="color: #FF0000">-0.00000300</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000200', '1', '239y8f7251aW5pxNbfGVTtS7Y29XDAQhJyegFF3dwJAaSFF1os7FBjBsa2aiUweviQH84SaUwiZEYSZWv78jiqEN', 'rookster', '0.00000200', '0.00000200', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '2-8-10-27-29-31-35-36-41-42-52-58-61', '0.4')">
<td>2019-03-03 18:19 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #00BB00">0.00000200</td>
<td>0.00000200</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000300', '1', '2yTtcHr4wLnvmnykrxvUWX7AKy4izJrfzzFPNvMt66aUcg7jN4vPgZzqGcoxgKvveQTjNxs85vBGAP7xADwUr9Hr', 'viktor5254', '0.00002700', '0.00002700', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '13-15-17-22-24-26-28-33-35-36-38-42-43-45-47', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>viktor5254</td>
<td>1</td>
<td>0.00000300</td>
<td style="color: #00BB00">0.00002700</td>
<td>0.00002700</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00001280', '1', 'MsZhofMgZMLkzQFncnUxJ3cALNzvxcWNTXUZQfNrgyegk9GcCwLn7DMMHQhpwce2ooz63owFNzzLMfCAUxLBw51', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:19 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000200', '1', '4E5465F1Qont2pk8e2dQC5nQVGA3ap5buHnhoD5V95tD3kUKod1PeDGMxZ5Ecngy7Eix1m8XEX8D8hu9QbtSDGuz', 'rookster', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '2-8-10-27-29-31-35-36-41-42-52-58-61', '0.4')">
<td>2019-03-03 18:19 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '1', '2KtqCjJSr1P97t3Zq3VYV37kuqo8BQRQrYCKxpfNwCEZtMTTwTAG2oMusMMfTqidyw5mKwvSFwFDjVTtJBGPmuWs', '12CNsUvazAFHJpeHa4zu36WZU3a5sfvcFC', '0.00000031', '0.00000031', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '60', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>12CNsUvazAFHJpeHa4zu36WZU3a5sfvcFC</td>
<td>1</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00000031</td>
<td>0.00000031</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00001280', '1', '5ba4vxmCdg8vLkt7YSkLzTj4hx49sVoWn5NYPD9k58ZkoUMxGAhiEu9hRRTkLiwNgN3f9G6t27dir4LPoDcnRCTG', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '-0.00001280', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:19 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #FF0000">-0.00001280</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000040', '6', '2hVDsyakmCqudnGgk2jdhEWmAWHQ1j8wDK7xRmYDw7rX1nnaesr7wrcToxvLN3p5TCU2uCRp5TvsWX52mc6imSCg', 'Samuel17', '0.00000120', '0.00000160', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '27-43-54', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>Samuel17</td>
<td>6</td>
<td>0.00000040</td>
<td style="color: #00BB00">0.00000120</td>
<td>0.00000160</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000300', '1', '4xGWu1Dut7z2pvr8ESzsQfMfznY1n8mASGQ8BRhP5bnJw5JNTQeUiimXtw8Y9soqxCb5YEGrfqNnJLqxekmx3kKt', 'viktor5254', '-0.00000300', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '13-15-17-22-24-26-28-33-35-36-38-42-43-45-47', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>viktor5254</td>
<td>1</td>
<td>0.00000300</td>
<td style="color: #FF0000">-0.00000300</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00002060', '10', '3wADhtdPPGYABiDTjtgqE1a9W6JCt7pcnfuLMFtQUaE3ZqHGxEwhAjbEWkiAtAekwr3hYQNurXcofnVAERFS2hJG', 'LIS777', '0.00004120', '0.00004120', '10', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-25-49-57-60', '0')">
<td>2019-03-03 18:19 UTC</td>
<td>LIS777</td>
<td>10</td>
<td>0.00002060</td>
<td style="color: #00BB00">0.00004120</td>
<td>0.00004120</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000200', '1', '4Cm8PBsYAsdG9qtRbQvBVLgjGpnvxrkeSrvxHZ6YFFU6Xz4W3S8AjHBXT4WCXn5B8ZfsrxtKscgZbk1VNxKkeFrh', 'rookster', '-0.00000200', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '2-8-10-27-29-31-35-36-41-42-52-58-61', '0.4')">
<td>2019-03-03 18:19 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #FF0000">-0.00000200</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000020', '1', '51DJp4RsJkFWdRTZNSCbMCFjQDeqiMBgE3uMbGQpRDyeoS1k1BWUQFgWQTS25i3DcvofCjw9ioWcJfr4oKc7UhKX', 'redbool09', '0.00000020', '0.00000020', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #00BB00">0.00000020</td>
<td>0.00000020</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00001280', '1', '5sGHSXJANfA2QQTsuinXHJ1pFjdiGoh4D67TzFi6BPTN5NyTmthth6JP6FrUhsp261P81PcxZCZLgPN8h52tTjb9', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '-0.00001280', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:19 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #FF0000">-0.00001280</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000300', '1', '5f8qgCpZzRQU9PxwpCnzd28WaSukYyu7fzQigVYEEXzpaafabseyPDXfTCs3mBLrjE5ekzB7nbmumxY7Cw4KHjou', 'viktor5254', '-0.00000300', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '13-15-17-22-24-26-28-33-35-36-38-42-43-45-47', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>viktor5254</td>
<td>1</td>
<td>0.00000300</td>
<td style="color: #FF0000">-0.00000300</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00001280', '6', '2crqhG4fRU82BgnQrZsZx37rkSFDzkFMC7BuMcCLs6xZdK4ubwWawouJXbnuRSkhj1cy5JkYnPebHPeTpaywWu2H', 'Nairobi1981', '-0.00007860', '0.00000000', '10', '0.00000000', '0.00000100', '2019-03-03 18:19', '0.00000000', '1.00970874', '104', '3-6-8-10-22-26-27-34-38-39-40-51-52-62-67', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>Nairobi1981</td>
<td>6</td>
<td>0.00001280</td>
<td style="color: #FF0000">-0.00007860</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000020', '1', '3YbduCenBxNDKZ8f2kg1NuyXya75wbQCYyPh73S6EduSaWiSVCMh7xVMBmpiQC1pQLy9GfYmUmPTh2GEF2N1G3NM', 'redbool09', '0.00000020', '0.00000020', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #00BB00">0.00000020</td>
<td>0.00000020</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000300', '1', '2mtiXVkAeBGgKXmZHQdPFKJ4HNTPmUqha2bVmLBDkHdxomvAb74FmEZsUTQBuwjbgK9WHRayi7GEssfMpUbRZBJC', 'viktor5254', '-0.00000300', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '13-15-17-22-24-26-28-33-35-36-38-42-43-45-47', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>viktor5254</td>
<td>1</td>
<td>0.00000300</td>
<td style="color: #FF0000">-0.00000300</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00001280', '1', 'r2WWcYAhpvUju8AJb7zkEqi47Hg4WnGr35ypHMwK7fCHUPAdGysBD7Sqdf585qLknVbDDQDkUG6NjJqkuZHvcf1', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:19 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000200', '1', '4S2KtBTafmKgoL8f8nPHEEGTbn4d9yxS2sKN7CM7syXoaqns2qHusPFpz6rSzRLp7NhTNV4Jj4KkF1nBJ6GC66Zo', 'rookster', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '8-13-15-16-18-22-23-24-33-46-49-50-53-56', '0.4')">
<td>2019-03-03 18:19 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000020', '1', '5eBRpyN9AtS4mYwf4ZtPd9RzR9EaM2rume7TCtn8zaHdDaTboDEamrkQ4THiELAmTpoPhgqGZZrpqyBTJf2tDshP', 'redbool09', '0.00000100', '0.00000100', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #00BB00">0.00000100</td>
<td>0.00000100</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000020', '1', '23P6NZfp5FXjzwVwk4CVuc9RhMKeS8Md5boSYhD32emQDS7DyufUCXeHbE3A15sQeHZcByFNkvixF4W23zJmFpPP', 'lyxx', '0.00000060', '0.00000060', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '2-5-12-17-24-28-32-36-40-44-48-53-56-61-65', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>lyxx</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #00BB00">0.00000060</td>
<td>0.00000060</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000300', '1', '48PykuEB4XPT8fqD6qbHGiet8NT3DSbnSexNViVW8S5Yymgs9CEJijURCAbNWPsEZfAcRx31CodcRR8Em2ZuJK1M', 'viktor5254', '-0.00000300', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '13-15-17-22-24-26-28-33-35-36-38-42-43-45-47', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>viktor5254</td>
<td>1</td>
<td>0.00000300</td>
<td style="color: #FF0000">-0.00000300</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000200', '1', '5zsrxCU4vvfrepdg6g8ZdZ2NTvaiH2uAA2VWzBF3k3uUnwTx7y69RuNNAFHtvafXbAP1x8pgHPuWDeVjJPfQySfN', 'rookster', '-0.00000200', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '8-13-15-16-18-22-23-24-33-46-49-50-53-56', '0.4')">
<td>2019-03-03 18:19 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #FF0000">-0.00000200</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00001280', '1', '3pXjmDykZrUpLfhPprQqtETydFZ5UWoLm5j5b7vn79FmiYYVW9FLu45ymnorwS9itoUckJ15nMRXPKRtgcFhQDgs', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '-0.00001280', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:19 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #FF0000">-0.00001280</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000020', '1', '2X5H4mFE6TMa5BhWYG6UATu9TEzz7ff6Gkre5mnVZ6VQnp6w6UEJbXAWWM85DSjtkoB5Beenkx6EPNAhYzDYF3iT', 'lyxx', '-0.00000020', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '2-5-12-17-24-28-32-36-40-44-48-53-56-61-65', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>lyxx</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #FF0000">-0.00000020</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000020', '1', '5jhM2ZwFoVuHdDcDfnwM9E2p4rJ5j8emAt83NN36oyqoB6Znmi4dYMZKtmNHSoXsowES6vPkVroWkE5yvWzuCjb6', 'redbool09', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000020', '5', 'NnsEb1WFHBhy2Mkj4tcc1scDjN2W1bSdXvwPcouPdiQPHes2tdXyqM1R6Z3DWC33SzqHjkWHfoM3oGWDpCred6y', '19qrYvEX62WD9kBdptVqprVLqmpAHGPQko', '-0.00000100', '0.00000000', '10', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '2-4-7-8-9-10-15-16-25-32-40-41-43-50-65-67', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>19qrYvEX62WD9kBdptVqprVLqmpAHGPQko</td>
<td>5</td>
<td>0.00000020</td>
<td style="color: #FF0000">-0.00000100</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000200', '1', '23JyNNGRCrGX89vTXdfvFsm3JqjyxV1fg5VfZ8cqHvRt7rwE52VhtRq4MxveK5v1xonTaCKiZYQb71gWz5EFqqZi', 'rookster', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '8-13-15-16-18-22-23-24-33-46-49-50-53-56', '0.4')">
<td>2019-03-03 18:19 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00001280', '1', '4LrTmvmznUSQLrzhLovfGCfbKG5ivP6tEf5wFVp3AaKbLj26rZLyJwiGiuZRWGcn2oN5K2pNWKLtSGj4EMLkLMf3', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:19 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '10', '31gn4m1WhdRmjvVJT4aPRdoHVQX945nkESPsc3tijPpwL6DR5UhXarcBAvwtd9DFMMLcQgYXTonpgP2rnhLspSuR', 'Lowelaserna', '0.00000280', '0.00000290', '10', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '6-7-8-10-13-22-28-31-33-40-50-52-57-63-64', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>Lowelaserna</td>
<td>10</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00000280</td>
<td>0.00000290</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000020', '1', '277sxnw7M338NPGcjtiKbXEkDn6FWGfRVoeYPJcM28KPG5sizqWWEKiaaquGrcBVdVpKypehppA56a1XJ2Ce5cAA', 'redbool09', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000200', '1', '5Qr6bomjh1HDvmKrfZFHz939o7rxLpEHMnNvBo4bJ6JBV6a6XeKwTgszs1YHNzDwjVSqoqrGim46xgWSGt6GoLup', 'rookster', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '8-13-15-16-18-22-23-24-33-46-49-50-53-56', '0.4')">
<td>2019-03-03 18:19 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000020', '1', '2pPiJRMYLr5ikotgzdEEiTG5ThxqoMyY2z72Bj5EF2VdDLq7d4VsvzmPHzWpp9m6wosGgmurRPMBjHUKDJB1bSEv', 'lyxx', '0.00000060', '0.00000060', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '2-5-12-17-24-28-32-36-40-44-48-53-56-61-65', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>lyxx</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #00BB00">0.00000060</td>
<td>0.00000060</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00001280', '1', 'KoX8bEhJJiVDYJxztKmrVrgSq9eBEqSGkWkn6KPxPXujCVT8pCfRjKJLJxJozjX8PQyZvvw7J2tnCQEDY8uQKZ3', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '-0.00001280', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:19 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #FF0000">-0.00001280</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000020', '1', '3rCS5LPZZsepBZciSahjE9fyr44nBTtANaJ4zKLm98HfHfPNbWQC6ksNv76fAJTnySdsievnk2qASZVcfgGQPgc3', 'redbool09', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '10', '2SH6RoNWNbcBzbbXRmvkVHXf49sZ1SsxTLpG6owWYacVRiCH6xWcfh9A5y4J1mNDAiDJJHjbfnQcd6XfvCpyuiKn', 'kristina0202', '-0.00000040', '0.00000010', '10', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '8-13-25-30-37-56', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>kristina0202</td>
<td>10</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00000040</td>
<td>0.00000010</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000200', '1', '4mZp6m4ssG8BV8Abk4WSuMwBc9D5MVvQE1mzuGc2zCvoWsfXtwGvqPR4ZghMadKaYrBpXJwANpt6uqc3wF9sw1gq', 'rookster', '0.00000200', '0.00000200', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '8-13-15-16-18-22-23-24-33-46-49-50-53-56', '0.4')">
<td>2019-03-03 18:19 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #00BB00">0.00000200</td>
<td>0.00000200</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '10', '3gLpSzrXjdc2apGgcDXQtFoTN7SQYGuPvsMWr2iuCAR7WxTVjdrkTkKfPDbk5fBkXexsNtpDJUoT35jePfkCdPhn', '169GRo4dcRC2N6XL94wGpgFarbZXsQbVQe', '-0.00000100', '0.00000000', '10', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '3-5-8-9-17-18-19-20-23-38-39-41-42-46-54-55', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>169GRo4dcRC2N6XL94wGpgFarbZXsQbVQe</td>
<td>10</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00000100</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000040', '2', '4Q93GZWcT7cwoEMtFKWYuukBCzBSnw1tR8KsRQeghjtp4hP7FfrM3q27Kjb2QPbRwsexLASe42NXmdBaAVPH5BWY', 'Samuel17', '-0.00000080', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '45-55', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>Samuel17</td>
<td>2</td>
<td>0.00000040</td>
<td style="color: #FF0000">-0.00000080</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000020', '1', 'N5DxHGTivdZrdQFg9rTDRuQZRVESTJPEQ8RXTNXF9zETVH7NvfGQYiUqy94ku1PkqVezFNDBfrrGSTJ3QQXXvVg', 'lyxx', '0.00000180', '0.00000180', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '2-5-12-17-24-28-32-36-40-44-48-53-56-61-65', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>lyxx</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #00BB00">0.00000180</td>
<td>0.00000180</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00001280', '1', '4qnQ5p1dEqBUH6DFTSiNoh4PDm8ij4CEm483UoXjTX2rkyMPpgK16MeJZuj2iBdRQqD3GP6RsJ2UK8tKR68y9tG7', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '-0.00001280', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:19 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #FF0000">-0.00001280</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000020', '1', '51zbVu6WDUPacsxWwY9qvia8b5ojK5QLsa1Pe44CjpRqKpLYZXV4s55B6FHbAK6oqE3rn9UKH9Fk6U13Z3K7Vxak', 'redbool09', '-0.00000020', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #FF0000">-0.00000020</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000020', '1', '43czN8GqN62jMkJkqw33i3krvFW2Ac7miw4MFF5mCqutfZdFGF711CYFgBdXNaP72bidkJ7gQ8WBUzUdViKdmYFw', 'lyxx', '-0.00000020', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '2-5-12-17-24-28-32-36-40-44-48-53-56-61-65', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>lyxx</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #FF0000">-0.00000020</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00001280', '1', '5tArTfRVCg6Mtwq1pNb4yV4tEvMJmXe9pW8tg9Koe3VbFgQ7gi4JThRRHymuzqTkkCXXq1XGPPJj8MJaTEEVuRc2', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '-0.00001280', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:19 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #FF0000">-0.00001280</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000020', '1', 'NW6XHqiHTSQ5e5DEnZVmqZufs4jnjbRot79BZbWtVhXPGCnMH4cFxiv15pSKfKVaBHRw9onRVUp1kVe4nRpjcen', 'redbool09', '-0.00000020', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #FF0000">-0.00000020</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000200', '1', '52wZZMgU7vunqCsh4sce4hpv9TpUJ2jreyR2hf2L1KyoPBK9nftWfAMKFqKKwZ7nxCto2hySQbrtFwpGVWqhqmW1', 'rookster', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '6-11-12-15-19-24-26-36-42-43-48-49-51', '0.4')">
<td>2019-03-03 18:19 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '15', '4vCR5WckcDGchMB38AXnWqfUvGp2kLUUo7GeZi7Exy8jGr5rVibfgrZoDTqFy6T9DyXjbfiY6hbVsYMP1wDUS5KJ', 'Durotan', '0.00000050', '0.00000090', '30', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-13-14-36-45-47-59-60', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>Durotan</td>
<td>15</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00000050</td>
<td>0.00000090</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00002060', '10', '559p8ygNPDMtpHmnrK887ETLzWKWAwVo9oxLBsFuZxg5ywNgNGqBzAqP3CZx2tXeXJ5MGwRSqJynrqZUgUptAJWn', 'LIS777', '0.00018540', '0.00020600', '10', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-25-49-57-60', '0')">
<td>2019-03-03 18:19 UTC</td>
<td>LIS777</td>
<td>10</td>
<td>0.00002060</td>
<td style="color: #00BB00">0.00018540</td>
<td>0.00020600</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000040', '2', 'crn9ia99dvkNswTdGbxtQau1Vieaya3EaXkiWBMSPBmybuheS65hKF7FuufgR7E8yrVYAdhMcrSKDzAPtV4rm7L', 'Samuel17', '-0.00000080', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '29-38-41', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>Samuel17</td>
<td>2</td>
<td>0.00000040</td>
<td style="color: #FF0000">-0.00000080</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00001280', '1', '3X9hdKQhTmcXdLrhGWnHvwPfvoiVFm1t8sH8cay6SX81dYSqMGRXF2nf1wX5akQr7jpsYtNCZHusf6ikcTAcsDAz', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '0.00005120', '0.00005120', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:19 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #00BB00">0.00005120</td>
<td>0.00005120</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000200', '1', '5j3DwhWm2ESrT4QmeF1YAVUc6bPGmuohSL7F9yK4HffYJWZWtzQCERpAs4JB4qrWXg3DDi77AYJbBpRGv1FvZDqC', 'rookster', '-0.00000200', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '6-11-12-15-19-24-26-36-42-43-48-49-51', '0.4')">
<td>2019-03-03 18:19 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #FF0000">-0.00000200</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000020', '1', 'MfTNR6FyWwHjupfWuyb2oj6ZtqUQH7v4wULkyZi2pfaoQnoAcPyGdUjVaCjk6vMMSFVDCxMGaF6vLs6tVSN3ZZZ', 'redbool09', '-0.00000020', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:19', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:19 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #FF0000">-0.00000020</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000050', '2', '2AKCG6XDteUnxNY1yWE5f5mWzoPDPNJYMZFrqdxqAQ7WAJjpVy6RAJEsZQHrL2bqHvfQpxrsMWocMMoKLA4XDdya', 'yashka2106', '-0.00000100', '0.00000000', '3', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '3-17-40-56-67', '1')">
<td>2019-03-03 18:18 UTC</td>
<td>yashka2106</td>
<td>2</td>
<td>0.00000050</td>
<td style="color: #FF0000">-0.00000100</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00001280', '1', '4rufim5ifCVcPzBXj3YXBE7rydC3KrZXw6qLMSDJJAPvkVrzNiodXLo3n1jSbHJGHHcv1FRnAMEiEv7PRJJwEqD1', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:18 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000020', '1', '3T3YajwcYb2wdHaSCK88UKkuyBD7baZXapBrMTuP4V2hf1iPmTVGuNgyu6Qgho8NCHca3Tk3yyseRHcuZpjsbvbM', 'redbool09', '0.00000020', '0.00000020', '0', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:18 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #00BB00">0.00000020</td>
<td>0.00000020</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000200', '1', 'UGsURR8LMjtfd8ngthDC3MGh5rV5Q78jtPeUksiBUN3bFKdyTEC39qq8vFSFd41t7eJpQUEzqhfc4rEwtj5ZnUp', 'rookster', '-0.00000200', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '2-3-14-15-18-25-36-41-45-46-47-58', '0.4')">
<td>2019-03-03 18:18 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #FF0000">-0.00000200</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000050', '5', '3kmyNPD3tfHf3eLftfxwxkWvFvGVxuzXni27eEtXeXW37HYEqdz49t2wU9wzgV5ABtSyvx4c6FhMfvD6hdqQjPoC', 'Nver', '0.00000450', '0.00000450', '5', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '1-3-7-8-10-11-12-13-16-17-18-26-27-56-65-67', '1')">
<td>2019-03-03 18:18 UTC</td>
<td>Nver</td>
<td>5</td>
<td>0.00000050</td>
<td style="color: #00BB00">0.00000450</td>
<td>0.00000450</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00001280', '1', 'mdpp7JTnoXr3tsh8fFEQGYzREYQ5peUZbDTrCcNdrpt17FRWjG19KQNUF1VhiKDbqLHH6XkCpwdGdHqevNWGaKW', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:18 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000200', '1', '5cUmWpdsn36iHTv32F8nQLD57TBLoxbxgrB4AZ8aCaPbvwSQGqbZGNwnSkCR5j3H2EhYgo5792XE4BLDee6Szi8z', 'rookster', '-0.00000200', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '2-3-14-15-18-25-36-41-45-46-47-58', '0.4')">
<td>2019-03-03 18:18 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #FF0000">-0.00000200</td>
<td>0.00000000</td>
</tr>

<tr class="greenCell" onclick="showGameDetails('0.00000040', '4', '41LgzHdi8c2ebGuszxbgtcqwCb9HvdtSJ6mWcTXftkNkxA2rmXsBXtogaM7cL6s5eBzL7iztTgyCee47zE88kJ2q', 'Samuel17', '-0.00000160', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '54', '1')">
<td>2019-03-03 18:18 UTC</td>
<td>Samuel17</td>
<td>4</td>
<td>0.00000040</td>
<td style="color: #FF0000">-0.00000160</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000050', '3', 'Ly9M1UJjiuv9VV524Tj82mBP6suSfc9PEEakLrjv1a7awoMzP9J5T4kSDv9fWyz3JLiTqepxGPGMc52wZ4tiQSn', 'yashka2106', '-0.00000050', '0.00000000', '3', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '46-53-65', '1')">
<td>2019-03-03 18:18 UTC</td>
<td>yashka2106</td>
<td>3</td>
<td>0.00000050</td>
<td style="color: #FF0000">-0.00000050</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00001280', '1', '4wLn2LUnUGGHN7e2QkYN24KmQgzv8HLdXCqpPkaghDFWZdH9kURQBQeAUFJDRZDx9vaSz83CuwZrEnLGzZEdGWYa', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:18 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000200', '1', 'Uts1GonpsSGJnENh16M4gUdKNM1MD64Cx7xsUpcrrwWaMZyqQQCrBzumuzSrm7MtHnuSyqAK4MKXoVVWCZ6rMhD', 'rookster', '-0.00000200', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '2-3-14-15-18-25-36-41-45-46-47-58', '0.4')">
<td>2019-03-03 18:18 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #FF0000">-0.00000200</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000020', '7', '5voiRdu9ZX4DpcM16Q6oW7k5gYKm4TtGZXJPS16pyxHPL6F6Ldp7kuNRDdeGoXBjV89vn7W5He4LDZJf2yDBGmGv', 'cooper1480', '-0.00000060', '0.00000040', '10', '0.00000000', '0.00000000', '2019-03-03 18:17', '0.00000000', '0', '0', '5-9-11-14-15-17-22-26-27-28-43-50-59-64-65', '1')">
<td>2019-03-03 18:17 UTC</td>
<td>cooper1480</td>
<td>7</td>
<td>0.00000020</td>
<td style="color: #FF0000">-0.00000060</td>
<td>0.00000040</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000200', '1', '2s5QUFNArV9LvK9XLqMV4sph4arbdtaCTiLSTn8xYaU3bcN5xW8o3yMi3bUQnjGgsZydWuKxzk547sDK1Zf9U2iB', 'rookster', '-0.00000200', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '2-3-14-15-18-25-36-41-45-46-47-58', '0.4')">
<td>2019-03-03 18:18 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #FF0000">-0.00000200</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00001280', '1', '3RQPqubrRWn1cCdjnb6wU8tR72wbJ8GhwLKtjQ5EqXCWTSUytZ7CzhCZFvYCTPCztTszWr6eV7vB641qLgShHWJ6', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '-0.00001280', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:18 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #FF0000">-0.00001280</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00001280', '9', '66qmtnBPkj8yBL6wQxoQi2hMRvoaQTBzbsLeZF6xscxvWXNmJfNpeASd6YbuusqQjVQEcJBx8oVm5Q96mEUy8oyf', 'Nairobi1981', '-0.00011958', '0.00000000', '10', '0.00000000', '0.00000100', '2019-03-03 18:18', '0.00000000', '1.00970874', '104', '3-4-15-16-18-20-21-31-32-35-36-37-39-47-53', '1')">
<td>2019-03-03 18:18 UTC</td>
<td>Nairobi1981</td>
<td>9</td>
<td>0.00001280</td>
<td style="color: #FF0000">-0.00011958</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000020', '1', 'WobH9t7GvGzEMUNG5wCEdSr32RqucXiA8TdC36fNezKQHbNzV1goqS4VXEhgHhTSU6RnLTDV5yHDWyw1wV5GHge', 'redbool09', '0.00000020', '0.00000020', '0', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:18 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #00BB00">0.00000020</td>
<td>0.00000020</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000200', '1', '3du7nq5B2342FqgAvpP62iPEsBtbxtxCJ76LficJrDE5CAmuo86MNGtn2fkHU7P5jzuEtzCxpd7eHn4KLEjeyunC', 'rookster', '-0.00000200', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '2-3-14-15-18-25-36-41-45-46-47-58', '0.4')">
<td>2019-03-03 18:18 UTC</td>
<td>rookster</td>
<td>1</td>
<td>0.00000200</td>
<td style="color: #FF0000">-0.00000200</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00001280', '1', '3HRCHbzx1GYEdj5ghWZdR3PDZtNbsz1c872GrbnXuopZQTKRhb3vvudijvz71fPNCpgdLfr1BPnMVFQEwLLqwwoT', '19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu', '0.00000000', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '10-30-38-40-48', '0.6')">
<td>2019-03-03 18:18 UTC</td>
<td>19hRm1XEP1rRYzthw2AKimsmY5CWGJYXMu</td>
<td>1</td>
<td>0.00001280</td>
<td style="color: #00BB00">0.00000000</td>
<td>0.00000000</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000020', '1', '4UE5bxYUJp4g4QSTw3oAFqfan7VtMvcrvCdznXS5DvPmynhywJEfyTaqTVumysxYtxgQGXcdG122w1gPP2uELh8r', 'redbool09', '-0.00000020', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '5-6-7-11-18-22-26-30-35-39-40-45-48', '1')">
<td>2019-03-03 18:18 UTC</td>
<td>redbool09</td>
<td>1</td>
<td>0.00000020</td>
<td style="color: #FF0000">-0.00000020</td>
<td>0.00000000</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000100', '1', '53ZpG35S53vVuaJiR8ashGE5GLtGBZpUdbHuuqrqZwCn6Zwx32kCdxKfHud4hS52q6XKfEwTmTUU7w4sBfdJ1HpT', '14a66ecJ96B7ZD5nj9NzAt7gawB7YatpAc', '-0.00000100', '0.00000000', '0', '0.00000000', '0.00000000', '2019-03-03 18:18', '0.00000000', '0', '0', '2-6-11-14-17-19-23-26-31-34-38-42-46-54-57', '1')">
<td>2019-03-03 18:18 UTC</td>
<td>14a66ecJ96B7ZD5nj9NzAt7gawB7YatpAc</td>
<td>1</td>
<td>0.00000100</td>
<td style="color: #FF0000">-0.00000100</td>
<td>0.00000000</td>
</tr>
</table>
</center></div>
<div id="tabsLeaderBoard"><center><span style="font-size: 18px; font-weight: bold;"><a href="javascript:void" onclick="$('#tblTopProfit').show('fast')">Top Profit With Free Bitcoins</a></span><br />
<table id="tblTopProfit" style="display:none;">
<tr>
<th>Date</th>
<th>Player</th>
<th>Started with</th>
<th>Profit</th>
<th>Profit in %</th>
</tr>
<tr class="whiteCell"><td>2019-02-12 23:53 UTC</td>
<td>better007007007</td>
<td>0.00000100</td>
<td>0.18218682</td>
<td>18218582 %</td>
</tr>
<tr class="greenCell"><td>2017-12-03 23:48 UTC</td>
<td>VictorG</td>
<td>0.00000200</td>
<td>0.28911927</td>
<td>14455863.5 %</td>
</tr>
<tr class="whiteCell"><td>2018-12-19 08:52 UTC</td>
<td>1010</td>
<td>0.00000100</td>
<td>0.09618600</td>
<td>9618500 %</td>
</tr>
<tr class="greenCell"><td>2018-11-13 17:26 UTC</td>
<td>lyxx</td>
<td>0.00000100</td>
<td>0.07475000</td>
<td>7474900 %</td>
</tr>
<tr class="whiteCell"><td>2016-06-29 17:30 UTC</td>
<td>Badger</td>
<td>0.00002000</td>
<td>1.39043335</td>
<td>6952066.75 %</td>
</tr>
<tr class="greenCell"><td>2018-07-04 06:12 UTC</td>
<td>LeVassseur</td>
<td>0.00000100</td>
<td>0.05998370</td>
<td>5998270 %</td>
</tr>
<tr class="whiteCell"><td>2018-01-26 23:13 UTC</td>
<td>vitek87</td>
<td>0.00000100</td>
<td>0.05239983</td>
<td>5239883 %</td>
</tr>
<tr class="greenCell"><td>2017-08-05 04:44 UTC</td>
<td>gerardo2298</td>
<td>0.00000500</td>
<td>0.25699428</td>
<td>5139785.6 %</td>
</tr>
<tr class="whiteCell"><td>2019-01-15 17:59 UTC</td>
<td>14e1xr7Cu2ybEpm2jeTazSBHZPgpiHqryk</td>
<td>0.00000100</td>
<td>0.04567637</td>
<td>4567537 %</td>
</tr>
<tr class="greenCell"><td>2018-04-06 01:21 UTC</td>
<td>walece</td>
<td>0.00000100</td>
<td>0.04101100</td>
<td>4101000 %</td>
</tr>
<tr class="whiteCell"><td>2018-10-10 07:13 UTC</td>
<td>Ghini</td>
<td>0.00000100</td>
<td>0.03795011</td>
<td>3794911 %</td>
</tr>
<tr class="greenCell"><td>2018-08-11 00:28 UTC</td>
<td>margon1488</td>
<td>0.00000100</td>
<td>0.03752420</td>
<td>3752320 %</td>
</tr>
<tr class="whiteCell"><td>2017-01-23 09:32 UTC</td>
<td>1000bmwx</td>
<td>0.00000500</td>
<td>0.17866385</td>
<td>3573177 %</td>
</tr>
<tr class="greenCell"><td>2018-01-22 19:25 UTC</td>
<td>Lucker</td>
<td>0.00000100</td>
<td>0.03147051</td>
<td>3146951 %</td>
</tr>
<tr class="whiteCell"><td>2018-04-23 23:48 UTC</td>
<td>LuckyGuy</td>
<td>0.00000100</td>
<td>0.03087800</td>
<td>3087700 %</td>
</tr>
<tr class="greenCell"><td>2017-06-11 16:10 UTC</td>
<td>p3p1ty_89</td>
<td>0.00000500</td>
<td>0.15320115</td>
<td>3063923 %</td>
</tr>
<tr class="whiteCell"><td>2017-08-21 21:08 UTC</td>
<td>Beyrut</td>
<td>0.00000200</td>
<td>0.05481946</td>
<td>2740873 %</td>
</tr>
<tr class="greenCell"><td>2018-01-28 16:01 UTC</td>
<td>1H3Pa3f5tRShfGkJK4H3x7234Dt91Q8CVf</td>
<td>0.00000100</td>
<td>0.02569404</td>
<td>2569304 %</td>
</tr>
<tr class="whiteCell"><td>2019-01-03 18:14 UTC</td>
<td>Melodyann69</td>
<td>0.00000100</td>
<td>0.02496470</td>
<td>2496370 %</td>
</tr>
<tr class="greenCell"><td>2018-07-20 08:53 UTC</td>
<td>13GdrrfUrPwdQtMMZKM59aeVB7gpAwNSyb</td>
<td>0.00000100</td>
<td>0.02443937</td>
<td>2443837 %</td>
</tr>
<tr class="whiteCell"><td>2018-02-13 17:00 UTC</td>
<td>X-win-X</td>
<td>0.00000100</td>
<td>0.02407325</td>
<td>2407225 %</td>
</tr>
<tr class="greenCell"><td>2018-07-30 00:19 UTC</td>
<td>14a66ecJ96B7ZD5nj9NzAt7gawB7YatpAc</td>
<td>0.00000100</td>
<td>0.02392007</td>
<td>2391907 %</td>
</tr>
<tr class="whiteCell"><td>2018-03-27 12:43 UTC</td>
<td>Anevjur</td>
<td>0.00000100</td>
<td>0.02336430</td>
<td>2336330 %</td>
</tr>
<tr class="greenCell"><td>2018-05-26 09:11 UTC</td>
<td>ipod80</td>
<td>0.00000100</td>
<td>0.02282114</td>
<td>2282014 %</td>
</tr>
<tr class="whiteCell"><td>2017-10-29 15:02 UTC</td>
<td>fomka</td>
<td>0.00000200</td>
<td>0.04488250</td>
<td>2244025 %</td>
</tr>
<tr class="greenCell"><td>2018-06-09 10:43 UTC</td>
<td>Notepad</td>
<td>0.00000100</td>
<td>0.02177990</td>
<td>2177890 %</td>
</tr>
<tr class="whiteCell"><td>2018-08-11 23:13 UTC</td>
<td>Borucia</td>
<td>0.00000100</td>
<td>0.02148006</td>
<td>2147906 %</td>
</tr>
<tr class="greenCell"><td>2018-08-21 13:41 UTC</td>
<td>Yurik1981</td>
<td>0.00000100</td>
<td>0.02039605</td>
<td>2039505 %</td>
</tr>
<tr class="whiteCell"><td>2017-10-19 22:24 UTC</td>
<td>Soulmen</td>
<td>0.00000200</td>
<td>0.03951380</td>
<td>1975590 %</td>
</tr>
<tr class="greenCell"><td>2019-02-17 01:23 UTC</td>
<td>cabelo</td>
<td>0.00000100</td>
<td>0.01948110</td>
<td>1948010 %</td>
</tr>
<tr class="whiteCell"><td>2018-01-06 12:06 UTC</td>
<td>azn412</td>
<td>0.00000100</td>
<td>0.01884853</td>
<td>1884753 %</td>
</tr>
<tr class="greenCell"><td>2018-05-30 02:02 UTC</td>
<td>16X1QVHLDH5h1yR6s7ZeE4haoXdtZDXyTM</td>
<td>0.00000100</td>
<td>0.01767500</td>
<td>1767400 %</td>
</tr>
<tr class="whiteCell"><td>2018-05-24 04:48 UTC</td>
<td>memnu</td>
<td>0.00000100</td>
<td>0.01740854</td>
<td>1740754 %</td>
</tr>
<tr class="greenCell"><td>2018-08-22 18:52 UTC</td>
<td>lis2582</td>
<td>0.00000100</td>
<td>0.01717953</td>
<td>1717853 %</td>
</tr>
<tr class="whiteCell"><td>2019-01-12 14:05 UTC</td>
<td>volk6666</td>
<td>0.00000100</td>
<td>0.01697140</td>
<td>1697040 %</td>
</tr>
<tr class="greenCell"><td>2018-11-01 13:05 UTC</td>
<td>haihien999</td>
<td>0.00000100</td>
<td>0.01692670</td>
<td>1692570 %</td>
 </tr>
<tr class="whiteCell"><td>2018-07-31 12:16 UTC</td>
<td>Engels</td>
<td>0.00000100</td>
<td>0.01680445</td>
<td>1680345 %</td>
</tr>
<tr class="greenCell"><td>2016-10-29 22:51 UTC</td>
<td>trofim811</td>
<td>0.00000500</td>
<td>0.08386206</td>
<td>1677141.2 %</td>
</tr>
<tr class="whiteCell"><td>2019-02-11 19:15 UTC</td>
<td>Sydro13</td>
<td>0.00000100</td>
<td>0.01672108</td>
<td>1672008 %</td>
</tr>
<tr class="greenCell"><td>2019-02-04 14:37 UTC</td>
<td>dedfrrf</td>
<td>0.00000100</td>
<td>0.01665920</td>
<td>1665820 %</td>
</tr>
</table>
</center><br /><br />
<center><span style="font-size: 18px; font-weight: bold;"><a href="javascript:void" onclick="$('#tblTopRoundsPlayed').show('fast')">Top Number of Rounds Played in a Game</a></span><br />
<table id="tblTopRoundsPlayed" style="display: none">
<tr>
<th>Date</th>
<th>Player</th>
<th>Rounds</th>
<th>Bet value</th>
<th>Winnings</th>
<th>Maximum profit got</th>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00001000', '28640319', '2SXdXyPxxEj9FeHYrsgALMZZYpQKQuTuMSK6H27WSGZ41QJ4SZ8hLYWSzE9n6bQs36L6zR6F7A3AzyfCZ3y2gxwA', 'LottoLover', '-0.11832110', '0.00007350', '0', '0.00000000', '0.00010000', '2016-10-21 21:34', '0.00000000', '0', '0', '40', '0')">
<td>2016-10-21 21:34 UTC</td>
<td>LottoLover</td>
<td>28640319</td>
<td>0.00001000</td>
<td style="color: #FF0000">-0.11832110</td>
<td>0.00007350</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00001000', '1192661', 'wuiHPUJzFsz66yHKYVJY6y31PJ8zZU9iPGUw25dXBvoKHC641VXEaQz9hndR1bi1LG3pu46dP3864dypMPxord9', 'LottoLover', '0.00010137', '0.00010137', '0', '0.00000000', '0.00010000', '2015-09-10 00:27', '0.00000000', '0', '0', '60', '0')">
<td>2015-09-10 00:27 UTC</td>
<td>LottoLover</td>
<td>1192661</td>
<td>0.00001000</td>
<td style="color: #00BB00">0.00010137</td>
<td>0.00010137</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '834046', '54XNVyDeJbYeFvD49HCUjtgvKisDZWLC4tWbL6YVSZABCb8oeL4b3Xqx867hNS3pzANympaCSqtWhnYz1Wn2ysfy', 'dys520', '0.00004410', '0.00011940', '1000000000', '0.00000000', '0.00000000', '2016-09-28 16:03', '0.00000000', '1.07', '5', '3-17-24-44-47', '0')">
<td>2016-09-28 16:03 UTC</td>
<td>dys520</td>
<td>834046</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00004410</td>
<td>0.00011940</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '697698', '2aAuwbzFyBAs9XLFSTNkvzkhjDojwhceEuHyjf1NMcByLL4z6ph8fqUYt6vhebn89bYMN2zymRzxxx2kKYs7xt2i', 'brana', '0.01300704', '0.01425667', '0', '0.00000000', '0.00000000', '2017-05-26 22:23', '0.00000000', '1.55', '2', '13-28', '0.5')">
<td>2017-05-26 22:23 UTC</td>
<td>brana</td>
<td>697698</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.01300704</td>
<td>0.01425667</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '553559', 'zjFCpmebFau6aes3RXpfQ7fwxuQFimxpwnHrpREFr6KiqxWUkiAH65DyiGYTXkNsKvqoZTGiHkT9v8w5xpFZdm5', 'xiangjing080', '-0.00013094', '0.00014556', '100000000', '0.00000000', '0.00000000', '2016-09-28 19:19', '0.00000000', '1.08', '5', '7-23-33-34-65', '0.3')">
<td>2016-09-28 19:19 UTC</td>
<td>xiangjing080</td>
<td>553559</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00013094</td>
<td>0.00014556</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000020', '500000', '2Loc6Pto6x43RUmn8yGekeUUnFw2UQdB9AjNwpTMckwhJZ3K883fNaHZJB3wiYJXE4Wbe1Xx1eYM5acbjYmR1kU4', '1mkh1', '0.00109140', '0.00128184', '500000', '0.00000000', '0.00000000', '2018-07-04 13:32', '0.00000000', '0', '0', '3-7-20-21-27-28-29-36-37-39-44-46-48-55-67', '0')">
<td>2018-07-04 13:32 UTC</td>
<td>1mkh1</td>
<td>500000</td>
<td>0.00000020</td>
<td style="color: #00BB00">0.00109140</td>
<td>0.00128184</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '499510', '5D186ZbU4fhXErMeaLPyVfknztBArxappeSuYudHa4aMVL2VNzAfzE2kdYzLAnkPAeCqyuBsXC5yGGEtPjWBMoyS', 'xiangjing080', '-0.00009752', '0.00004130', '100000000', '0.00000000', '0.00000000', '2016-09-28 22:57', '0.00000000', '0', '0', '1-2', '0')">
<td>2016-09-28 22:57 UTC</td>
<td>xiangjing080</td>
<td>499510</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00009752</td>
<td>0.00004130</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '492494', '2nbo65uWFfDixss8MKJc3eUHwMGq5ZWYsMVTNDjtH3zM237HnuEvsSa4gjLqPnV2CTS9TcvzNLn5tVLCrQhjm5D', 'brana', '0.00094572', '0.00184664', '0', '0.00000000', '0.00000000', '2017-05-27 00:47', '0.00000000', '1.55', '2', '13-28', '1')">
<td>2017-05-27 00:47 UTC</td>
<td>brana</td>
<td>492494</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00094572</td>
<td>0.00184664</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000040', '488303', '3oFc7j85QQdYcxY9bF18Gszjpz9brpD3Jz3t64LmuhFguMGaZJPhGFSh8AdXwWyHm3K5PCRnSTSVGgYzP6nsH2Dv', 'Steevo45', '0.00081726', '0.00097431', '100000000', '0.00000000', '0.00000000', '2017-05-01 23:11', '0.00000000', '0', '0', '2-7-9-23-26-37-41-43-45-46-47-48-49-53-58-67', '0')">
<td>2017-05-01 23:11 UTC</td>
<td>Steevo45</td>
<td>488303</td>
<td>0.00000040</td>
<td style="color: #00BB00">0.00081726</td>
<td>0.00097431</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '453956', 'cKGQKnBjfMggMMz9V5C7KMbyn5rbcLW6u6bg8DYn9hdDrVGAheDH4tZ4C5dHrZVcENUq8aXaeWC3SoEMQQTy4bH', 'BadVirtue', '-0.00069369', '0.00000292', '0', '0.00000000', '0.00000000', '2019-02-13 20:27', '0.00000000', '0', '0', '4-12-18-19-28-32-34-36-39-43-47-52-55-59-64', '0.9')">
<td>2019-02-13 20:27 UTC</td>
<td>BadVirtue</td>
<td>453956</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00069369</td>
<td>0.00000292</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '421915', '29ym63C7yvQgPHpktd14357rs1xwDU7oMyJgfLSZ4rTXGdALRghiifBxCqWidttHMaTUMwW5VKH1mgguFwtdUwjb', 'brana', '-0.00326302', '0.00290503', '0', '0.00000000', '0.00000000', '2017-05-27 01:57', '0.00000000', '1.55', '2', '13-28', '1')">
<td>2017-05-27 01:57 UTC</td>
<td>brana</td>
<td>421915</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00326302</td>
<td>0.00290503</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '388280', '3DbTjwjHUvZTG4W4tjjVCJco1266ApKqLtqme6VuDmyYVkb9ePZAn6GZ5hdy84kjgtLpnMqSSPJsNrfbhBQrigvs', 'Clara', '-0.00047985', '0.00002055', '0', '0.00000000', '0.00000000', '2017-01-11 22:20', '0.00050000', '1.25', '1', '3-15-22-23-24-33-34-43-61', '1')">
<td>2017-01-11 22:20 UTC</td>
<td>Clara</td>
<td>388280</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00047985</td>
<td>0.00002055</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000020', '381586', 'EBnUy1nXE7E1agx2kj8ShHZbgAEWoFNuMiu77T2iSfxWerzRom6bBVpRTF8uBdX2L1JTmeKg71DEsbKk8Ss7mBq', 'Steevo45', '0.00090332', '0.00101962', '1000000', '0.00000000', '0.00000000', '2017-04-30 09:59', '0.00000000', '0', '0', '7-13-17-20-24-25-26-34-38-39-40-44-45-46-49-57', '0')">
<td>2017-04-30 09:59 UTC</td>
<td>Steevo45</td>
<td>381586</td>
<td>0.00000020</td>
<td style="color: #00BB00">0.00090332</td>
<td>0.00101962</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '362498', '617mEPXbgew3gEW1tHvQag5xPPsaCxhhKb93vHARHYkaEBYWPuHDj8q8XD5zXWpqrhyJZmriuULHbDiM6KpbDHfL', 'brana', '0.00218289', '0.00233166', '0', '0.00000000', '0.00000000', '2017-05-26 23:36', '0.00000000', '1.55', '2', '13-28', '1')">
<td>2017-05-26 23:36 UTC</td>
<td>brana</td>
<td>362498</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00218289</td>
<td>0.00233166</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00004100', '342838', '2j2JyAd37hzMf2vBX7dZTdbxd3jgGTrvqRoyaEmAv7Mcnyeb2UkFv87nifcf4cNMQU4sYexBkRDHrZyCQAroVSan', 'hohokay', '-0.11001530', '0.04865060', '0', '0.00000000', '0.00000000', '2016-09-03 04:49', '0.00000000', '0', '0', '1-5-6-11-19-31-35-38-41-45-53-57-61-62-64', '0.9')">
<td>2016-09-03 04:49 UTC</td>
<td>hohokay</td>
<td>342838</td>
<td>0.00004100</td>
<td style="color: #FF0000">-0.11001530</td>
<td>0.04865060</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '342000', '5RGgBdPLwg38ft9XkmDLRZvz18hz4ZWYuBkBrrAqBHXY2YDxwWqMkYuQH2Su4LMW9VZiDDWyFLAsk3abdDjASiJL', 'krackerbush8420', '-0.00091180', '0.00001180', '342000', '0.00000000', '0.00000000', '2019-02-10 09:34', '0.00000000', '0', '0', '2-13-14-16-19-23-25-29-30-32-35-36-46-63-65', '1')">
<td>2019-02-10 09:34 UTC</td>
<td>krackerbush8420</td>
<td>342000</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00091180</td>
<td>0.00001180</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '340437', '3TuTNTxmxUf8jeTS4vqWTmyTCoH1rmxLW45ETpWgXg6aupyKDo7P7BWyXMDWDsqnJvpTKNsDVUeX6dAqY1gRzRww', 'Qwaser109', '-0.00008070', '0.00003900', '10000000', '0.00000000', '0.00000000', '2017-01-23 05:25', '0.00000000', '0', '0', '2-22-30-31-33', '0')">
<td>2017-01-23 05:25 UTC</td>
<td>Qwaser109</td>
<td>340437</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00008070</td>
<td>0.00003900</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '340404', '5r6FYZ8g5HjYbuVnoDgWukvpicQgQVDFfQkrTT2VhGBXQXY963RWWdoJiQk5ChdAdujSkLSMEFTLiBeRv5Mguog3', 'Krackerbush', '-0.00003002', '0.00011192', '693210', '0.00003000', '0.00000000', '2016-12-04 04:52', '0.00000000', '0', '0', '3-5-12-25-28-29-31-46-49-52', '0')">
<td>2016-12-04 04:52 UTC</td>
<td>Krackerbush</td>
<td>340404</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00003002</td>
<td>0.00011192</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000025', '326603', '3itFkFJvWFQZyo1nmBruqzp3rG1oc6S6DuFz8yb8jjKUBV5xGWuJjH1bxSWkBhMphptLNg7kqrxLg51AaDSjaquF', 'Steevo45', '-0.00047409', '0.00041945', '1000000', '0.00000000', '0.00000000', '2017-04-30 10:41', '0.00000000', '0', '0', '7-13-17-20-24-25-26-34-38-39-40-44-45-46-49-57', '0')">
<td>2017-04-30 10:41 UTC</td>
<td>Steevo45</td>
<td>326603</td>
<td>0.00000025</td>
<td style="color: #FF0000">-0.00047409</td>
<td>0.00041945</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000079', '322564', '5bsRiqXgmhLTcJBNsM4UiT6cmUvMj2cy8CxUzN9vJzSVMvkR4ygcA9YC1XUx3k1VRSyeQaDxaqXGT1udNi862LNA', 'Steevo45', '-0.00005015', '0.00146811', '1000000000', '0.00005000', '0.00000000', '2017-06-19 19:51', '0.00000000', '0', '0', '1-4-10-16-19-24-29-30-34-37-38-40-41-44-49-61', '0')">
<td>2017-06-19 19:51 UTC</td>
<td>Steevo45</td>
<td>322564</td>
<td>0.00000079</td>
<td style="color: #FF0000">-0.00005015</td>
<td>0.00146811</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '316327', '3ZY9jYdzdmTZVqABbbXgJ1DQrGxbQpzxeWTx5ej6gefJX7SQCnNp4EKL9C3DUYKzXeAeAgLZk9npvC1xCq3pGGa', 'brana', '-0.00046580', '0.00033887', '0', '0.00000000', '0.00000000', '2017-05-27 01:24', '0.00000000', '1.55', '2', '13-27', '1')">
<td>2017-05-27 01:24 UTC</td>
<td>brana</td>
<td>316327</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00046580</td>
<td>0.00033887</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '316223', '3iw62cQpZJkvcbbk3vAcnoFEsxMZM4ZrKf8T4n1dhhAbH4jHXn1KCnACq2YJ2QtSn3zzkKmngNXnBSSkzK9cfWE5', 'folove', '0.00006395', '0.00055010', '0', '0.00000000', '0.00000000', '2016-06-19 11:43', '0.00000000', '1.5', '2', '1-3-13-16-27-48-49-50-56-62', '1')">
<td>2016-06-19 11:43 UTC</td>
<td>folove</td>
<td>316223</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00006395</td>
<td>0.00055010</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '311414', '2NJMTC3ka4bLGuprrxDdtWn1tmFjwqjGKnQhedyXoDvBv7GZjppjBhNRX3rbFEwy9K49ra4zrrXDVcyqURN93aFk', 'brana', '0.00254878', '0.00328287', '0', '0.00000000', '0.00000000', '2017-05-26 22:54', '0.00000000', '1.55', '2', '13-28', '1')">
<td>2017-05-26 22:54 UTC</td>
<td>brana</td>
<td>311414</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00254878</td>
<td>0.00328287</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '309311', '37KGjexoNKXwk5q7XSopfa4qnDq4cQYW29aN5FtoBoF1zqBgMBcd2tXURHLLrjUbEWo38sazhqxPHciLp1ZcdqxC', 'dys520', '-0.00003798', '0.00011757', '10000000', '0.00000000', '0.00000000', '2016-09-27 15:56', '0.00000000', '1.02', '4', '15-29-37-51-67', '0.1')">
<td>2016-09-27 15:56 UTC</td>
<td>dys520</td>
<td>309311</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00003798</td>
<td>0.00011757</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '298355', '3DaoJyXPBfJpUMGUKuGpGRWgVjwdq6VHpE1QtCDtfkUAegGxgubV3HmF6qSeQUrrKJC2C185zRjZYu8KefGY8pui', 'brana', '0.00750635', '0.00822728', '0', '0.00000000', '0.00000000', '2017-05-23 18:29', '0.00000000', '1.65', '2', '27-28', '0.5')">
<td>2017-05-23 18:29 UTC</td>
<td>brana</td>
<td>298355</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00750635</td>
<td>0.00822728</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '283289', '32CZDYabTQAm8tWphZPhpEe4BGWEQH2i8VfMjDQ5oSr3r4htAncSuivtifAnTs6RKMctSBVsmpSazxHPcLzz6Zr9', 'folove', '0.00222504', '0.00222532', '0', '0.00000000', '0.00000000', '2016-06-19 11:18', '0.00000000', '1.5', '2', '1-3-13-16-27-48-49-50-56-62', '0.3')">
<td>2016-06-19 11:18 UTC</td>
<td>folove</td>
<td>283289</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00222504</td>
<td>0.00222532</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000040', '273649', '3y3PmQM8dz6UkE6k7rH8vNJgjpZMHqwMBc6htq3hMeTvtFfJXKqPbKfB1nDFdZ5RNB8kVTFb1ZhCRNzQ5TzSr7wk', 'Steevo45', '0.00120577', '0.00258813', '10000000', '0.00002500', '0.00000000', '2017-06-06 08:29', '0.00000000', '0', '0', '2-3-5-7-18-20-23-24-37-41-44-53-59-60-61-67', '0')">
<td>2017-06-06 08:29 UTC</td>
<td>Steevo45</td>
<td>273649</td>
<td>0.00000040</td>
<td style="color: #00BB00">0.00120577</td>
<td>0.00258813</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '255335', '3UPRRoRU7zLtmF1cGi47Yk8zxdyCVaJB284GwzqDp9VQ2BtN7whnJBcakkXsy7qu5N7PbuV1FkeHWSknrWThQAK1', 'mister21', '0.00007310', '0.00014920', '0', '0.00000000', '0.00000000', '2018-03-24 21:46', '0.00000000', '0', '0', '1-5-12-16-22-23-25-28-32-36-43-52-60-63-64', '1')">
<td>2018-03-24 21:46 UTC</td>
<td>mister21</td>
<td>255335</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00007310</td>
<td>0.00014920</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '249251', '4gV8WnHF9sEnvhWq7XzaeU8EYyzYmSAK2fMKriwNkNCckenJ1EUfbsgFbW11Z8baCvL1PPtrUFasoNrLGsLk3C6g', 'dys520', '0.00030110', '0.00030410', '1000000000', '0.00000000', '0.00000000', '2016-09-28 14:02', '0.00000000', '1.07', '5', '3-17-24-44-47', '0')">
<td>2016-09-28 14:02 UTC</td>
<td>dys520</td>
<td>249251</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00030110</td>
<td>0.00030410</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '234331', '58uwz9E4RzHniRAY7TNeuB6m9dz1tBvAUbze8JEfHxHNyjB3n6nddvuTPUJBbJuTdBsaVje66X6b2cpaigTdPHUF', 'eagle0320', '-0.00030007', '0.00007034', '0', '0.00030000', '0.00020000', '2016-09-30 16:05', '0.00000000', '0', '0', '10-17-26-29-30-37-43-46-48-52-56-59-60-61-67', '0.2')">
<td>2016-09-30 16:05 UTC</td>
<td>eagle0320</td>
<td>234331</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00030007</td>
<td>0.00007034</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '230388', '59NoH9KY3y1BDZ8f758XZuXPX3E3vvqrfvTBVFtEmYUCnJfRfWDRmqerL19cuPjcKE7zYS8pRnV57mXLyVuMQ8ia', 'Clara', '-0.00005693', '0.00011609', '0', '0.00000000', '0.00000000', '2017-01-11 21:34', '0.00050000', '1.25', '1', '3-15-22-23-24-33-34-43-61', '1')">
<td>2017-01-11 21:34 UTC</td>
<td>Clara</td>
<td>230388</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00005693</td>
<td>0.00011609</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '226231', '3VArSZ8eYyKHAs2DLGDzRbA5jZaR3KxPYYYXsyYxWZYiuQVRU8uRDbzv73f3Tex4KrfwxTkvXrnb4UCmTcwSB859', 'xiangjing080', '-0.00004876', '0.00006048', '100000000', '0.00000000', '0.00000000', '2016-09-28 23:13', '0.00000000', '1.06', '5', '2-17-22-37-42', '0.3')">
<td>2016-09-28 23:13 UTC</td>
<td>xiangjing080</td>
<td>226231</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00004876</td>
<td>0.00006048</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '211550', '2N3wHGoPF6NThX1TUvPR3Biw3Ud5PqyhGwoYqAHC4hXMMgbaeHddd6hkhxzwBFxMNEZHFEuZnQ61VNMdnsrrfkD5', 'brana', '-0.00092862', '0.00045261', '0', '0.00000000', '0.00000000', '2017-05-27 00:17', '0.00000000', '1.55', '2', '13-28', '1')">
<td>2017-05-27 00:17 UTC</td>
<td>brana</td>
<td>211550</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00092862</td>
<td>0.00045261</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '206361', '3ax2F7tMQBdfSiT5XRGkahqBVMTYdsiXZrDGbpxzsi29HBFjpHvXYcb49BsqCWpgWaWRa3XTES3R9Nk3mQh4UZv6', 'cnm888', '-0.00551097', '0.00772351', '99999999', '0.00000000', '0.00000000', '2017-06-14 19:01', '0.00000000', '1.3', '4', '35', '1')">
<td>2017-06-14 19:01 UTC</td>
<td>cnm888</td>
<td>206361</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00551097</td>
<td>0.00772351</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000100', '205300', '2MrQ2Voj1MaHEkyEWHRBvYmTspYR6YXiykBKvdP4PvPDYWqP8P1G8zcuAixckhE17nN2JiXWgJ5R6W1v6Z9n89HJ', '1Di56tzR5wL19HapkujmsJ9YQjJ9e57z11', '-0.00095090', '0.00055356', '0', '0.00000000', '0.00000000', '2018-04-12 03:53', '0.00000000', '0', '0', '13-19-26-28-35-37-44-55', '0')">
<td>2018-04-12 03:53 UTC</td>
<td>1Di56tzR5wL19HapkujmsJ9YQjJ9e57z11</td>
<td>205300</td>
<td>0.00000100</td>
<td style="color: #FF0000">-0.00095090</td>
<td>0.00055356</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000389', '203733', '3xuJ2z21zWq8G4TMr9jhABhQXTDMeNXcGMmLHZ9fafAGNwMS1FrX7WGtzjX9J8DH6nqNQTzkSb3Ze8zNjctdYD7M', 'Hustler1984', '0.00657452', '0.00998024', '0', '0.00000000', '0.00000000', '2018-03-24 06:09', '0.00000000', '0', '0', '6-16-17-26-30-33-35-38-41-44-45-46-54-56-61-67', '0.2')">
<td>2018-03-24 06:09 UTC</td>
<td>Hustler1984</td>
<td>203733</td>
<td>0.00000389</td>
<td style="color: #00BB00">0.00657452</td>
<td>0.00998024</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '202952', '5DMfz1ENea222d6ZnDQqDMKTDZmBt4KHwD4jN4RK2amdosoaTdvC1QFhPBZFt6fjrf6QPvdMoP4G9ru6W4w8fqio', 'Steevo45', '-0.00004409', '0.00024331', '1000000', '0.00000000', '0.00000000', '2017-04-30 08:36', '0.00000000', '0', '0', '4-6-7-13-14-17-25-32-36-37-41-43-45-46-52-67', '0')">
<td>2017-04-30 08:36 UTC</td>
<td>Steevo45</td>
<td>202952</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00004409</td>
<td>0.00024331</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '202540', '3a6fFuc4GZJzMmSNJLwRQdaPKEQv48CHaGGTrSv2bw9Vk2576qhuDe1sy49WHJsVvtZV6c4DFEUAoutE8QzvCbQy', 'cnm888', '-0.00123489', '0.00376325', '99999999', '0.00000000', '0.00000000', '2017-06-16 05:56', '0.00000000', '1.6', '2', '1-67', '1')">
<td>2017-06-16 05:56 UTC</td>
<td>cnm888</td>
<td>202540</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00123489</td>
<td>0.00376325</td>
</tr>
<tr class="whiteCell" onclick="showGameDetails('0.00000010', '200203', '53huCnzQhLcxwT76DvZ3nM5oL3rm86mKTvvFXAwgwyxrR2YuRjr4pw2xcLYe1xvDJ1skYhXBB1HiUEoLEgHpZn7w', 'brana', '-0.00152993', '0.00135238', '0', '0.00000000', '0.00000000', '2017-05-26 21:42', '0.00000000', '1.55', '2', '27-28', '0.5')">
<td>2017-05-26 21:42 UTC</td>
<td>brana</td>
<td>200203</td>
<td>0.00000010</td>
<td style="color: #FF0000">-0.00152993</td>
<td>0.00135238</td>
</tr>
<tr class="greenCell" onclick="showGameDetails('0.00000010', '194827', '5TyZemshdPNfMNvcfckE2wiywV5oxQ4HxMJcWe6b22jYKeurbb2ppFsFiEVwywGmGjNz3swf93mHwvAXuPQynGSA', '1mkh1', '0.00007122', '0.00017483', '500000', '0.00000000', '0.00000000', '2018-07-04 12:48', '0.00000000', '0', '0', '13-16-18-25-32-36-39-42-54-59-65', '0')">
<td>2018-07-04 12:48 UTC</td>
<td>1mkh1</td>
<td>194827</td>
<td>0.00000010</td>
<td style="color: #00BB00">0.00007122</td>
<td>0.00017483</td>
</tr>
</table>
</center></div>
</div>
<div id="divFreeBitcoins" style="display: none; font-family: verdana; font-size: 13px;" title="Free Bitcoins"><table style="margin: 0px; padding: 0px; width: 100%; height:100%; border: 0px;" cellspacing="0" cellpadding="0"><tr><td style="width: 150px; vertical-align: middle;"><center><iframe data-aa='119792' src='https://ad.a-ads.com/119792?size=120x240' scrolling='no' style='width:120px; height:240px; border:0px; padding:0;overflow:hidden' allowtransparency='true' frameborder='0' id="ifaads1"></iframe><br /><br /><br /><iframe data-aa='119791' src='https://ad.a-ads.com/119791?size=120x240' scrolling='no' style='width:120px; height:240px; border:0px; padding:0;overflow:hidden' allowtransparency='true' frameborder='0'></iframe></center></td><td style="height: 100%; vertical-align: middle; border-left: 2px solid black; border-right: 2px solid black;padding: 0px 5px 0px 5px; font-size: 11px"><div id="divFreeBitcoinsMiddle">
<center><span style="font-size: larger;"><b>Free Bitcoins</b></span></center>
You can claim your free Bitcoins whenever your balance is lower than 100 satoshi and the claims are limited to a maximum of 100 satoshi in 5 minutes.
<br /><br />When you claim your free Bitcoins:<br />
<ul>
<li>The house edge for your games in our instant lottery will raise to 1%;</li>
<li>Minimum investment and withdraw values will be raised to 0.002 BTC;</li>
<li>You will not be able to create or buy quotas in pools.</li>
<li>The maximum rounds that can be advanced when playing an automatic game in our instant lottery will be reduced to 40.</li>
</ul>
Everything will go back to normal when you spend all your free Bitcoins.
<br /><br />
<center><span style="font-size: larger"><b>For now you can claim:</b><br /><b><span style="font-size: larger" id="spSatoshiAmountToClaim">0</span></b> satoshi<br /></span><div style="margin-top: 4px;"><b>To claim the above satoshi amount, fill the captcha below:</b></div>
<div id="divRecaptcha"></div>
<br /><input type="button" value="Claim now" class="defaultButton" id="btClaimNow" /></center></div><div id="divClaimedFreeBitcoins" style="height: 100%; padding-top: 50px"><center><span style="font-size: larger;"><span style="font-size: larger; font-weight: bold;">You claimed <span id="spClaimedSatoshiAmount"></span> satoshi</span></span></center><br /><b>Remember: You can claim your free bitcoins whenever your balance is lower than 100 satoshi.</b><br /><br /><br /><center><b>Do you liked your free Bitcoins? So, like us on Facebook:</b><br /><br /><div class="fb-like" data-href="https://facebook.com/yabtcl" data-layout="button" data-action="like" data-show-faces="false" data-share="false" style="display: inline"></div></center><br /><br /><br /><span style="font-weight: bold;">Do you know that we have one of the best <a href="help.aspx#aReferral" target="_blank">Referral System</a> with a multi-level system that pays up to 25% of the instant lottery house edge?<br /><br />You just need to refer your friends and you will earn when they play our instant lottery with their free Bitcoins.<br /><br /><br /><center><b>Your referral link is already incorporated in the share buttons bellow</b></center></span><br />
<script data-cfasync="false" src="/cdn-cgi/scripts/5c5dd728/cloudflare-static/email-decode.min.js"></script><script type="text/javascript">
    window.fbAsyncInit = function () {
        FB.init({
            appId: '353869758101477',
            xfbml: true,
            version: 'v2.0'
        });
    };

    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) { return; }
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    } (document, 'script', 'facebook-jssdk'));
    </script>
<div id="divShareThis" style="text-align: center;"></div><br /><br /><br /><center><input type="button" id="btClose" value="Close" class="defaultButton" /></center></div></td><td style="width: 150px; vertical-align: middle;"><center><iframe data-aa='119790' src='https://ad.a-ads.com/119790?size=120x240' scrolling='no' style='width:120px; height:240px; border:0px; padding:0;overflow:hidden' allowtransparency='true' frameborder='0'></iframe><br /><br /><br /><iframe data-aa='119788' src='https://ad.a-ads.com/119788?size=120x240' scrolling='no' style='width:120px; height:240px; border:0px; padding:0;overflow:hidden' allowtransparency='true' frameborder='0'></iframe></center></td></tr></table>
</div>
</div>
<div id="divGameDetails" style="display: none;" title="Game Details">
<table style="border-collapse: collapse; font-size:12px" cellpadding="3" border="1">
<tr>
<td class="tdGDBold">Bet value</td>
<td><span id="spGDBetValue"></span></td>
</tr>
<tr>
<td class="tdGDBold">Rounds</td>
<td><span id="spGDRounds"></span></td>
</tr>
<tr>
<td class="tdGDBold">Secret</td>
<td><span id="spGDSecret"></span></td>
</tr>
<tr>
<td class="tdGDBold">Player</td>
<td><span id="spGDPlayer"></span></td>
</tr>
<tr>
<td class="tdGDBold">Winnings</td>
<td><span id="spGDWinnings"></span></td>
</tr>
<tr>
<td class="tdGDBold">Maximum profit got</td>
<td><span id="spGDMaximumProfitGot"></span></td>
</tr>
<tr id="trGDStopAfterRounds">
<td class="tdGDBold">Stop After Rounds</td>
<td><span id="spGDStopAfterRounds"></span></td>
</tr>
<tr id="trGDStopIfBalanceDropsBy">
<td class="tdGDBold">Stop if balance drops by</td>
<td><span id="spGDStopIfBalanceDropsBy"></span></td>
</tr>
<tr id="trGDStopIfBalanceIncreasesBy">
<td class="tdGDBold">Stop if balance increases by</td>
<td><span id="spGDStopIfBalanceIncreasesBy"></span></td>
</tr>
<tr id="trGDStopIfWinningsDropFromMaximumProfit">
<td class="tdGDBold">Stop if your winnings drop from the maximum profit got</td>
<td><span id="spGDStopIfWinningsDropFromMaximumProfit"></span></td>
</tr>
<tr id="trGDBetMultiplier">
<td class="tdGDBold">Bet Multiplier</td>
<td><span id="spGDBetMultiplier"></span></td>
</tr>
<tr id="trGDWhenYourPrizeMultiplierIsLowerThan">
<td class="tdGDBold">when your prize multiplier is lower than</td>
<td><span id="spGDWhenYourPrizeMultiplierIsLowerThan"></span></td>
</tr>
<tr>
<td class="tdGDBold">Chosen Number(s)</td>
<td><span id="spGDChosenNumbers"></span></td>
</tr>
<tr>
<td class="tdGDBold">House edge percentage in this game:</td>
<td><span id="spGDHouseEdgePercent"></span></td>
</tr>
</table></div>
</div>
</div>
<div id="spWageredRanking" style="display: none;" class="{title:'Top Wagered'}"><center><b>Top Wagered Today</b><br /><table class="tblStyle" id="tblLBWT"><tr><th>Player</th><th>Amount</th></tr>
<tr class="whiteCell">
<td>wfkid</td>
<td>77.31389</td>
</tr>
<tr class="greenCell">
<td>34ivy5ePi...7fqeakG5c</td>
<td>1.49585</td>
</tr>
<tr class="whiteCell">
<td>LIS777</td>
<td>1.12962</td>
</tr>
<tr class="greenCell">
<td>hard633</td>
<td>0.79841</td>
</tr>
<tr class="whiteCell">
<td>zharkynay</td>
<td>0.76113</td>
</tr>
<tr class="greenCell">
<td>qarambolqa</td>
<td>0.54760</td>
</tr>
<tr class="whiteCell">
<td>BadVirtue</td>
<td>0.42576</td>
</tr>
<tr class="greenCell">
<td>18Gbdwftm...ZTC1LeUgX</td>
<td>0.30815</td>
</tr>
<tr class="whiteCell">
<td>avexed</td>
<td>0.18620</td>
</tr>
<tr class="greenCell">
<td>1010</td>
<td>0.08998</td>
</tr>
</table>
<div id="divInformationChangesHouseEdge" style="display: none; font-family: Verdana; font-size: 13px" title="IMPORTANT">
<br />
Starting on 2016-06-02, the calculation of the house edge based on the amount bet and on your losses will be calculated using a 7-day window. This is necessary so we can start making some promotions and giveaways in a very near future.
<br /><br />
Thanks for your comprehension.
</div>
</center></div>
<script type="text/javascript">
var iant = true;
var bTP = 0.001;
var mILBV = 0.0000001;
var iCILG = 0;
var rCILG = 0;
var bVCILG = 0;
var wCILG = 0;
var cHWCILG = 0;
var iAPCILG = false;
var sARCILG = 0;
var sIBDCILG = 0;
var sIBICILG = 0;
var sIWDFMPCILG = 0;
var bMCILG = 0;
var pMCILG = 0;
var cNCILG = '';
var lIDILGP = 88626219;
var hEPCILG = 1;
var cHEPU = 1;
var tWILU = 0;


var mPPB = 0.5;
var iULI = false;
var dNSCD = false;
var mBFBIS = 100;
var mCFBIS = 100;
var mMCFB = 5;
var fBR = 0;
var lLCFB  = new Array();
var cLCFB = {};
var addrUserID = 0;
var sEM = false;
var cIFCA = "";

</script>
<script type="text/javascript">
    var weAreNotAcceptingMore = decodeEntities('');
    var pleaseSelectOneOfYourAddresses = decodeEntities('Please select one of your addresses.');
    var translatedContinue = 'Continue';
    var translatedSelectMoreNumbers = 'Select more numbers';
    var translatedTicketPrice = 'Ticket Price: %btcValue% BTC';
    var translatedMaximumNumbersPerTicketReached = 'Maximum numbers per ticket reached.';
    var translatedPleaseSelect616NumbersInTheTicket = 'Please select 6-16 numbers in the Ticket #%ticketNumber%';
    var translatedTicketNumberIsInvalid = 'Ticket #%ticketNumber% is invalid.';
    var translatedTheTicketIsEqualToTheTicket = 'The ticket #%ticketNumber1% is equal to the ticket #%ticketNumber2%.';
    var translatedYouCanBuyAMaximumOf1000TicketsAtOnce = 'You can buy a maximum of 1000 tickets at once.';
    var translatedTheTicketInformedOnLineIsInvalid = 'The ticket informed on line %lineNumber% is invalid.';
    var translatedTheTicketInformedOnLineIsEqualToTheTicket = 'The ticket informed on line %lineNumber% is equal to the ticket #%ticketNumber%.';
    var translatedTheTicketInformedOnLineIsEqualToTheTicketInformedOnLine = 'The ticket informed on line %lineNumber1% is equal to the ticket informed on line %lineNumber2%.';
    var translatedYouShouldFillAtLeast1Ticket = 'You should fill at least 1 ticket';
    var translatedTotalColon = 'Total: %toBePaid% BTC';
    var translatedUnconfirmedBalance = 'Unconfirmed Balance: %unconfirmedBalanceValue% BTC';
    var translatedMessages = 'Messages:';
    var translatedDeleteMessage = 'Delete Message';
    var translatedTicketsProcessed = 'Ticket(s) Processed.';
    var translatedProcessingYourTicket = 'Processing your ticket(s)... Your ticket(s) will appear in the list when the processing finishes.';
    var translatedHide = 'Hide';
    var translatedStartOver = 'Start Over';
    var translatedBack = 'Back';
    var translatedDeposit = 'Deposit';
    var translatedLoading = 'Loading...';
    var translatedInvalidAmountMustBeGreaterThan = 'Invalid amount. Must be greater than 0.00000010 BTC.';
    var translatedInvalidNumberOfRounds = 'Invalid number of rounds';
    var translatedInvalidAmountInformedInStopIfBalanceDropsBy = 'Invalid amount informed in &#39;Stop if balance drops by&#39;';
    var translatedInvalidAmountInformedInStopIfBalanceIncreasesBy = 'Invalid amount informed in &#39;Stop if balance increases by&#39;';
    var translatedDoYouWannaStartTheGameWithTheFollowingValues = 'Do you wanna start the game with the following values?';
    var translatedBetValue = 'Bet value: %betValue% BTC';
    var translatedStopAfterRounds = 'Stop after %maximumRounds% rounds';
    var translatedStopIfBalanceDropsBy = 'Stop if balance drops by %btcValue% BTC';
    var translatedStopIfBalanceIncreasesBy = 'Stop if balance increases by %btcValue% BTC';
    var translatedYouDontHaveEnoughtCredits = 'You don&#39;t have enough credits.';
    var translatedYouHaveAnInstantLotteryGameInProgress = 'You have an Instant Lottery game in progress. Do you wanna resume it?';
    var translatedInvalidAmountInformedInStopIfYourWinningsDrop = 'Invalid amount informed in &#39;Stop if your winnings drop&#39;';
    var translatedInvalidAmountInformedInMultiplyYourBetBy = 'Invalid amount informed in &#39;Multiply your bet by&#39;';
    var translatedInvalidAmountInformedInPrizeMultiplierIsLowerThan = 'Invalid amount informed in &#39;prize multiplier is lower than&#39;';
    var translatedStopIfYourWinningsDropBTCFromTheMaximumProfitGot = 'Stop if your winnings drop %btcValue% BTC from the maximum profit got.';
    var translatedMultiplyYourBetByValueWhenYourPrizeMultiplierIsLowerThan = 'Multiply your bet by %value% when your prize multiplier is lower than %prizeMultiplier%x.';
    var translatedYes = 'Yes';
    var translatedNo = 'No';
    var translatedToGetYourFreeBitcoins = 'To get your free Bitcoins you will need to register.';
    var translatedYouClaimedSatoshi = 'You claimed %satoshiAmount% satoshi';
    var translatedRaiseTheHouseEdge = 'Raise the house edge to %houseEdge%% and keep the bet value at %betValue% BTC';
    var translatedKeepTheHouseEdge = 'Keep the house edge at %houseEdge%% and lower the bet value to %betValue% BTC';

    var htPayoutTables = {};
    htPayoutTables['0'] = [[0, 4.1875], [0, 2, 4.8245], [0, 1, 3, 16.3303571], [1, 0, 2, 6.277, 17.2026811], [1, 0, 1, 5, 11, 50.03846], [1, 0, 0, 4, 10.228, 47.12, 113.30342], [1, 0, 0, 3, 6.142, 13.5564, 57.3499, 203.63931], [2, 0, 0, 2, 3, 7.512, 46.6574, 149.6182, 500.4712], [2, 2, 0, 0, 2, 4, 12.35, 75.349, 319.5988, 1000.607], [2, 2, 0, 0, 2, 3, 10.86, 22.872, 76.4922, 506.5584, 2000], [2, 1, 0, 0, 2, 4, 8.38, 20.792, 108.1332, 206.1161, 500.34, 3000], [2, 1, 0, 0, 1, 3, 9, 21.9, 69.553, 502.8118, 1074.681, 2000, 4000], [2, 1, 0, 0, 1, 2, 6, 16.96, 46.596, 95.508, 208.2287, 1015.993, 3000, 5000], [2, 2, 1, 0, 0, 2, 3, 8.45, 17.382, 103.1988, 509.5084, 1021.144, 2000, 4000, 7500], [10, 0, 0, 0, 0, 0, 4, 17.18, 39.304, 104.7781, 523.1122, 1101.5251, 2540, 5000, 8000, 10000], [10, 0, 0, 0, 0, 0, 3, 11, 31, 63, 149.528, 282.6553, 566.524, 1030, 5000, 10000, 20000]]; htPayoutTables['0.1'] = [[0, 4.1833125], [0, 2, 4.806575], [0, 1, 3, 16.2448125], [1, 0, 2, 6.251, 17.1895385], [1, 0, 1, 5, 10.938, 49.144962], [1, 0, 0, 4, 10.185, 47.12, 113.30165], [1, 0, 0, 3, 6.12, 13.55, 57.3495, 203.6386], [2, 0, 0, 2, 3, 7.441, 46.6512, 149.6171, 500.4715], [2, 2, 0, 0, 2, 4, 12.1, 75.276, 319.5969, 1000.606], [2, 2, 0, 0, 2, 3, 10.84, 22, 76.4784, 506.5575, 2000], [2, 1, 0, 0, 2, 4, 8.32, 20.738, 108.1258, 206.1145, 500.34, 3000], [2, 1, 0, 0, 1, 3, 9, 21.68, 69.527, 502.8067, 1074.68, 2000, 4000], [2, 1, 0, 0, 1, 2, 6, 16.84, 46.575, 95.5033, 208.2284, 1015.995, 3000, 5000], [2, 2, 1, 0, 0, 2, 3, 8.38, 17.36, 103.197, 509.5073, 1021.145, 2000, 4000, 7500], [10, 0, 0, 0, 0, 0, 4, 17.14, 39.268, 104.7745, 523.1114, 1101.525, 2540, 5000, 8000, 10000], [10, 0, 0, 0, 0, 0, 3, 11, 30.96, 62.484, 148.7479, 282.6503, 566.525, 1030, 5000, 10000, 20000]]; htPayoutTables['0.2'] = [[0, 4.179125], [0, 2, 4.78815], [0, 1, 3, 16.15926785], [1, 0, 2, 6.225, 17.1763955], [1, 0, 1, 5, 10.834, 49.143962], [1, 0, 0, 4, 10.143, 47.11, 113.28829], [1, 0, 0, 3, 6.1, 13.53, 57.349, 203.63595], [2, 0, 0, 2, 3, 7.37, 46.645, 149.616, 500.4715], [2, 2, 0, 0, 2, 4, 11.85, 75.203, 319.595, 1000.606], [2, 2, 0, 0, 2, 3, 10.72, 22, 76, 506.5565, 2000], [2, 1, 0, 0, 2, 4, 8.26, 20.684, 108.1184, 206.1127, 500.34, 3000], [2, 1, 0, 0, 1, 3, 9, 21.52, 69, 502.7971, 1074.679, 2000, 4000], [2, 1, 0, 0, 1, 2, 6, 16.73, 46.533, 95, 208.2281, 1015.995, 3000, 5000], [2, 2, 1, 0, 0, 2, 3, 8.37, 17, 103.191, 509, 1021.145, 2000, 4000, 7500], [10, 0, 0, 0, 0, 0, 4, 17.1, 39.232, 104.781, 523, 1101.524, 2540, 5000, 8000, 10000], [10, 0, 0, 0, 0, 0, 3, 11, 30.83, 62.44, 148.747, 282.649, 566.525, 1030, 5000, 10000, 20000]]; htPayoutTables['0.3'] = [[0, 4.1749375], [0, 2, 4.769725], [0, 1, 3, 16.0737232], [1, 0, 2, 6.2, 17.1475604], [1, 0, 1, 5, 10.73, 49.142961], [1, 0, 0, 4, 10.1, 47.11, 113.28652], [1, 0, 0, 3, 6.1, 13.38, 57.266, 203.6036], [2, 0, 0, 2, 3, 7.3, 46.63, 149.613, 500.471], [2, 2, 0, 0, 2, 4, 11.6, 75.13, 319.593, 1000.606], [2, 2, 0, 0, 2, 3, 10.6, 22, 75.554, 505.644, 2000], [2, 1, 0, 0, 2, 4, 8.2, 20.63, 108.111, 206.111, 500.34, 3000], [2, 1, 0, 0, 1, 3, 9, 21.3, 69, 502.441, 1074.678, 2000, 4000], [2, 1, 0, 0, 1, 2, 6, 16.6, 46.58, 95, 208.174, 1015.995, 3000, 5000], [2, 2, 1, 0, 0, 2, 3, 8.3, 17, 103, 509, 1020.958, 2000, 4000, 7500], [10, 0, 0, 0, 0, 0, 4, 17.1, 39, 104.781, 523, 1101.437, 2540, 5000, 8000, 10000], [10, 0, 0, 0, 0, 0, 3, 11, 30.7, 62.4, 148.71, 282.639, 566.52, 1030, 5000, 10000, 20000]]; htPayoutTables['0.4'] = [[0, 4.17075], [0, 2, 4.7513], [0, 1, 3, 15.9881786], [1, 0, 2, 6.17, 17.197187], [1, 0, 1, 5, 10.62, 49.269461], [1, 0, 0, 4, 10.25, 45.1, 113.27315], [1, 0, 0, 3, 6.13, 13.11, 56.132, 200.118], [2, 0, 0, 2, 3, 7.42, 45.119, 146.167, 500.483], [2, 2, 0, 0, 2, 4.2, 10.23, 73, 317.259, 1000.61], [2, 2, 0, 0, 2, 3.1, 10.22, 20, 73.481, 500.3033, 2000], [2, 1, 0, 0, 2, 4, 8.3, 19.62, 107.12, 205.21, 500.342, 3000], [2, 1, 0, 0, 1, 3, 9.2, 20.25, 67.12, 500.21, 1070.171, 2000, 4000], [2, 1, 0, 0, 1, 2, 6.1, 16.27, 45.12, 93.1, 205.232, 1010, 3000, 5000], [2, 2, 1, 0, 0, 2, 3, 8.3, 16.7, 102, 508.3, 1020.365, 2000, 4000, 7500], [10, 0, 0, 0, 0, 0, 4, 17.1, 38.7, 105.3, 522.69, 1101.556, 2540, 5000, 8000, 10000], [10, 0, 0, 0, 0, 0, 3, 11, 30.6, 62.11, 149.26, 282.688, 566.516, 1030, 5000, 10000, 20000]]; htPayoutTables['0.5'] = [[0, 4.1665625], [0, 2, 4.732875], [0, 1, 3, 15.9026339], [1, 0, 2, 6.14, 17.246813], [1, 0, 1, 5, 10.523, 49.119711], [1, 0, 0, 4, 10.2, 45.171, 113.3247], [1, 0, 0, 3, 6.1, 13.16, 56.105, 200.1149], [2, 0, 0, 2, 3, 7.35, 45.108, 146.102, 500.1194], [2, 2, 0, 0, 2, 4.18, 10.104, 73.1, 315.17, 1000.5], [2, 2, 0, 0, 2, 3.11, 10, 20.471, 72.113, 500.132, 2000], [2, 1, 0, 0, 2, 4, 8.3, 19.2, 106.81, 205.13, 500.12, 3000], [2, 1, 0, 0, 1, 3, 9.11, 20.51, 67.12, 500.19, 1070.22, 2000.16, 4000], [2, 1, 0, 0, 1, 2, 6.1, 16.1, 45.44, 93.1, 205.1, 1010.125, 3000, 5000], [2, 2, 1, 0, 0, 2, 3, 8.3, 16.3, 101.83, 508.15, 1017.274, 2000, 4000, 7500], [10, 0, 0, 0, 0, 0, 4, 17.2, 38.1, 104.58, 521.19, 1098.198, 2540, 5000, 8000, 10000], [10, 0, 0, 0, 0, 0, 3, 11, 30.6, 61.5, 147.26, 280.21, 562.125, 1030, 5000, 10000, 20000]]; htPayoutTables['0.6'] = [[0, 4.162375], [0, 2, 4.71445], [0, 1, 3, 15.8170893], [1, 0, 2, 6.12, 17.1395163], [1, 0, 1, 5, 10.41, 49.309961], [1, 0, 0, 4, 10.16, 45.14, 113.31597], [1, 0, 0, 3, 6, 13.68, 56.16, 200.2945], [2, 0, 0, 2, 3, 7.27, 45.18, 146.136, 500.1004], [2, 2, 0, 0, 2, 4.14, 10.11, 73, 317.25, 1000.286], [2, 2, 0, 0, 2, 3, 10.48, 20.13, 72.19, 500.272, 2000], [2, 1, 0, 0, 2, 4, 8.25, 19.14, 106.14, 205.583, 500.11, 3000], [2, 1, 0, 0, 1, 3, 9.14, 20.13, 67, 501.345, 1070.129, 2000.11, 4000], [2, 1, 0, 0, 1, 2, 6, 16.47, 45.14, 93.163, 205.101, 1010.111, 3000, 5000], [2, 2, 1, 0, 0, 2, 3, 8.27, 16.13, 101.137, 508.106, 1017.116, 2000, 4000, 7500], [10, 0, 0, 0, 0, 0, 4, 17.16, 38.13, 104.107, 521.1, 1098.236, 2540.11, 5000, 8000, 10000], [10, 0, 0, 0, 0, 0, 3, 11.1, 30.1, 61.136, 147, 281.476, 562.102, 1030, 5000, 10000, 20000]]; htPayoutTables['0.7'] = [[0, 4.1581875], [0, 2, 4.696025], [0, 1, 3, 15.73154462], [1, 0, 2, 6.1, 17.0322197], [1, 0, 1, 5, 10.31, 49.223961], [1, 0, 0, 4, 10.12, 45.11, 113.27943], [1, 0, 0, 3, 6, 13.52, 56.21, 200.38222], [2, 0, 0, 2, 3, 7.2, 45.16, 146.22, 500.123], [2, 2, 0, 0, 2, 4, 10.77, 73, 317.24, 1000.44], [2, 2, 0, 0, 2, 3, 10.37, 20, 72.38, 500.254, 2000.1], [2, 1, 0, 0, 2, 4, 8.18, 19.15, 106.17, 205.24, 500.352, 3000], [2, 1, 0, 0, 1, 3, 9.1, 20.12, 67.1, 500.165, 1070.135, 2000.1, 4000], [2, 1, 0, 0, 1, 2, 6, 16.35, 45.12, 93.14, 205.23, 1010.2, 3000.2, 5000], [2, 2, 1, 0, 0, 2, 3, 8.2, 16.11, 101.11, 508.21, 1017.152, 2000, 4000, 7500], [10, 0, 0, 0, 0, 0, 4, 17.12, 38, 104.78, 521.14, 1098.14, 2540.12, 5000, 8000, 10000], [10, 0, 0, 0, 0, 0, 3, 11, 30.39, 61.12, 147.1, 280.18, 562.31, 1030, 5000, 10000, 20000]]; htPayoutTables['0.8'] = [[0, 4.154], [0, 2, 4.6776], [0, 1, 3, 15.646], [1, 0, 2, 6, 18.1803079], [1, 0, 1, 5, 10.216, 49.010461], [1, 0, 0, 4, 10, 45.9, 113.61379], [1, 0, 0, 3, 6, 13.37, 56.13, 200.2428], [2, 0, 0, 2, 3, 7.1, 45.4, 146.4, 501.5625], [2, 2, 0, 0, 2, 4, 10.52, 73, 315.62, 1000.2], [2, 2, 0, 0, 2, 3, 10.24, 20, 73.13, 500, 2000.43], [2, 1, 0, 0, 2, 4, 8.13, 19, 106.49, 205.15, 500, 3004.5], [2, 1, 0, 0, 1, 3, 9, 20.41, 67.3, 500.12, 1070, 2002.92, 4000], [2, 1, 0, 0, 1, 2, 6, 16.24, 45, 93.47, 205, 1012.75, 3000, 5000], [2, 2, 1, 0, 0, 2, 3, 8.1, 16.2, 101.6, 508.4, 1019, 2003.3, 4000, 7500], [10, 0, 0, 0, 0, 0, 4, 17, 38.4, 104.4, 521.7, 1098.2, 2541.3, 5005, 8000, 10000], [10, 0, 0, 0, 0, 0, 3, 11, 30.2, 61.4, 147.5, 280.6, 563.2, 1033.1, 5000, 10000, 20000]]; htPayoutTables['0.9'] = [[0, 4.1498125], [0, 2, 4.659175], [0, 1, 3, 15.56045532], [1, 0, 2, 6, 17.759165], [1, 0, 1, 5, 10.1, 49.264461], [1, 0, 0, 4, 10, 45.47, 113.11361], [1, 0, 0, 3, 6, 13.2, 56.3, 200.91463], [2, 0, 0, 2, 3, 7, 45.66, 146.28, 500.736], [2, 2, 0, 0, 2, 4, 10.24, 73.28, 315.39, 1000.534], [2, 2, 0, 0, 2, 3, 10, 21, 72.7, 501.9, 2000.73], [2, 1, 0, 0, 2, 4, 8, 19.34, 107.18, 205.35, 501.35, 3002.33], [2, 1, 0, 0, 1, 3, 9, 20.2, 67.1, 501.2, 1073.23, 2000.17, 4000], [2, 1, 0, 0, 1, 2, 6, 16.1, 45.1, 93.6, 205.55, 1010.15, 3000.33, 5000], [2, 2, 1, 0, 0, 2, 3, 8, 16.4, 101.1, 509.3, 1017.5, 2003.2, 4000, 7500], [10, 0, 0, 0, 0, 0, 4, 17, 38.2, 104.2, 521.3, 1099.1, 2540.65, 5000, 8000, 10000], [10, 0, 0, 0, 0, 0, 3, 11, 30.1, 61.2, 147.2, 281, 562.79, 1030.3, 5000, 10000, 20000]]; htPayoutTables['1'] = [[0, 4.14], [0, 2, 4.62], [0, 1, 3, 15.4], [1, 0, 2, 6, 17], [1, 0, 1, 5, 10, 49], [1, 0, 0, 4, 10, 45, 113], [1, 0, 0, 3, 6, 13, 56, 200], [2, 0, 0, 2, 3, 7, 45, 146, 500], [2, 2, 0, 0, 2, 4, 10, 73, 315, 1000], [2, 2, 0, 0, 2, 3, 10, 20, 72, 500, 2000], [2, 1, 0, 0, 2, 4, 8, 19, 106, 205, 500, 3000], [2, 1, 0, 0, 1, 3, 9, 20, 67, 500, 1070, 2000, 4000], [2, 1, 0, 0, 1, 2, 6, 16, 45, 93, 205, 1010, 3000, 5000], [2, 2, 1, 0, 0, 2, 3, 8, 16, 101, 508, 1017, 2000, 4000, 7500], [10, 0, 0, 0, 0, 0, 4, 17, 38, 104, 521, 1098, 2540, 5000, 8000, 10000], [10, 0, 0, 0, 0, 0, 3, 11, 30, 61, 147, 280, 562, 1030, 5000, 10000, 20000]]; 
</script>
<script type="text/javascript">
    function verifyGlobalizeLoad() {
        if (langObject) {
            executeJQueryReady();
        } else {
            setTimeout(verifyGlobalizeLoad, 300);
        }
    }

    function executeJQueryReady() {
        jQuery(document).ready(function($) {
            langNumberFormatter = langObject.numberFormatter({ maximumFractionDigits: 8, useGrouping: false });
            langNumberFormatterSatoshi = langObject.numberFormatter({ maximumFractionDigits: 8, useGrouping: false, minimumFractionDigits: 8 });
            langNumberParser = function(pStr) {
                langNumberParserHelper = langObject.numberParser();
                var pStrHelper = pStr.replace(/[ ]/g, "");
                var mtch = pStrHelper.match(/[^\d]/g);
                if (mtch == null || mtch.length <= 1) {
                    pStrHelper = pStrHelper.replace(/[^\d]/g, ".");
                    return parseFloat(pStrHelper);
                } else {
                    return langNumberParserHelper(pStrHelper);
                }
            }

            var idleInterval = setInterval(timerIncrement, 60000); // 1 minute

            var idleTime = 0;
            //Zero the idle timer on mouse movement.
            $(this).mousemove(function(e) {
                idleTime = 0;
            });
            $(this).keypress(function(e) {
                idleTime = 0;
            });

            function timerIncrement() {
                idleTime = idleTime + 1;
            }

            Array.prototype.unique = function() {
                var a = [];
                var l = this.length;
                for (var i = 0; i < l; i++) {
                    for (var j = i + 1; j < l; j++) {
                        // If this[i] is found later in the array
                        if (this[i] === this[j])
                            j = ++i;
                    }
                    a.push(this[i]);
                }
                return a;
            };
            $("#tabsLotteryTypes").tabs();
            $("#divInstantLotteryLastGames").tabs();
            $("#tabsLotteryTypes").on("tabsactivate", function(event, ui) {
                if (history.pushState) {
                    history.pushState(null, null, ui.newPanel.selector);
                }
                else {
                    location.hash = ui.newPanel.selector;
                }
                if (!String.prototype.endsWith) {
                    String.prototype.endsWith = function(searchString, position) {
                        var subjectString = this.toString();
                        if (position === undefined || position > subjectString.length) {
                            position = subjectString.length;
                        }
                        position -= searchString.length;
                        var lastIndex = subjectString.indexOf(searchString, position);
                        return lastIndex !== -1 && lastIndex === position;
                    };
                }
                if (ui.newTab.context.href.endsWith("void(0)")) {
                    location.href = 'freelottery.aspx';
                }
            });
            var so = {
                duration: "fast",
                progress: function() {
                    var elem = $("#btBuyTicket").get(0);
                    if (!isScrolledIntoView(elem)) {
                        elem.scrollIntoView(false);
                    }
                },
                complete: function() {
                    var elem = $("#btBuyTicket").get(0);
                    if (!isScrolledIntoView(elem)) {
                        elem.scrollIntoView(false);
                    }
                }
            };
            function isScrolledIntoView(elem) {
                var docViewTop = $(window).scrollTop();
                var docViewBottom = docViewTop + $(window).height();
                var elemTop = $(elem).offset().top;
                var elemBottom = elemTop + $(elem).height();
                return ((elemBottom <= docViewBottom) && (elemTop >= docViewTop));
            }

            function isElementBottomNearVisibleArea(elem, distance) {
                var docViewTop = $(window).scrollTop();
                var docViewBottom = docViewTop + $(window).height();
                var elemTop = $(elem).offset().top;
                var elemBottom = elemTop + $(elem).height();
                return ((elemBottom - distance) <= docViewBottom);
            }
            if (iULI) {
                if ($("#spLoadingPlayedTickets").length > 0) {
                    $("#hfHasMorePlayedTickets").val("1");
                } else {
                    $("#hfHasMorePlayedTickets").val("0");
                }
            }
            function windowScroll() {
                if ($("#hfHasMorePlayedTickets").val() == "1" && $("#divPlayedTickets:visible").length > 0 && isElementBottomNearVisibleArea($("#divPlayedTickets").get(0), 200)) {
                    $(window).unbind("scroll");
                    function getMorePlayedTicketsSuccess(result, userContext, methodName) {
                        if (result == "nli") {
                            location.href = 'default.aspx?awqs=y';
                            return;
                        }
                        var hfHasMorePlayedTicketsValue = result.split("|")[0];
                        $("#tblPlayedTickets").append(result.split("|")[1]);
                        $("#hfHasMorePlayedTickets").val(hfHasMorePlayedTicketsValue);
                        if (hfHasMorePlayedTicketsValue == "0") {
                            $("#spLoadingPlayedTickets").hide();
                        }
                        if ($("#hfHasMorePlayedTickets").data("totalPlayedTickets")) {
                            $("#hfHasMorePlayedTickets").data("totalPlayedTickets", $("#hfHasMorePlayedTickets").data("totalPlayedTickets") + 50);
                        } else {
                            $("#hfHasMorePlayedTickets").data("totalPlayedTickets", 100);
                        }
                        if (hfHasMorePlayedTicketsValue != "0") {
                            $(window).scroll(windowScroll);
                            windowScroll();
                        }
                    }
                    PageMethods.getMorePlayedTickets(($("#hfHasMorePlayedTickets").data("totalPlayedTickets")) ? $("#hfHasMorePlayedTickets").data("totalPlayedTickets") : 50, getMorePlayedTicketsSuccess, errorOcurred);
                }
            }
            if (iULI) {
                $(window).scroll(windowScroll);
            }


            function selectTextArea() {
                $this = $(this);

                $this.select();

                window.setTimeout(function() {
                    $this.select();
                }, 1);

                // Work around WebKit's little problem
                $this.mouseup(function() {
                    // Prevent further mouseup intervention
                    $this.unbind("mouseup");
                    return false;
                });
            }
            if (iULI) {
                $("#txtMessage").focus(selectTextArea);
                $("#txtMessage").click(selectTextArea);
                $("#aTextTickets").click(function() {
                    if ($("#divTextTickets").is(":visible")) {
                        txtTicketsOldVal = $("#txtTickets").val();
                        $("#txtTickets").val("");
                        $("#divTextTickets").hide("fast");
                    } else {
                        if (txtTicketsOldVal != "" && $("#txtTickets").val() == "") {
                            $("#txtTickets").val(txtTicketsOldVal)
                        }
                        $("#divTextTickets").show(so);
                    }
                    refreshTotal()
                });
            }
            var btCancelBuyTicketClick = function() {
                $("#aBuyTickets").show("fast");
                $("#divBuyTickets").hide("fast");
            }
            if (iULI) {
                $("#btCancelBuyTicket").unbind("click");
                $("#btCancelBuyTicket").click(btCancelBuyTicketClick);
                $("#aBuyTickets").click(function() {
                    if (iant) {
                        $("#aBuyTickets").hide("fast");
                        $("#divBuyTickets").show({
                            duration: "fast",
                            progress: function() {
                                var elem = $("#divBuyTickets").get(0)
                                if (!isScrolledIntoView(elem)) {
                                    elem.scrollIntoView(false);
                                }
                            },
                            complete: function() {
                                var elem = $("#divBuyTickets").get(0)
                                if (!isScrolledIntoView(elem)) {
                                    elem.scrollIntoView(false);
                                }
                            }
                        });
                        refreshTotal();
                    } else {
                        if (weAreNotAcceptingMore != "") {
                            alert(weAreNotAcceptingMore);
                        }
                    }
                });
            }

            var baseTicketPrice = bTP;
            var lastTicketId = 0;
            var lastMessageId = 0;
            if ($("#tblMessages").length > 0) {
                $("tr[id^=trMessage]").each(function() {
                    if (parseInt(this.id.split("trMessage")[1], 10) > lastMessageId) {
                        lastMessageId = parseInt(this.id.split("trMessage")[1], 10);
                    }
                });
            }

            function combin(n, p) {
                if (n < p) {
                    return 0;
                }
                var num = 1, den = 1;
                var i, j;
                for (i = n; i >= p + 1; i--) {
                    num *= i;
                }
                for (j = 1; j <= (n - p); j++) {
                    den *= j;
                }
                if (den == 0) den = 1;
                return parseInt(num / den, 10);
            }
            function getPropertyCount(obj) {
                var count = 0;
                var key;
                for (key in obj) {
                    if (obj.hasOwnProperty(key)) {
                        count++;
                    }
                }
                return count;
            }
            function zeroFill(number, width) {
                width -= number.toString().length;
                if (width > 0) {
                    return new Array(width + (/\./.test(number) ? 2 : 1)).join('0') + number;
                }
                return number + ""; // always return a string
            }
            function deleteTicketClick() {
                var numIdHelper = this.id.split("aDeleteTicket")[1];
                $("#divTicket" + numIdHelper).hide("fast", function() {
                    $("#divTicket" + numIdHelper).remove();
                    resetDivClear();
                    refreshTotal();
                });
            }
            var btCancelSignatureClick = function() {
                $("#btCancelBuyTicket").unbind("click");
                $("#btCancelBuyTicket").val(decodeEntities(translatedCancel));
                $("#divSignMessage").hide("fast");
                $("#divBuyTicketsSuccess").hide("fast");
                $("#btCancelBuyTicket").click(btCancelBuyTicketClick);
                $("#btBuyTicket").unbind("click");
                $("#btBuyTicket").val(decodeEntities(translatedContinue));
                $("#btBuyTicket").click(btBuyTicketClick);
            }
            function ticketNumberClick() {
                btCancelSignatureClick();
                var $this = this;
                var elem = this;
                while (elem.id.indexOf("tblTicketNumbers") != 0) {
                    elem = elem.parentNode;
                }
                if ($this.className == "tnNotSelected") {
                    if (getPropertyCount($(elem).data()) < 16) {
                        $this.className = "tnSelected";
                        $(elem).data($this.innerHTML, true);
                    }
                } else if ($this.className == "tnSelected") {
                    $this.className = "tnNotSelected";
                    $(elem).removeData($this.innerHTML);
                }
                //alert($(elem).data());
                var numbersCount = getPropertyCount($(elem).data());
                var numIdHelper = elem.id.split("tblTicketNumbers")[1];
                var ticketPrice = parseFloat((combin(numbersCount, 6) * baseTicketPrice).toFixed(8));
                $("#divTicketPrice" + numIdHelper).data("ticketPrice", ticketPrice);
                if (ticketPrice == 0) {
                    $("#divTicketPrice" + numIdHelper).html(translatedSelectMoreNumbers);
                } else if (getPropertyCount($(elem).data()) < 16) {
                    $("#divTicketPrice" + numIdHelper).html(translatedTicketPrice.replace("%btcValue%", langNumberFormatter(ticketPrice)));
                    $("#divMaxNumbers" + numIdHelper).hide("fast");
                } else {
                    $("#divTicketPrice" + numIdHelper).html(translatedTicketPrice.replace("%btcValue%", langNumberFormatter(ticketPrice)));
                    $("#divMaxNumbers" + numIdHelper).show("fast");
                }
                $("#divTicketPrice" + numIdHelper).removeData("error");
                if (numbersCount < 6 || numbersCount > 16) {
                    $("#divTicketPrice" + numIdHelper).data("error", "iq");
                }
                refreshTotal();
            }
            var strTicketNumbersHelper = "<tr>"
            for (var iter = 1; iter <= 67; iter++) {
                strTicketNumbersHelper += '<td class="tnNotSelected">' + zeroFill(iter, 2);
                if (iter % 10 == 0) {
                    strTicketNumbersHelper += '</tr><tr>';
                }
            }
            strTicketNumbersHelper += '</tr>';
            if (iULI) {
                $("#tblTicketNumbers1").html(strTicketNumbersHelper);
                $("#tblTicketNumbers1").find("td").click(ticketNumberClick);
                $("#aDeleteTicket1").click(deleteTicketClick);
            }
            var ticketNum = 1;
            function resetDivClear() {
                $(".divClearThreeTickets").remove();
                $(".divTicket").each(function(idx) {
                    if ((idx % 3) == 2) {
                        $(this).after('<div class="divClearThreeTickets">');
                    }
                });

            }
            var aAddTicketClick = function() {
                ticketNum++;
                var ticketNumHelper = ticketNum;
                $("#divClearTickets").before('<div id="divTicket' + ticketNum + '" style="display: none;" class="divTicket"><table id="tblTicket' + ticketNum + '" class="tblTicket"><tr><td><div style="float: right"><a href="javascript:void(0);" id="aDeleteTicket' + ticketNum + '"><img src="images/Delete_12x12.png" alt="delete"/></a></div><div style="clear: both;"></div><table id="tblTicketNumbers' + ticketNum + '" cellspacing="5"></table><center><div id="divTicketPrice' + ticketNum + '" style="font-weight: bold">' + translatedSelectMoreNumbers + '</div><div id="divMaxNumbers' + ticketNum + '" style="display: none; font-weight: bold; font-size: smaller;">' + translatedMaximumNumbersPerTicketReached + '</div></center></td></tr></table>');
                $("#tblTicketNumbers" + ticketNum).html(strTicketNumbersHelper);
                $("#tblTicketNumbers" + ticketNum).find("td").click(ticketNumberClick);
                $("#aDeleteTicket" + ticketNum).click(deleteTicketClick);
                setTimeout(function() {
                    resetDivClear();
                    $("#divTicket" + ticketNumHelper).show(so);
                }, 1);
                refreshTotal();
            };
            if (iULI) {
                $("#aAddTicket").click(aAddTicketClick);
            }
            var txtTicketsOldVal = ""
            function refreshTotal() {
                if (!($("#txtTickets").is(":visible")) && $("#txtTickets").val() != "") {
                    txtTicketsOldVal = $("#txtTickets").val();
                    $("#txtTickets").val("")
                }
                var totalPrice = 0;
                var error = "";
                if (!($("div[id^=divTicketPrice]").length == 1 && getPropertyCount($("table[id^=tblTicketNumbers]").data()) == 0)) {
                    $("div[id^=divTicketPrice]").each(function(index) {
                        if ($(this).data("ticketPrice")) {
                            totalPrice += parseFloat($(this).data("ticketPrice"));
                        }
                        if ($(this).data("error")) {
                            if ($(this).data("error") == "iq") {
                                error = translatedPleaseSelect616NumbersInTheTicket.replace("%ticketNumber%", (index + 1));
                            }
                            return false;
                        }
                    });
                }
                if (error == "") {
                    var strTickets = $("#txtTickets").val().split("\n");
                    var arrTickets = new Array();
                    if (!($("div[id^=divTicketPrice]").length == 1 && getPropertyCount($("table[id^=tblTicketNumbers]").data()) == 0)) {
                        $("table[id^=tblTicketNumbers]").each(function(index) {
                            var arrTicketNumbers = new Array();
                            $.each($(this).data(), function(name, val) {
                                var dataNumberHelper = parseInt(name, 10);
                                if (dataNumberHelper >= 1 && dataNumberHelper <= 67 && $.inArray(dataNumberHelper, arrTicketNumbers) == -1) {
                                    arrTicketNumbers.push(dataNumberHelper);
                                } else {
                                    error = translatedTicketNumberIsInvalid.replace("%ticketNumber%", (index + 1));
                                    return false;
                                }
                            });
                            if (error != "") {
                                return false;
                            }
                            if (arrTicketNumbers.length >= 6 && arrTicketNumbers.length <= 16) {
                                arrTicketNumbers.sort(function(a, b) { return a - b });
                                var strTicketNumbersHelper2 = arrTicketNumbers.join("-");
                                var indexTicket = $.inArray(strTicketNumbersHelper2, arrTickets)
                                if (indexTicket >= 0) {
                                    error = translatedTheTicketIsEqualToTheTicket.replace("%ticketNumber1%", (index + 1)).replace("%ticketNumber2%", (indexTicket + 1));
                                    return false;
                                } else {
                                    arrTickets.push(strTicketNumbersHelper2);
                                }
                            } else {
                                error = translatedPleaseSelect616NumbersInTheTicket.replace("%ticketNumber%", (index + 1));
                                return false;
                            }
                        });
                    }
                    if (error == "" && strTickets[0] != "") {
                        var ticketsCount = 0;
                        if (!($("div[id^=divTicketPrice]").length == 1 && getPropertyCount($("table[id^=tblTicketNumbers]").data()) == 0)) {
                            ticketsCount = $("table[id^=tblTicketNumbers]").length;
                        }

                        if ((strTickets.length + ticketsCount) > 1000) {
                            error = translatedYouCanBuyAMaximumOf1000TicketsAtOnce;
                        }
                        if (error == "") {
                            $.each(strTickets, function(index, val) {
                                var ticketNumbers = val.split("-");
                                $.each(ticketNumbers, function(index2, val2) {
                                    ticketNumbers[index2] = parseInt(val2, 10);
                                    if (!(parseInt(val2, 10) >= 1 && parseInt(val2, 10) <= 67)) {
                                        error = translatedTheTicketInformedOnLineIsInvalid.replace("%lineNumber%", (index + 1));
                                        return false;
                                    }
                                });
                                var ticketNumbersUnique = ticketNumbers.unique();
                                if (ticketNumbers.length < 6 || ticketNumbers.length > 16 || ticketNumbers.length != ticketNumbersUnique.length) {
                                    error = translatedTheTicketInformedOnLineIsInvalid.replace("%lineNumber%", (index + 1));
                                    return false;
                                }
                                if (error != "") {
                                    return false;
                                }
                                ticketNumbers.sort(function(a, b) { return a - b });
                                var strTicketNumbers = ticketNumbers.join("-");
                                var indexTicket = $.inArray(strTicketNumbers, arrTickets);
                                if (indexTicket >= 0) {
                                    if ((indexTicket + 1) <= ticketsCount) {
                                        error = translatedTheTicketInformedOnLineIsEqualToTheTicket.replace("%lineNumber%", (index + 1)).replace("%ticketNumber%", (indexTicket + 1));
                                    } else {
                                        error = translatedTheTicketInformedOnLineIsEqualToTheTicketInformedOnLine.replace("%lineNumber1%", (index + 1)).replace("%lineNumber2%", (indexTicket - ticketsCount + 1));
                                    }
                                    return false;
                                } else {
                                    arrTickets.push(strTicketNumbers);
                                    totalPrice += parseFloat((combin(ticketNumbers.length, 6) * baseTicketPrice).toFixed(8));
                                }
                            });
                        }
                    }
                }
                if (totalPrice == 0 && error == "") {
                    error = translatedYouShouldFillAtLeast1Ticket;
                }
                if (error != "") {
                    $("#spTotalPrice").html(error);
                    return false;
                } else {
                    $("#spTotalPrice").html(translatedTotalColon.replace("%toBePaid%", langNumberFormatter(totalPrice)));
                    return true;
                }

            }
            var idTimeoutTicketsPurchase = null;
            var btBuyTicketClick = function() {
                if (refreshTotal()) {
                    var arrRequestsIds = new Array();
                    function checkTicketsRequestProcessing() {
                        if (idTimeoutTicketsPurchase == null && arrRequestsIds.length > 0) {
                            if (lastTicketId == 0) {
                                lastTicketId = $("div[id^=tcktBght]").last().get(0).id.split("tcktBght")[1];
                            }
                            idTimeoutTicketsPurchase = 1;
                            function verifyTicketsRequestProcessSuccess(result, userContext, methodName) {
                                if (result == "nli") {
                                    location.href = 'default.aspx?awqs=y'
                                    return
                                }
                                var arrReqIds = result.split('|');
                                var foundRequest = false;
                                var arrRequestsIdsHelper = new Array();
                                $.each(arrRequestsIds, function(index, value) {
                                    if ($.inArray(value, arrReqIds) != -1) {
                                        arrRequestsIdsHelper.push(value);
                                    }
                                });
                                if (arrRequestsIds.length > arrRequestsIdsHelper.length) {
                                    function getNewTicketsSuccess(result, userContext, methodName) {
                                        if (result != "") {
                                            var arrTicketsRet = result.split("||");
                                            $("#spBalance").html(arrTicketsRet[0]);
                                            if (arrTicketsRet[1] == "0") {
                                                $("#spTextUnconfirmedBalance").html('');
                                            } else {
                                                if ($("#spUnconfirmedBalance").length == 0) {
                                                    $("#spTextUnconfirmedBalance").html(' - <b>' + translatedUnconfirmedBalance.replace("%unconfirmedBalanceValue%", '<span id="spUnconfirmedBalance">' + arrTicketsRet[1] + '</span>') + '</b>');
                                                } else {
                                                    $("#spUnconfirmedBalance").html(arrTicketsRet[1]);
                                                }
                                            }
                                            var foundTicket = false;
                                            for (var iter = 2; iter < arrTicketsRet.length; iter++) {
                                                var ticketOrMsg = arrTicketsRet[iter].split("|");
                                                if (ticketOrMsg[0] == "ticket") {
                                                    if (!foundTicket) {
                                                        $("#tcktBght0").hide("fast", function() {
                                                            $("#tcktBght0").remove();
                                                        });
                                                        foundTicket = true;
                                                    } else if (iter == (arrTicketsRet.length - 1)) {
                                                        lastTicketId = ticketOrMsg[1];
                                                    }
                                                    $("#divTicketsBought").append('<div id="tcktBght' + ticketOrMsg[1] + '" class="' + ticketOrMsg[2] + '" style="display:none">' + ticketOrMsg[3] + '</div>');
                                                    $("#tcktBght" + ticketOrMsg[1]).show("fast");
                                                } else if (ticketOrMsg[0] == "message") {
                                                    if ($("#tblMessages").length == 0) {
                                                        $("#divMessages").html('<b>' + translatedMessages + '</b><br/><table id="tblMessages"></table><br />');
                                                    }
                                                    $("#divMessages").show("fast");
                                                    function insertMessage() {
                                                        $("#tblMessages").append('<tr id="trMessage' + ticketOrMsg[1] + '" style="display: none;"><td>' + ticketOrMsg[2] + '</td><td style="text-align: center"><a href="javascript:void(0);" id="aDeleteMessage' + ticketOrMsg[1] + '">' + translatedDeleteMessage + '</a></td></tr>');
                                                        $('#aDeleteMessage' + ticketOrMsg[1]).click(function() {
                                                            PageMethods.deleteMessage(this.id.toString().substring("aDeleteMessage".length), csrf1, csrf2, deleteMessageSuccess, errorOcurred);
                                                        });
                                                        $('#trMessage' + ticketOrMsg[1]).show("fast");
                                                    }
                                                    if ($("#trNoMessages").length > 0) {
                                                        $("#trNoMessages").hide("fast", function() {
                                                            $("#trNoMessages").remove();
                                                        });
                                                    }
                                                    insertMessage();
                                                }
                                            }
                                        }
                                    }
                                    PageMethods.getNewTickets(lastTicketId, lastMessageId, csrf1, csrf2, getNewTicketsSuccess, errorOcurred);
                                }
                                arrRequestsIds = arrRequestsIdsHelper;
                                if (arrRequestsIds.length > 0) {
                                    idTimeoutTicketsPurchase = setTimeout(function() {
                                        PageMethods.verifyTicketsRequestProcess(verifyTicketsRequestProcessSuccess, errorOcurred);
                                    }, 1000);
                                } else {
                                    $("#divBuyTicketsSuccess").html(translatedTicketsProcessed);
                                    idTimeoutTicketsPurchase = null;
                                }
                            }
                            PageMethods.verifyTicketsRequestProcess(verifyTicketsRequestProcessSuccess, errorOcurred);
                        }
                    }
                    function ticketBoutghtSuccessfully(result) {
                        arrRequestsIds.push(result.split("|")[1]);
                        $("#divBuyTicketsSuccess").html(translatedProcessingYourTicket);
                        $("#divBuyTicketsSuccess").show("fast");
                        $("#btBuyTicket").unbind("click");
                        $("#btBuyTicket").val(decodeEntities(translatedHide));
                        $("#btBuyTicket").click(btCancelBuyTicketClick);
                        $("#btCancelBuyTicket").unbind("click");
                        $("#btCancelBuyTicket").val(decodeEntities(translatedStartOver));
                        var startOverFunction = function() {
                            $("a[id^=aDeleteTicket]").trigger("click");
                            aAddTicketClick();
                            $("#txtTickets").val("");
                            $("#btBuyTicket").val(decodeEntities(translatedContinue));
                            $("#btBuyTicket").unbind("click");
                            $("#btBuyTicket").click(btBuyTicketClick);
                            $("#btCancelBuyTicket").val(decodeEntities(translatedCancel));
                            $("#btCancelBuyTicket").unbind("click");
                            $("#btCancelBuyTicket").click(btCancelBuyTicketClick);
                            $("#divTextTickets").hide("fast");
                            $("#divSignMessage").hide("fast");
                            $("#divBuyTicketsSuccess").hide("fast");
                        }
                        $("#btCancelBuyTicket").click(startOverFunction);
                        checkTicketsRequestProcessing();
                    }
                    function buyTicketsSuccess(result, userContext, methodName) {
                        if (result == "nli") {
                            location.href = 'default.aspx?awqs=y';
                        } else if (result.indexOf("err|") == 0) {
                            alert(decodeEntities(result.split("|")[1]));
                        } else if (result.indexOf("confirm|") == 0) {
                            if (confirm(result.split("|")[2])) {
                                PageMethods.buyTickets(strTicketsSend.join("|"), result.split("|")[1], csrf1, csrf2, buyTicketsSuccess, errorOcurred);
                            }
                        } else if (result.indexOf("nv||") == 0) {
                            var strReqMsg = result.split("||")[1];
                            var strAddresses = result.split("||")[2];
                            var arrAddresses = strAddresses.split("|");
                            $("#txtSignature").val("")
                            document.getElementById("selAddress").length = 0;
                            document.getElementById("selAddress").options[0] = new Option("- " + selectAnAddress + " -", "");
                            for (var iter = 0; iter < arrAddresses.length; iter++) {
                                document.getElementById("selAddress").options[iter + 1] = new Option(arrAddresses[iter], arrAddresses[iter]);
                            }
                            $("#txtMessage").val(strReqMsg);
                            $("#divSignMessage").show(so);
                            setTimeout(function() { $("#txtMessage").focus() }, 100);
                            var oldClick = $._data($("#btBuyTicket").get(0), "events")['click'][0].handler;
                            $("#btBuyTicket").unbind("click");
                            $("#btBuyTicket").click(function() {
                                if ($("#txtSignature").val() == "") {
                                    alert(youMustInformTheSignature);
                                } else if ($("#selAddress").val() == "") {
                                    alert(pleaseSelectOneOfYourAddresses);
                                } else {
                                    function requestTicketsSuccess(result, userContext, methodName) {
                                        if (result == "nli") {
                                            location.href = 'default.aspx?awqs=y';
                                        } else if (result.indexOf("err|") == 0) {
                                            alert(result.split("|")[1]);
                                        } else if (result.indexOf("ok|") == 0) {
                                            ticketBoutghtSuccessfully(result);
                                        }
                                    }
                                    PageMethods.requestTickets($("#txtMessage").val(), $("#selAddress").val(), $("#txtSignature").val(), csrf1, csrf2, requestTicketsSuccess, errorOcurred);
                                }
                            });
                            $("#btCancelBuyTicket").unbind("click");
                            $("#btCancelBuyTicket").val(decodeEntities(translatedBack));
                            $("#btCancelBuyTicket").click(btCancelSignatureClick);

                        } else if (result.indexOf("ok|") == 0) {
                            ticketBoutghtSuccessfully(result);
                        }
                    }
                    var strTicketsSend = new Array();
                    $("table[id^=tblTicketNumbers]").each(function(index) {
                        var arrTicketNumbers = new Array();
                        $.each($(this).data(), function(name, val) {
                            var dataNumberHelper = parseInt(name, 10);
                            arrTicketNumbers.push(dataNumberHelper);
                        });
                        var strTicketNumbersHelper2 = arrTicketNumbers.join("-");
                        if (strTicketNumbersHelper2 != "") {
                            strTicketsSend.push(strTicketNumbersHelper2);
                        }
                    });
                    var strTickets = $("#txtTickets").val().split("\n");
                    if (strTickets[0].length != 0) {
                        for (iter = 0; iter < strTickets.length; iter++) {
                            if (strTickets[iter].length != 0) {
                                strTicketsSend.push(strTickets[iter]);
                            }
                        }
                    }
                    PageMethods.buyTickets(strTicketsSend.join("|"), 0, csrf1, csrf2, buyTicketsSuccess, errorOcurred);
                } else {
                    alert($("#spTotalPrice").html());
                }
            }
            if (iULI) {
                $("#btBuyTicket").click(btBuyTicketClick);
            }

            var idTimeout = 0;
            if (iULI) {
                $("#txtTickets").keydown(function() {
                    btCancelSignatureClick();
                    clearTimeout(idTimeout);
                    idTimeout = setTimeout(refreshTotal, 500);
                });
            }
            var isUnloading = false;
            function errorOcurred(error, userContext, methodName) {
                $("#btClaimNow").get(0).disabled = false;
                if (!isUnloading) {
                    $("#linkDeposit").html(translatedDeposit);
                    $(window).unbind('scroll');
                    $(window).scroll(windowScroll);
                    windowScroll();
                    alert(anErrorOcurredDuringTheRequest + "\n" + error.get_message());
                }
            }
            function deleteMessageSuccess(result, userContext, methodName) {
                if (result.indexOf('ok|') == 0) {
                    $("#trMessage" + result.split("|")[1]).remove();
                    if ($("tr[id^=trMessage]").length == 0) {
                        $("#divMessages").hide("fast");
                    }
                } else if (result == 'nli') {
                    location.href = 'default.aspx?awqs=y';
                }
            }
            $("a[id^=aDeleteMessage]").each(function() {
                $(this).click(function() {
                    PageMethods.deleteMessage(this.id.toString().substring("aDeleteMessage".length), csrf1, csrf2, deleteMessageSuccess, errorOcurred);
                });
            });
            if (iULI) {
                var offsetDeposit = $("#linkDeposit").offset();
                var offsetDepositBottom = $("#linkDeposit").outerHeight() + offsetDeposit.top + 2;
                var offsetDepositRight = $("#linkDeposit").width() + offsetDeposit.left;
                $("#divDepositAddress").offset({
                    top: offsetDepositBottom,
                    left: (offsetDepositRight - 633)
                });
                $("#divNoDepositAddress").offset({
                    top: offsetDepositBottom,
                    left: (offsetDepositRight - 633)
                });
                $("#aHideDivDepositAddress").click(function() {
                    $("#divDepositAddress").slideUp("fast");
                });
                $("#aHideDivNoDepositAddress").click(function() {
                    $("#divNoDepositAddress").slideUp("fast");
                });
                function isCanvasSupported() {
                    var elem = document.createElement('canvas');
                    return !!(elem.getContext && elem.getContext('2d'));
                }
                function getDepositAddressSuccess(result, userContext, methodName) {
                    $("#linkDeposit").html(translatedDeposit);
                    if (result.indexOf('ok|') == 0) {
                        var depositAddress = result.split("|")[1];
                        var depAddrExpireDate = result.split("|")[2];
                        $('#qrCodeDepositAddress').html('');
                        if (isCanvasSupported()) {
                            $('#qrCodeDepositAddress').qrcode({ width: 150, height: 150, render: "canvas", text: "bitcoin:" + depositAddress });
                        } else {
                            $('#qrCodeDepositAddress').qrcode({ width: 150, height: 150, render: "table", text: "bitcoin:" + depositAddress });
                        }
                        $('#qrCodeDepositAddress').unbind("click");
                        $('#qrCodeDepositAddress').click(function() {
                            location.href = "bitcoin:" + depositAddress;
                        });
                        $("#spDepositAddress").html(depositAddress);
                        $("#spDepositAddressExpireDate").html(depAddrExpireDate);
                        setTimeout(function() {
                            $("#divDepositAddress").slideDown("fast");
                        }, 1);
                    } else if (result.indexOf('ndaa|') == 0) {
                        var ndaMessage = result.split("|")[1];
                        $("#spNoDepositAddressMessage").html(ndaMessage);
                        setTimeout(function() {
                            $("#divNoDepositAddress").slideDown("fast");
                        }, 1);
                    } else if (result == 'nli') {
                        location.href = 'default.aspx?awqs=y'
                    }
                }
                $("#linkDeposit").click(function() {
                    if ($("#divDepositAddress").is(":visible")) {
                        $("#divDepositAddress").slideUp("fast");
                    } else if ($("#divNoDepositAddress").is(":visible")) {
                        $("#divNoDepositAddress").slideUp("fast", function() {
                            $("#linkDeposit").html(translatedLoading);
                            PageMethods.getDepositAddress(getDepositAddressSuccess, errorOcurred);
                        });
                    } else {
                        $("#linkDeposit").html(translatedLoading);
                        PageMethods.getDepositAddress(getDepositAddressSuccess, errorOcurred);
                    }

                });
                var idTimeoutUpdateBalance = 0
                function updateBalance() {
                    function updateBalanceError(error, userContext, methodName) {
                        idTimeoutUpdateBalance = setTimeout(updateBalance, 5000);
                    }
                    function updateBalanceSuccess(result, userContext, methodName) {
                        var balances = result.split("|");
                        $("#spBalance").html(balances[0]);
                        if (balances[1] == "0") {
                            $("#spTextUnconfirmedBalance").html('');
                        } else {
                            if ($("#spUnconfirmedBalance").length == 0) {
                                $("#spTextUnconfirmedBalance").html(' - <b>' + translatedUnconfirmedBalance.replace("%unconfirmedBalanceValue%", '<span id="spUnconfirmedBalance">' + balances[1] + '</span>') + '</b>');
                            } else {
                                $("#spUnconfirmedBalance").html(balances[1]);
                            }
                        }
                        idTimeoutUpdateBalance = setTimeout(updateBalance, 5000);
                    }
                    PageMethods.updateBalance(updateBalanceSuccess, updateBalanceError);
                }
                idTimeoutUpdateBalance = setTimeout(updateBalance, 5000);
            }
            window.onbeforeunload = function() {
                isUnloading = true;
                clearTimeout(idTimeoutUpdateBalance);
            };

            var arrPayoutTable = [
                [0, 4.14],
                [0, 2, 4.62],
                [0, 1, 3, 15.4],
                [1, 0, 2, 6, 17],
                [1, 0, 1, 5, 10, 49],
                [1, 0, 0, 4, 10, 45, 113],
                [1, 0, 0, 3, 6, 13, 56, 200],
                [2, 0, 0, 2, 3, 7, 45, 146, 500],
                [2, 2, 0, 0, 2, 4, 10, 73, 315, 1000],
                [2, 2, 0, 0, 2, 3, 10, 20, 72, 500, 2000],
                [2, 1, 0, 0, 2, 4, 8, 19, 106, 205, 500, 3000],
                [2, 1, 0, 0, 1, 3, 9, 20, 67, 500, 1070, 2000, 4000],
                [2, 1, 0, 0, 1, 2, 6, 16, 45, 93, 205, 1010, 3000, 5000],
                [2, 2, 1, 0, 0, 2, 3, 8, 16, 101, 508, 1017, 2000, 4000, 7500],
                [10, 0, 0, 0, 0, 0, 4, 17, 38, 104, 521, 1098, 2540, 5000, 8000, 10000],
                [10, 0, 0, 0, 0, 0, 3, 11, 30, 61, 147, 280, 562, 1030, 5000, 10000, 20000]
            ];


            function instantLotteryNumberClick(changedHouseEdge) {
                if (isPlaying || isAnimating) {
                    return false;
                }
                $("div.miss").remove();
                $("#tblInstantLotteryNumbers").find("td").each(function() {
                    if (this.className == "tnInstantHit") {
                        this.className = "tnInstantSelected";
                    }
                });
                var elem = $("#tblInstantLotteryNumbers");
                if (!(changedHouseEdge == "Yes")) {
                    var $this = this;
                    if ($this.className == "tnInstantNotSelected") {
                        if (getPropertyCount($(elem).data()) < 16) {
                            $this.className = "tnInstantSelected";
                            $(elem).data($this.innerHTML, true);
                        }
                    } else if ($this.className == "tnInstantSelected") {
                        $this.className = "tnInstantNotSelected";
                        $(elem).removeData($this.innerHTML);
                    }
                }
                //alert($(elem).data());
                var numbersCount = getPropertyCount($(elem).data());
                if (numbersCount > 0) {
                    $("#trSelectMoreNumbers").hide();
                    $("#tblPrizesPerHits").find("tr:visible").remove();
                    var prizesMultiplierHigher0 = 0;
                    for (var iterInstant = 0; iterInstant < arrPayoutTable[numbersCount - 1].length; iterInstant++) {
                        if (arrPayoutTable[numbersCount - 1][iterInstant] > 0) {
                            $("#tblPrizesPerHits").append('<tr class="' + ((prizesMultiplierHigher0++ % 2 == 0) ? "trPrizeGreen" : "trPrizeWhite") + '" id="trPrizeHit' + iterInstant + '"><td style="text-align: center; border: 1px solid #000000">' + iterInstant + '</td><td style="text-align: right; border: 1px solid #000000">' + langNumberFormatter(arrPayoutTable[numbersCount - 1][iterInstant]) + 'x</td></tr>');
                        }
                    }
                    $("tr[id^=trPrizeHit]").each(function() {
                        $(this).css("cursor", "pointer");
                        $(this).click(function() {
                            var prizeMultiplier = $(this).find("td:eq(1)").html();
                            prizeMultiplier = langNumberParser(prizeMultiplier.substring(0, prizeMultiplier.length - 1));
                            if (prizeMultiplier > 1) {
                                var betMultiplier = prizeMultiplier / (prizeMultiplier - 1);
                                $("#tbBetMultiplier").val(langNumberFormatter(betMultiplier));
                                $("#tbPrizeMultiplier").val(langNumberFormatter(prizeMultiplier));
                                if ($("#cbMultiplyYourBetBy").get(0).checked) {
                                    var hitCounterHelper = $(this).get(0).id.substr(10);
                                    $("#trPrizeHit" + hitCounterHelper).click();
                                }
                            }
                        });

                    });
                    $("#spMaximumPayout").html(langNumberFormatter(mPPB));
                    var wasMaximumBetEmpty = false;
                    if ($("#spMaximumBet").html() == "") {
                        var wasMaximumBetEmpty = true;
                    }
                    $("#spMaximumBet").html(langNumberFormatterSatoshi(Math.floor((mPPB / arrPayoutTable[numbersCount - 1][arrPayoutTable[numbersCount - 1].length - 1]) * 100000000) / 100000000));
                    if (!$("#cbPlayForFun").get(0).checked) {
                        $("#spMaxPayoutPerBet").show();
                    }
                    if (wasMaximumBetEmpty && !($("#cbPlayForFun").get(0).checked)) {
                        changeHouseEdge(decreaseHouseEdgeBasedOnBetValue());
                    }
                } else {
                    $("#trSelectMoreNumbers").hide();
                    $("#tblPrizesPerHits").find("tr:visible").remove();
                    $("#trSelectMoreNumbers").show();
                    $("#spMaxPayoutPerBet").hide();
                }
            }
            $("#tblInstantLotteryNumbers").find("td").click(instantLotteryNumberClick);
            function clickInstantNumber(indexElem, arr, callback) {
                if (indexElem < arr.length) {
                    $("#tblInstantLotteryNumbers").find("td").each(function() {
                        if (parseInt($(this).html(), 10) == arr[indexElem]) {
                            $(this).click();
                            setTimeout(function() {
                                clickInstantNumber(indexElem + 1, arr, callback);
                            }, 1);
                        }
                    });
                } else {
                    if (callback) {
                        callback();
                    }
                }
            }
            $("#divQuickPick").find("td").each(function(index) {
                if (index > 0) {
                    $(this).click(function() {
                        if (isPlaying || isAnimating) {
                            return false;
                        }
                        $("#btClearInstant").click();
                        var chosenNumbers = new Array();
                        while (chosenNumbers.length < parseInt(this.innerHTML, 10)) {
                            var rndNumber = Math.floor((Math.random() * 67) + 1);
                            if (chosenNumbers.indexOf(rndNumber) < 0) {
                                chosenNumbers.push(rndNumber)
                            }
                        }
                        clickInstantNumber(0, chosenNumbers, null);
                    });
                }
            });
            $("#btClearInstant").click(function() {
                $("#tblInstantLotteryNumbers").removeData();
                $("div.miss").remove();
                $("#tblInstantLotteryNumbers").find("td").each(function() {
                    this.className = "tnInstantNotSelected";
                });
                $("#trSelectMoreNumbers").hide();
                $("#tblPrizesPerHits").find("tr:visible").remove();
                $("#trSelectMoreNumbers").show();
                $("#spMaxPayoutPerBet").hide();
            });
            var roundsStillToAdvance = 0;
            $("#btStopInstant").click(function() {
                isPlaying = false;
            });
            $("#btAdvanceInstant").click(function() {
                if (isPlaying && roundsStillToAdvance == 0) {
                    var roundsStillToAdvanceHelper = langNumberParser($("#tbAdvanceRounds").val());
                    if (!(roundsStillToAdvanceHelper >= 1)) {
                        roundsStillToAdvance = 0;
                    } else {
                        if (roundsStillToAdvanceHelper >= 1000 && !isPlayForFunChecked) {
                            $("#tbAdvanceRounds").val("1000");
                            roundsStillToAdvanceHelper = 1000;
                        }
                        roundsStillToAdvance = roundsStillToAdvanceHelper;
                    }
                }
            });
            $("#cbAutoPlay").change(function() {
                if (this.checked) {
                    $("#divAutoPlay").show("fast");
                } else {
                    $("#divAutoPlay").hide("fast");
                }
            });
            function decreaseHouseEdgeBasedOnBetValue() {
                if ($("#tbBetValue").val() == "" || $("#spMaximumBet").html() == "") {
                    return cHEPU;
                }
                var betValueHelper = langNumberParser($("#tbBetValue").val());
                if ($("#cbAutoPlay").get(0).checked && $("#cbMultiplyYourBetBy").get(0).checked && langNumberParser($("#tbBetMultiplier").val()) > 1) {
                    betValueHelper = langNumberParser($("#spMaximumBet").html());
                }
                if (betValueHelper >= mILBV && betValueHelper <= langNumberParser($("#spMaximumBet").html())) {
                    var houseEdgeLoweredHelper = false;
                    var cHEPUHelper = cHEPU;
                    if (betValueHelper * 1000 <= tWILU * -1) {
                        cHEPUHelper -= 0.8;
                        cHEPUHelper = parseFloat(cHEPUHelper.toFixed(1));
                        houseEdgeLoweredHelper = true;
                    } else if (betValueHelper * 100 <= tWILU * -1) {
                        cHEPUHelper -= 0.6;
                        cHEPUHelper = parseFloat(cHEPUHelper.toFixed(1));
                        houseEdgeLoweredHelper = true;
                    } else if (betValueHelper * 10 <= tWILU * -1) {
                        cHEPUHelper -= 0.4;
                        cHEPUHelper = parseFloat(cHEPUHelper.toFixed(1));
                        houseEdgeLoweredHelper = true;
                    }
                    if (cHEPUHelper < 0) {
                        cHEPUHelper = 0;
                    }
                    var elem = $("#tblInstantLotteryNumbers");
                    var numbersCount = getPropertyCount($(elem).data());
                    if (houseEdgeLoweredHelper && numbersCount > 0) {
                        changeHouseEdge(cHEPUHelper);
                        var maximumBetHelper = Math.floor((mPPB / arrPayoutTable[numbersCount - 1][arrPayoutTable[numbersCount - 1].length - 1]) * 100000000) / 100000000;
                        $("#spMaximumBet").html(langNumberFormatterSatoshi(maximumBetHelper));
                        while (maximumBetHelper < langNumberParser($("#tbBetValue").val())) {
                            cHEPUHelper += 0.1;
                            if (cHEPUHelper > 1) {
                                cHEPUHelper = 1;
                                break;
                            }
                            cHEPUHelper = parseFloat(cHEPUHelper.toFixed(1));
                            changeHouseEdge(cHEPUHelper);
                            maximumBetHelper = Math.floor((mPPB / arrPayoutTable[numbersCount - 1][arrPayoutTable[numbersCount - 1].length - 1]) * 100000000) / 100000000;
                            $("#spMaximumBet").html(langNumberFormatterSatoshi(maximumBetHelper));
                        }
                    }
                    return cHEPUHelper;
                }
                return cHEPU;
            }
            function changeHouseEdge(hEdge) {
                if (fBR > 0 && (!$("#cbPlayForFun").get(0).checked)) {
                    hEdge = 1;
                }
                arrPayoutTable = htPayoutTables[hEdge];
                $("#spCurrentHouseEdge").html(langNumberFormatter(hEdge));
                instantLotteryNumberClick("Yes");
                return hEdge;
            }
            $("#tbBetValue").change(function() {
                if (!($("#cbPlayForFun").get(0).checked)) {
                    changeHouseEdge(decreaseHouseEdgeBasedOnBetValue());
                }
            });
            changeHouseEdge(decreaseHouseEdgeBasedOnBetValue());
            $("#slctHouseEdge").change(function() {
                changeHouseEdge(langNumberParser($("#slctHouseEdge").val()));
            });
            $("#cbPlayForFun").change(function() {
                if (this.checked) {
                    $("#spPlayForFunBalance").show("fast");
                    $("#spMaxPayoutPerBet").hide();
                    $("#slctHouseEdge").show("fast");
                    $("#spCurrentHouseEdge").hide("fast");
                    changeHouseEdge(langNumberParser($("#slctHouseEdge").val()));
                } else {
                    $("#slctHouseEdge").hide("fast");
                    $("#spCurrentHouseEdge").show("fast");
                    $("#spPlayForFunBalance").hide("fast");
                    changeHouseEdge(decreaseHouseEdgeBasedOnBetValue());
                    if (getPropertyCount($("#tblInstantLotteryNumbers").data()) > 0) {
                        $("#spMaxPayoutPerBet").show();
                    }
                }
            });
            $("#cbStopAfterRounds").change(function() {
                if (this.checked) {
                    $("#tbMaximumRounds").get(0).disabled = false;
                } else {
                    $("#tbMaximumRounds").get(0).disabled = true;
                }
            });
            $("#cbStopIfBalanceDrops").change(function() {
                if (this.checked) {
                    $("#tbStopIfBalanceDrops").get(0).disabled = false;
                } else {
                    $("#tbStopIfBalanceDrops").get(0).disabled = true;
                }
            });
            $("#cbStopIfBalanceIncreases").change(function() {
                if (this.checked) {
                    $("#tbStopIfBalanceIncreases").get(0).disabled = false;
                } else {
                    $("#tbStopIfBalanceIncreases").get(0).disabled = true;
                }
            });
            $("#cbStopIfWinningsDropFromMaximumProfit").change(function() {
                if (this.checked) {
                    $("#tbStopIfWinningsDropFromMaximumProfit").get(0).disabled = false;
                } else {
                    $("#tbStopIfWinningsDropFromMaximumProfit").get(0).disabled = true;
                }
            });
            $("#cbMultiplyYourBetBy").change(function() {
                if (this.checked) {
                    $("#tbBetMultiplier").get(0).disabled = false;
                    $("#tbPrizeMultiplier").get(0).disabled = false;
                } else {
                    $("#tbBetMultiplier").get(0).disabled = true;
                    $("#tbPrizeMultiplier").get(0).disabled = true;
                }
                if (!($("#cbPlayForFun").get(0).checked)) {
                    changeHouseEdge(decreaseHouseEdgeBasedOnBetValue());
                }
            });
            $("#tbBetValue").val(langNumberFormatterSatoshi(mILBV));
            var isPlayForFunChecked = false;
            var isPlaying = false;
            var isAnimating = false;
            var betValue = 0;
            var isAutoPlay = false;
            var valStopAfterRounds = 0;
            var valStopIfBalanceDrops = 0;
            var valStopIfBalanceIncreases = 0;
            var valStopIfWinningsDropFromMaximumProfit = 0;
            var valBetMultiplier = 0;
            var valPrizeMultiplier = 0;
            var lastBetValue = 0;
            var nextBetValue = 0;
            var arrInstantLotteryTicketNumbers = new Array();
            var currentGameStats = {};
            var permanentKeepOrRaiseHouseEdge = "";
            var choseHE = -1;
            var choseBetValue = -1;
            var permanentChoseHEMultiplier = -1;

            function getRandomInt(min, max) {
                return Math.floor(Math.random() * (max - min + 1)) + min;
            }
            var playMoneyBalance = 1000;
            function getWinningNumbers(callback) {
                if (isPlayForFunChecked) {
                    if (currentGameStats.round == 0) {
                        if (playMoneyBalance < ((nextBetValue > 0) ? nextBetValue : currentGameStats.betValue)) {
                            playMoneyBalance = 1000;
                        }
                    }
                    if (playMoneyBalance < ((nextBetValue > 0) ? nextBetValue : currentGameStats.betValue)) {
                        stopPlaying();
                        return false;
                    }
                    var winningNumbers = new Array();
                    while (winningNumbers.length < 16) {
                        var rndNumber = getRandomInt(1, 67)
                        if ($.inArray(rndNumber, winningNumbers) == -1) {
                            winningNumbers.push(rndNumber)
                        }
                    }
                    hitCounter = 0;
                    while (roundsStillToAdvance >= 1) {
                        for (var iterAdvanceRounds = 0; iterAdvanceRounds < winningNumbers.length; iterAdvanceRounds++) {
                            if (arrInstantLotteryTicketNumbers.indexOf(winningNumbers[iterAdvanceRounds]) >= 0) {
                                hitCounter += 1;
                            }
                        }
                        currentGameStats.round += 1;
                        currentGameStats.winnings += ((nextBetValue > 0) ? nextBetValue : betValue) * (-1 + arrPayoutTable[arrInstantLotteryTicketNumbers.length - 1][hitCounter]);
                        playMoneyBalance += ((nextBetValue > 0) ? nextBetValue : betValue) * (-1 + arrPayoutTable[arrInstantLotteryTicketNumbers.length - 1][hitCounter]);
                        if (currentGameStats.winnings > currentGameStats.couldHaveWon) {
                            currentGameStats.couldHaveWon = currentGameStats.winnings
                        }
                        if (valBetMultiplier > 1 && valPrizeMultiplier > 0) {
                            if (lastBetValue == 0) {
                                lastBetValue = betValue;
                            } else {
                                lastBetValue = nextBetValue;
                            }
                            if (arrPayoutTable[arrInstantLotteryTicketNumbers.length - 1][hitCounter] < valPrizeMultiplier) {
                                nextBetValue = lastBetValue * valBetMultiplier;
                            } else {
                                nextBetValue = betValue;
                            }
                        }
                        winningNumbers = new Array();
                        while (winningNumbers.length < 16) {
                            var rndNumber = getRandomInt(1, 67)
                            if ($.inArray(rndNumber, winningNumbers) == -1) {
                                winningNumbers.push(rndNumber)
                            }
                        }
                        hitCounter = 0;
                        if (roundsStillToAdvance < 2 || playMoneyBalance < ((nextBetValue > 0) ? nextBetValue : currentGameStats.betValue) ||
                          !(isAutoPlay && (valStopAfterRounds < 1 || valStopAfterRounds > currentGameStats.round) &&
                          (valStopIfBalanceDrops <= 0 || valStopIfBalanceDrops > currentGameStats.winnings * -1) &&
                          (valStopIfBalanceIncreases <= 0 || valStopIfBalanceIncreases > currentGameStats.winnings) &&
                          (valStopIfWinningsDropFromMaximumProfit <= 0 || currentGameStats.winnings > currentGameStats.couldHaveWon - valStopIfWinningsDropFromMaximumProfit))) {
                            $("#spFreeCreditsValue").html(langNumberFormatterSatoshi(playMoneyBalance));
                            $("#tdRounds").html(currentGameStats.round);
                            $("#tdBetValue").html(langNumberFormatterSatoshi((lastBetValue > 0) ? (lastBetValue) : currentGameStats.betValue));
                            if (currentGameStats.winnings >= 0) {
                                $("#tdWinnings").css("color", "#00BB00");
                                $("#tdWinnings").html("+" + langNumberFormatterSatoshi(currentGameStats.winnings));
                            } else {
                                $("#tdWinnings").css("color", "#FF0000");
                                $("#tdWinnings").html(langNumberFormatterSatoshi(currentGameStats.winnings));
                            }
                            $("#tdCouldHaveWon").html(langNumberFormatterSatoshi(currentGameStats.couldHaveWon));
                            $("#tdHouseEdgeGame").html($("#slctHouseEdge").val());

                            if (playMoneyBalance < ((nextBetValue > 0) ? nextBetValue : currentGameStats.betValue) ||
                          !(isAutoPlay && (valStopAfterRounds < 1 || valStopAfterRounds > currentGameStats.round) &&
                          (valStopIfBalanceDrops <= 0 || valStopIfBalanceDrops > currentGameStats.winnings * -1) &&
                          (valStopIfBalanceIncreases <= 0 || valStopIfBalanceIncreases > currentGameStats.winnings) &&
                          (valStopIfWinningsDropFromMaximumProfit <= 0 || currentGameStats.winnings > currentGameStats.couldHaveWon - valStopIfWinningsDropFromMaximumProfit))) {
                                stopPlaying();
                                roundsStillToAdvance = 0;
                                return false;
                            }
                        }
                        roundsStillToAdvance -= 1;
                    }
                    callback(winningNumbers);
                } else {
                    function playGameRoundError(error, userContext, methodName) {
                        setTimeout(function() {
                            PageMethods.playGameRound2(iCILG, roundsStillToAdvance, isAutoPlay, valStopAfterRounds, valStopIfBalanceDrops, valStopIfBalanceIncreases, valStopIfWinningsDropFromMaximumProfit, valBetMultiplier, valPrizeMultiplier, arrInstantLotteryTicketNumbers.join("-"), currentGameStats.betValue, csrf1, csrf2, choseHE, playGameRoundSuccess, playGameRoundError);
                        }, 2000);
                    }
                    function playGameRoundSuccess(result, userContext, methodName) {
                        if (result.indexOf("err||") == 0) {
                            alert(decodeEntities(result.split("||")[1]));
                            stopPlaying();
                            iCILG = 0;
                        } else if (result.indexOf("err2||") == 0) {
                            if (result.split("||")[1] != "") {
                                alert(decodeEntities(result.split("||")[1]));
                            }
                            if (result.split("||").length == 5) {
                                iCILG = parseInt(result.split("||")[4], 10);
                            }
                            var maximumProfit = parseFloat(result.split("||")[2]);
                            var numbersCount = getPropertyCount($("#tblInstantLotteryNumbers").data());
                            $("#spMaximumPayout").html(langNumberFormatter(maximumProfit));
                            $("#spMaximumBet").html(langNumberFormatterSatoshi(Math.floor((maximumProfit / arrPayoutTable[numbersCount - 1][arrPayoutTable[numbersCount - 1].length - 1]) * 100000000) / 100000000));
                            mPPB = maximumProfit;
                            //update Maximum Profit per bet text
                            var playData = result.split("||")[3].split("|")
                            currentGameStats.round = parseInt(playData[0], 10);
                            currentGameStats.betValue = parseFloat(playData[1]);
                            currentGameStats.winnings = parseFloat(playData[2]);
                            currentGameStats.couldHaveWon = parseFloat(playData[3]);
                            $("#tdRounds").html(currentGameStats.round);
                            $("#tdBetValue").html(langNumberFormatterSatoshi(currentGameStats.betValue));
                            if (currentGameStats.winnings >= 0) {
                                $("#tdWinnings").css("color", "#00BB00");
                                $("#tdWinnings").html("+" + langNumberFormatterSatoshi(currentGameStats.winnings));
                            } else {
                                $("#tdWinnings").css("color", "#FF0000");
                                $("#tdWinnings").html(langNumberFormatterSatoshi(currentGameStats.winnings));
                            }
                            $("#tdCouldHaveWon").html(langNumberFormatterSatoshi(currentGameStats.couldHaveWon));
                            if (playData[4]) {
                                $("div[id^='divWN']").css("left", '2000px').css("opacity", 0).removeClass("ballHit").removeClass("ballMiss").html("");
                                $("div.miss").remove();
                                $(".tnInstantHit").each(function() {
                                    this.className = "tnInstantSelected";
                                });
                                hitCounter = 0;
                                if ($("tr.trPrizeRed").length > 0) {
                                    $("tr.trPrizeRed").get(0).className = $("tr.trPrizeRed").data("oldClassName");
                                    $("tr.trPrizeRed").removeData();
                                }
                                animateWinningNumbers(playData[4].split("-"), 0, function() {
                                    stopPlaying();
                                });
                            } else {
                                stopPlaying();
                            }
                            //update Maximum Profit per bet text
                        } else if (result.indexOf("conf||") == 0) {
                            if (confirm(decodeEntities(result.split("||")[1]))) {
                                iCILG = parseInt(result.split("||")[2], 10);
                                rCILG = parseInt(result.split("||")[3], 10);
                                bVCILG = parseFloat(result.split("||")[4]);
                                wCILG = parseFloat(result.split("||")[5]);
                                cHWCILG = parseFloat(result.split("||")[6]);
                                iAPCILG = (result.split("||")[7] == "true" ? true : false);
                                sARCILG = parseInt(result.split("||")[8], 10);
                                sIBDCILG = parseFloat(result.split("||")[9]);
                                sIBICILG = parseFloat(result.split("||")[10]);
                                cNCILG = result.split("||")[11];
                                sIWDFMPCILG = parseFloat(result.split("||")[12]);
                                bMCILG = parseFloat(result.split("||")[13]);
                                pMCILG = parseFloat(result.split("||")[14]);
                                hEPCILG = parseFloat(result.split("||")[15]);
                                arrPayoutTable = htPayoutTables[hEPCILG];
                                $("#btClearInstant").click();
                                $("#tabsLotteryTypes").tabs("option", "active", 1);
                                if (iAPCILG) {
                                    $("#cbAutoPlay").get(0).checked = true;
                                    $("#divAutoPlay").show();
                                    if (sARCILG >= 1) {
                                        $("#cbStopAfterRounds").get(0).checked = true;
                                        $("#tbMaximumRounds").get(0).disabled = false;
                                        $("#tbMaximumRounds").val(sARCILG);
                                    } else {
                                        $("#cbStopAfterRounds").get(0).checked = false;
                                        $("#tbMaximumRounds").get(0).disabled = true;
                                    }
                                    if (sIBDCILG > 0) {
                                        $("#cbStopIfBalanceDrops").get(0).checked = true;
                                        $("#tbStopIfBalanceDrops").get(0).disabled = false;
                                        $("#tbStopIfBalanceDrops").val(langNumberFormatterSatoshi(sIBDCILG));
                                    } else {
                                        $("#cbStopIfBalanceDrops").get(0).checked = false;
                                        $("#tbStopIfBalanceDrops").get(0).disabled = true;
                                    }
                                    if (sIBICILG > 0) {
                                        $("#cbStopIfBalanceIncreases").get(0).checked = true;
                                        $("#tbStopIfBalanceIncreases").get(0).disabled = false;
                                        $("#tbStopIfBalanceIncreases").val(langNumberFormatterSatoshi(sIBICILG));
                                    } else {
                                        $("#cbStopIfBalanceIncreases").get(0).checked = false;
                                        $("#tbStopIfBalanceIncreases").get(0).disabled = true;
                                    }
                                    if (sIWDFMPCILG > 0) {
                                        $("#cbStopIfWinningsDropFromMaximumProfit").get(0).checked = true;
                                        $("#tbStopIfWinningsDropFromMaximumProfit").get(0).disabled = false;
                                        $("#tbStopIfWinningsDropFromMaximumProfit").val(langNumberFormatterSatoshi(sIWDFMPCILG));
                                    } else {
                                        $("#cbStopIfWinningsDropFromMaximumProfit").get(0).checked = false;
                                        $("#tbStopIfWinningsDropFromMaximumProfit").get(0).disabled = true;
                                    }
                                    if (bMCILG > 1 && pMCILG > 0) {
                                        $("#cbMultiplyYourBetBy").get(0).checked = true;
                                        $("#tbBetMultiplier").get(0).disabled = false;
                                        $("#tbBetMultiplier").val(langNumberFormatter(bMCILG));
                                        $("#tbPrizeMultiplier").get(0).disabled = false;
                                        $("#tbPrizeMultiplier").val(langNumberFormatter(pMCILG));
                                    } else {
                                        $("#cbMultiplyYourBetBy").get(0).checked = false;
                                        $("#tbBetMultiplier").get(0).disabled = true;
                                        $("#tbPrizeMultiplier").get(0).disabled = true;
                                    }
                                }
                                var arrNumbersChosen = cNCILG.split("-");
                                isPlaying = false;
                                clickInstantNumber(0, arrNumbersChosen, function() {
                                    //alert("teste");
                                    $("#btPlayInstant").click();
                                });
                            }
                        } else if (result.indexOf("ok||") == 0) {
                            var playData = result.split("||")[1].split("|")
                            currentGameStats.round = parseInt(playData[0], 10);
                            currentGameStats.betValue = parseFloat(playData[1]);
                            currentGameStats.winnings = parseFloat(playData[2]);
                            currentGameStats.couldHaveWon = parseFloat(playData[3]);
                            $("#tdHouseEdgeGame").html(langNumberFormatter(parseFloat(playData[7])));
                            hEPCILG = parseFloat(playData[7]);
                            mPPB = parseFloat(playData[8]);
                            changeHouseEdge(parseFloat(playData[7]));


                            isPlaying = (playData[4] == "true" ? true : false);
                            var winningNumbers = new Array();
                            for (var iterWinningNumbers = 0; iterWinningNumbers < playData[5].split("-").length; iterWinningNumbers++) {
                                winningNumbers.push(playData[5].split("-")[iterWinningNumbers]);
                            }
                            iCILG = playData[6];
                            hitCounter = 0;
                            roundsStillToAdvance = 0;
                            callback(winningNumbers);
                        }
                    }
                    PageMethods.playGameRound2(iCILG, roundsStillToAdvance, isAutoPlay, valStopAfterRounds, valStopIfBalanceDrops, valStopIfBalanceIncreases, valStopIfWinningsDropFromMaximumProfit, valBetMultiplier, valPrizeMultiplier, arrInstantLotteryTicketNumbers.join("-"), currentGameStats.betValue, csrf1, csrf2, choseHE, playGameRoundSuccess, playGameRoundError);
                }
            }
            var hitCounter = 0;
            function animateWinningNumbers(winningNumbers, idx, callback) {
                isAnimating = true;
                if (idx < winningNumbers.length) {
                    if (arrInstantLotteryTicketNumbers.indexOf(parseInt(winningNumbers[idx], 10)) >= 0) {
                        hitCounter += 1;
                        $("#divWN" + (idx + 1)).html(zeroFill(parseInt(winningNumbers[idx], 10), 2)).addClass("ballHit");
                    } else {
                        $("#divWN" + (idx + 1)).html(zeroFill(parseInt(winningNumbers[idx], 10), 2)).addClass("ballMiss");
                    }
                    $("#divWN" + (idx + 1)).show(0, function() {
                        $("#divWN" + (idx + 1)).animate({
                            left: 0,
                            opacity: 1
                        }, 200);
                    });
                    if ($("#tblInstantLotteryNumbers").find("td:eq(" + (parseInt(winningNumbers[idx], 10) - 1) + ")").get(0).className == 'tnInstantNotSelected') {
                        $("#tblInstantLotteryNumbers").find("td:eq(" + (parseInt(winningNumbers[idx], 10) - 1) + ")").append('<div class="miss"></div>');
                    } else {
                        $("#tblInstantLotteryNumbers").find("td:eq(" + (parseInt(winningNumbers[idx], 10) - 1) + ")").get(0).className = 'tnInstantHit';
                    }
                    if ($("tr.trPrizeRed").length > 0) {
                        $("tr.trPrizeRed").get(0).className = $("tr.trPrizeRed").data("oldClassName");
                        $("tr.trPrizeRed").removeData();
                    }
                    if ($("#trPrizeHit" + hitCounter).length > 0) {
                        $("#trPrizeHit" + hitCounter).data("oldClassName", $("#trPrizeHit" + hitCounter).get(0).className);
                        $("#trPrizeHit" + hitCounter).get(0).className = 'trPrizeRed';
                    }
                    setTimeout(function() {
                        animateWinningNumbers(winningNumbers, idx + 1, callback);
                    }, 100);
                } else {
                    if (isPlayForFunChecked) {
                        currentGameStats.round += 1;
                        currentGameStats.winnings += ((nextBetValue > 0) ? nextBetValue : betValue) * (-1 + arrPayoutTable[arrInstantLotteryTicketNumbers.length - 1][hitCounter]);
                        playMoneyBalance += ((nextBetValue > 0) ? nextBetValue : betValue) * (-1 + arrPayoutTable[arrInstantLotteryTicketNumbers.length - 1][hitCounter]);
                        if (currentGameStats.winnings > currentGameStats.couldHaveWon) {
                            currentGameStats.couldHaveWon = currentGameStats.winnings
                        }
                        if (valBetMultiplier > 1 && valPrizeMultiplier > 0) {
                            if (lastBetValue == 0) {
                                lastBetValue = betValue;
                            } else {
                                lastBetValue = nextBetValue;
                            }
                            if (arrPayoutTable[arrInstantLotteryTicketNumbers.length - 1][hitCounter] < valPrizeMultiplier) {
                                nextBetValue = lastBetValue * valBetMultiplier;
                            } else {
                                nextBetValue = betValue;
                            }
                        }
                        $("#spFreeCreditsValue").html(langNumberFormatterSatoshi(playMoneyBalance));
                        if (currentGameStats.winnings > currentGameStats.couldHaveWon) {
                            currentGameStats.couldHaveWon = currentGameStats.winnings
                        }
                    }
                    $("#tdRounds").html(currentGameStats.round);
                    $("#tdBetValue").html(langNumberFormatterSatoshi((lastBetValue > 0) ? (lastBetValue) : currentGameStats.betValue));
                    if (currentGameStats.winnings >= 0) {
                        $("#tdWinnings").css("color", "#00BB00");
                        $("#tdWinnings").html("+" + langNumberFormatterSatoshi(currentGameStats.winnings));
                    } else {
                        $("#tdWinnings").css("color", "#FF0000");
                        $("#tdWinnings").html(langNumberFormatterSatoshi(currentGameStats.winnings));
                    }
                    $("#tdCouldHaveWon").html(langNumberFormatterSatoshi(currentGameStats.couldHaveWon));
                    isAnimating = false;
                    setTimeout(callback, 1000);
                }
            }
            function stopPlayingAdjustUI() {
                $("#divButtonsPlay").show();
                $("#divButtonsPlay2").show();
                $("#divButtonsStop").hide();
                $("#divQuickPick").show();

                $("#cbAutoPlay").prop('disabled', false);
                $("#cbStopAfterRounds").prop('disabled', false);
                $("#tbMaximumRounds").prop('readonly', false);
                $("#cbStopIfBalanceDrops").prop('disabled', false);
                $("#tbStopIfBalanceDrops").prop('readonly', false);
                $("#cbStopIfBalanceIncreases").prop('disabled', false);
                $("#tbStopIfBalanceIncreases").prop('readonly', false);
                $("#cbStopIfWinningsDropFromMaximumProfit").prop('disabled', false);
                $("#tbStopIfWinningsDropFromMaximumProfit").prop('readonly', false);
                $("#cbMultiplyYourBetBy").prop('disabled', false);
                $("#tbBetMultiplier").prop('readonly', false);
                $("#tbPrizeMultiplier").prop('readonly', false);
                $("#slctHouseEdge").prop('disabled', false);
                if (iULI) {
                    $("#cbPlayForFun").prop('disabled', false);
                }
                $("#tbBetValue").prop('readonly', false);
            }
            function addPlayedGamePlayer(resultData) {
                $("#spNextSecretHash").html(resultData[8]);
                var betValue = resultData[1];
                var rounds = resultData[2];
                var secret = resultData[3];
                var winnings = resultData[4];
                var maximumProfitGot = resultData[5];
                var date = resultData[6];
                var numbers = resultData[7];
                var betMultiplier = resultData[9];
                var prizeMultiplier = resultData[10];
                var player = resultData[11];
                var stopAfterRounds = resultData[12];
                var stopWhenBalanceDrops = resultData[13];
                var stopWhenBalanceIncreases = resultData[14];
                var stopIfWinningsDropFromMaximumProfit = resultData[15];
                var houseEdgePercent = resultData[16];
                cHEPU = parseFloat(resultData[17]);
                $("#spTotalBetInstantLottery").html(langNumberFormatterSatoshi(parseFloat(resultData[18])));
                $("#spTotalWonInstantLottery").html(langNumberFormatterSatoshi(parseFloat(resultData[18]) + parseFloat(resultData[19])));
                mPPB = parseFloat(resultData[20]);
                fBR = parseFloat(resultData[21]);
                tWILU = parseFloat(resultData[22]);
                changeHouseEdge(decreaseHouseEdgeBasedOnBetValue());

                var firstTRDataClass = 'greenCell';
                if ($("#tblYourLastGames").find("tr").length > 1) {
                    firstTRDataClass = $("#tblYourLastGames").find("tr").get(1).className;
                }
                $('<tr class="' + (firstTRDataClass == 'greenCell' ? 'whiteCell' : 'greenCell') + '" style="display: none;"><td>' + date + '</td><td>' + rounds + '</td><td>' + betValue + '</td><td style="color: ' + (langNumberParser(winnings) >= 0 ? '#00BB00' : '#FF0000') + '">' + winnings + '</td><td>' + maximumProfitGot + '</td></tr>').insertAfter("#tblYourLastGames tr:eq(0)").click(function() {
                    showGameDetails(betValue, rounds, secret, player, winnings, maximumProfitGot, stopAfterRounds, stopWhenBalanceDrops, stopWhenBalanceIncreases, date, stopIfWinningsDropFromMaximumProfit, betMultiplier, prizeMultiplier, numbers, houseEdgePercent);
                }).show("fast");
                if ($("#tblYourLastGames").find("tr").length > 101) {
                    $("#tblYourLastGames").find("tr:last").hide("fast", function() {
                        $("#tblYourLastGames").find("tr:last").remove();
                    });
                }
            }
            function stopPlaying() {
                isPlaying = false;
                if (!(isPlayForFunChecked) && iCILG > 0) {
                    function stopGameError(error, userContext, methodName) {
                        setTimeout(function() {
                            PageMethods.stopGame(iCILG, csrf1, csrf2, stopGameSuccess, stopGameError);
                        }, 2000);
                    }
                    function stopGameSuccess(result, userContext, methodName) {
                        if (result.indexOf("err||") == 0) {
                            alert(decodeEntities(result.split("||")[1]));
                        } else if (result.indexOf("ok||") == 0) {
                            iCILG = 0;
                            addPlayedGamePlayer(result.split("||")[1].split("|"));
                        }
                        stopPlayingAdjustUI();
                    }
                    PageMethods.stopGame(iCILG, csrf1, csrf2, stopGameSuccess, stopGameError);
                } else {
                    iCILG = 0;
                    stopPlayingAdjustUI();
                }
            }
            function addLastGamePlayed(resultData) {
                //not implemented yet
                lIDILGP = resultData[0];
                var betValue = resultData[1];
                var rounds = resultData[2];
                var secret = resultData[3];
                var winnings = resultData[4];
                var maximumProfitGot = resultData[5];
                var date = resultData[6];
                var numbers = resultData[7];
                var betMultiplier = resultData[8];
                var prizeMultiplier = resultData[9];
                var player = resultData[10];
                var stopAfterRounds = resultData[11];
                var stopWhenBalanceDrops = resultData[12];
                var stopWhenBalanceIncreases = resultData[13];
                var stopIfWinningsDropFromMaximumProfit = resultData[14];
                var houseEdgePercent = resultData[15];

                var firstTRDataClass = 'greenCell';
                if ($("#tblLastGames").find("tr").length > 1) {
                    firstTRDataClass = $("#tblLastGames").find("tr").get(1).className;
                }
                $('<tr class="' + (firstTRDataClass == 'greenCell' ? 'whiteCell' : 'greenCell') + '" style="display: none;"><td>' + date + '</td><td>' + player + '</td><td>' + rounds + '</td><td>' + betValue + '</td><td style="color: ' + (langNumberParser(winnings) >= 0 ? '#00BB00' : '#FF0000') + '">' + winnings + '</td><td>' + maximumProfitGot + '</td></tr>').insertAfter("#tblLastGames tr:eq(0)").click(function() {
                    showGameDetails(betValue, rounds, secret, player, winnings, maximumProfitGot, stopAfterRounds, stopWhenBalanceDrops, stopWhenBalanceIncreases, date, stopIfWinningsDropFromMaximumProfit, betMultiplier, prizeMultiplier, numbers, houseEdgePercent);
                }).show("fast");
                if ($("#tblLastGames").find("tr").length > 101) {
                    $("#tblLastGames").find("tr:last").hide("fast", function() {
                        $("#tblLastGames").find("tr:last").remove();
                    });
                }
            }
            function getLastInstantLotteryGamePlayed() {
                function getLastPlayedInstantLotteryGameError(error, userContext, methodName) {
                    setTimeout(function getLastPlayedInstantLotteryGameError() {
                        PageMethods.getLastPlayedInstantLotteryGame(lIDILGP, getLastPlayedInstantLotteryGameSuccess, getLastPlayedInstantLotteryGameError);
                    }, 2000);
                }
                function getLastPlayedInstantLotteryGameSuccess(result, userContext, methodName) {
                    if (result.indexOf("ok||") == 0) {
                        addLastGamePlayed(result.split("||")[1].split("|"));
                    }
                    setTimeout(getLastInstantLotteryGamePlayed, ((idleTime >= 2) ? 10000 : 500));
                }
                PageMethods.getLastPlayedInstantLotteryGame(lIDILGP, getLastPlayedInstantLotteryGameSuccess, getLastPlayedInstantLotteryGameError);
            }
            getLastInstantLotteryGamePlayed();
            function playInstantLottery() {
                if (!isPlaying) {
                    return false;
                }
                if (isAutoPlay) {
                    $("#tblGameStatus").show();
                } else {
                    $("#tblGameStatus").hide();
                }
                getWinningNumbers(function(winningNumbers) {
                    $("div[id^='divWN']").css("left", '2000px').css("opacity", 0).removeClass("ballHit").removeClass("ballMiss").html("");
                    $("div.miss").remove();
                    $(".tnInstantHit").each(function() {
                        this.className = "tnInstantSelected";
                    });
                    hitCounter = 0;
                    if ($("tr.trPrizeRed").length > 0) {
                        $("tr.trPrizeRed").get(0).className = $("tr.trPrizeRed").data("oldClassName");
                        $("tr.trPrizeRed").removeData();
                    }
                    animateWinningNumbers(winningNumbers, 0, function() {
                        if (isPlaying && isAutoPlay &&
                          (valStopAfterRounds < 1 || valStopAfterRounds > currentGameStats.round) &&
                          (valStopIfBalanceDrops <= 0 || valStopIfBalanceDrops > currentGameStats.winnings * -1) &&
                          (valStopIfBalanceIncreases <= 0 || valStopIfBalanceIncreases > currentGameStats.winnings) &&
                          (valStopIfWinningsDropFromMaximumProfit <= 0 || currentGameStats.winnings > currentGameStats.couldHaveWon - valStopIfWinningsDropFromMaximumProfit)) {
                            setTimeout(playInstantLottery, 1);
                        } else {
                            stopPlaying();
                        }
                    });
                });
            }
            $("#btPlayInstant").click(function() {
                if (!isPlaying && !isAnimating) {
                    if ($("#cbPlayForFun").get(0).checked) {
                        isPlayForFunChecked = true;
                        $("#tdHouseEdgeGame").html($("#slctHouseEdge").val());
                    } else {
                        isPlayForFunChecked = false;
                    }
                    var confirmMessageHelper = "";
                    betValue = langNumberParser($("#tbBetValue").val());
                    if (isNaN(betValue)) {
                        betValue = 0;
                    }
                    if ($("#cbAutoPlay").get(0).checked && $("#cbMultiplyYourBetBy").get(0).checked) {
                        valBetMultiplier = langNumberParser($("#tbBetMultiplier").val());
                        valPrizeMultiplier = langNumberParser($("#tbPrizeMultiplier").val());
                        if (!(valBetMultiplier > 1)) {
                            stopPlaying();
                            alert(decodeEntities(translatedInvalidAmountInformedInMultiplyYourBetBy));
                            return;
                        }
                        if (!(valPrizeMultiplier > 0)) {
                            stopPlaying();
                            alert(decodeEntities(translatedInvalidAmountInformedInPrizeMultiplierIsLowerThan));
                            return;
                        }
                        confirmMessageHelper += "<br>" + translatedMultiplyYourBetByValueWhenYourPrizeMultiplierIsLowerThan.replace("%value%", langNumberFormatter(valBetMultiplier)).replace("%prizeMultiplier%", langNumberFormatter(valPrizeMultiplier));
                    } else {
                        valBetMultiplier = 0;
                        valPrizeMultiplier = 0;
                    }
                    if (iCILG == 0) {
                        choseHE = -1;
                        choseBetValue = -1;
                        betValue = langNumberParser($("#tbBetValue").val());
                        if (!(betValue >= mILBV)) {
                            stopPlaying();
                            alert(decodeEntities(translatedInvalidAmountMustBeGreaterThan));
                            return;
                        }
                        var currMaxBet = langNumberParser($("#spMaximumBet").html());
                        if (betValue > currMaxBet && !isPlayForFunChecked && (getPropertyCount($("#tblInstantLotteryNumbers").data()) > 0)) {
                            stopPlaying();
                            alert($("#spMaxPayoutPerBet").text());
                            return;
                        }
                    }
                    if ($("#cbAutoPlay").get(0).checked && $("#cbStopAfterRounds").get(0).checked) {
                        valStopAfterRounds = langNumberParser($("#tbMaximumRounds").val());
                        if (!(valStopAfterRounds >= 1)) {
                            stopPlaying();
                            alert(decodeEntities(translatedInvalidNumberOfRounds));
                            return;
                        }
                        confirmMessageHelper += "<br>" + translatedStopAfterRounds.replace("%maximumRounds%", langNumberFormatter(valStopAfterRounds));
                    } else {
                        valStopAfterRounds = 0;
                    }
                    if ($("#cbAutoPlay").get(0).checked) {
                        isAutoPlay = true;
                    } else {
                        isAutoPlay = false;
                    }
                    if ($("#cbAutoPlay").get(0).checked && $("#cbStopIfBalanceDrops").get(0).checked) {
                        valStopIfBalanceDrops = langNumberParser($("#tbStopIfBalanceDrops").val());
                        if (!(valStopIfBalanceDrops > 0)) {
                            stopPlaying();
                            alert(decodeEntities(translatedInvalidAmountInformedInStopIfBalanceDropsBy));
                            return;
                        }
                        confirmMessageHelper += "<br>" + translatedStopIfBalanceDropsBy.replace("%btcValue%", langNumberFormatterSatoshi(valStopIfBalanceDrops))
                    } else {
                        valStopIfBalanceDrops = 0;
                    }
                    if ($("#cbAutoPlay").get(0).checked && $("#cbStopIfBalanceIncreases").get(0).checked) {
                        valStopIfBalanceIncreases = langNumberParser($("#tbStopIfBalanceIncreases").val());
                        if (!(valStopIfBalanceIncreases > 0)) {
                            stopPlaying();
                            alert(decodeEntities(translatedInvalidAmountInformedInStopIfBalanceIncreasesBy));
                            return;
                        }
                        confirmMessageHelper += "<br>" + translatedStopIfBalanceIncreasesBy.replace("%btcValue%", langNumberFormatterSatoshi(valStopIfBalanceIncreases));
                    } else {
                        valStopIfBalanceIncreases = 0;
                    }
                    if ($("#cbAutoPlay").get(0).checked && $("#cbStopIfWinningsDropFromMaximumProfit").get(0).checked) {
                        valStopIfWinningsDropFromMaximumProfit = langNumberParser($("#tbStopIfWinningsDropFromMaximumProfit").val());
                        if (!(valStopIfWinningsDropFromMaximumProfit > 0)) {
                            stopPlaying();
                            alert(decodeEntities(translatedInvalidAmountInformedInStopIfYourWinningsDrop));
                            return;
                        }
                        confirmMessageHelper += "<br>" + translatedStopIfYourWinningsDropBTCFromTheMaximumProfitGot.replace("%btcValue%", langNumberFormatterSatoshi(valStopIfWinningsDropFromMaximumProfit));
                    } else {
                        valStopIfWinningsDropFromMaximumProfit = 0;
                    }
                    if (!(getPropertyCount($("#tblInstantLotteryNumbers").data()) > 0) && iCILG == 0) {
                        stopPlaying();
                        alert(decodeEntities(translatedSelectMoreNumbers))
                        return;
                    }
                    $("#cbShowDialogsChangeHouseEdge").on("change", function() {
                        if ($("#cbShowDialogsChangeHouseEdge").is(":checked")) {
                            $('#cbShowDialogsChangeHouseEdge').prop('checked', false);
                            permanentKeepOrRaiseHouseEdge = "";
                            permanentChoseHEMultiplier = -1;
                            $('#divShowDialogChangeHouseEdge').hide();
                        }
                    });
                    function playClickedHelper(verifiedBetValue) {
                        if (typeof verifiedBetValue === 'undefined' && !isPlayForFunChecked) {
                            if (iCILG == 0 && getPropertyCount($("#tblInstantLotteryNumbers").data()) > 0) {
                                var currHE = (changeHouseEdge(decreaseHouseEdgeBasedOnBetValue()));
                                var currHEMaxBet = Math.floor(currMaxBet * (currHE == 0 ? 0.09 : currHE) * 100000000) / 100000000;
                                var firstCurrHEMaxBet = currHEMaxBet;
                                while (betValue > currHEMaxBet) {
                                    currHE += 0.1;
                                    currHE = parseFloat(currHE.toFixed(1));
                                    var arrPayoutHelper = htPayoutTables[currHE][getPropertyCount($("#tblInstantLotteryNumbers").data()) - 1]
                                    var highestMultiplier = arrPayoutHelper[arrPayoutHelper.length - 1]
                                    currHEMaxBet = (Math.floor((mPPB / highestMultiplier) * (currHE == 0 ? 0.09 : currHE) * 100000000) / 100000000);
                                }
                                if (firstCurrHEMaxBet != currHEMaxBet && valBetMultiplier <= 1) {
                                    $("#btRaiseHouseEdge").val(translatedRaiseTheHouseEdge.replace("%houseEdge%", langNumberFormatter(currHE)).replace("%betValue%", langNumberFormatterSatoshi(betValue)));
                                    $("#btKeepHouseEdge").val(translatedKeepTheHouseEdge.replace("%houseEdge%", langNumberFormatter(changeHouseEdge(decreaseHouseEdgeBasedOnBetValue()))).replace("%betValue%", langNumberFormatterSatoshi(firstCurrHEMaxBet)));
                                    $("#spCurrHouseEdgeDialogHouseEdgeChange").html(langNumberFormatter(changeHouseEdge(decreaseHouseEdgeBasedOnBetValue())));
                                    $("#spMaxBetValueDialogHouseEdgeChange").html(langNumberFormatterSatoshi(firstCurrHEMaxBet));
                                    $("#btRaiseHouseEdge").off("click");
                                    $("#btKeepHouseEdge").off("click");
                                    $("#btRaiseHouseEdge").on("click", function() {
                                        if (permanentKeepOrRaiseHouseEdge == "" && $("#cbDoNotShowDialogHouseEdge").is(":checked")) {
                                            permanentKeepOrRaiseHouseEdge = "raise";
                                            $('#divShowDialogChangeHouseEdge').show();
                                        }
                                        choseHE = changeHouseEdge(currHE);
                                        choseBetValue = betValue;
                                        playClickedHelper(true);
                                        $("#dialogHouseEdgeChange").dialog("close");
                                    });
                                    $("#btKeepHouseEdge").on("click", function() {
                                        if (permanentKeepOrRaiseHouseEdge == "" && $("#cbDoNotShowDialogHouseEdge").is(":checked")) {
                                            permanentKeepOrRaiseHouseEdge = "keep";
                                            $('#divShowDialogChangeHouseEdge').show();
                                        }
                                        choseHE = changeHouseEdge(decreaseHouseEdgeBasedOnBetValue());
                                        choseBetValue = parseFloat(firstCurrHEMaxBet.toFixed(8));
                                        playClickedHelper(true);
                                        $("#dialogHouseEdgeChange").dialog("close");
                                    });
                                    if (permanentKeepOrRaiseHouseEdge != "") {
                                        if (permanentKeepOrRaiseHouseEdge == "raise") {
                                            $("#btRaiseHouseEdge").click();
                                        }
                                        if (permanentKeepOrRaiseHouseEdge == "keep") {
                                            $("#btKeepHouseEdge").click();
                                        }
                                    } else {
                                        $("#dialogHouseEdgeChange").dialog({
                                            resizable: false,
                                            modal: true,
                                            width: 500,
                                            show: {
                                                effect: "drop",
                                                duration: "fast"
                                            },
                                            dialogClass: 'biggerBorder'
                                        });
                                    }
                                    return;
                                }
                                if (valBetMultiplier > 1 && decreaseHouseEdgeBasedOnBetValue() < 1) {
                                    $("#spCurrHouseEdgeDialogHouseEdgeChangeMultiplier").html(langNumberFormatter(changeHouseEdge(decreaseHouseEdgeBasedOnBetValue())));
                                    $("#spMaxBetValueDialogHouseEdgeChangeMultiplier").html(langNumberFormatterSatoshi(firstCurrHEMaxBet));
                                    $("#slctHouseEdgeDialogHouseEdgeChangeMultiplier").find('option').remove();
                                    for (var iterSHEDM = decreaseHouseEdgeBasedOnBetValue(); iterSHEDM < 1; iterSHEDM += 0.1) {
                                        $("#slctHouseEdgeDialogHouseEdgeChangeMultiplier").append('<option value="' + iterSHEDM.toFixed(1) + '">' + langNumberFormatter(iterSHEDM) + '</option>')
                                    }
                                    $("#slctHouseEdgeDialogHouseEdgeChangeMultiplier").off("change");
                                    $("#slctHouseEdgeDialogHouseEdgeChangeMultiplier").on("change", function() {
                                        var currHEMultiplier = parseFloat($("#slctHouseEdgeDialogHouseEdgeChangeMultiplier").val());
                                        var arrPayoutHelperMultiplier = htPayoutTables[currHEMultiplier][getPropertyCount($("#tblInstantLotteryNumbers").data()) - 1];
                                        var highestMultiplierDialogMultiplier = arrPayoutHelperMultiplier[arrPayoutHelperMultiplier.length - 1];
                                        $("#spMaxBetValueDialogHouseEdgeChangeMultiplierSelect").html(langNumberFormatterSatoshi((Math.floor((mPPB / highestMultiplierDialogMultiplier) * 100000000 * (currHEMultiplier == 0 ? 0.09 : currHEMultiplier)) / 100000000)));
                                    });
                                    $("#btConfirmChangeHouseEdgeMultiplier").off("click");
                                    $("#btConfirmChangeHouseEdgeMultiplier").on("click", function() {
                                        var currHEMultiplier = parseFloat($("#slctHouseEdgeDialogHouseEdgeChangeMultiplier").val());
                                        choseBetValue = betValue;
                                        if (permanentChoseHEMultiplier >= 0) {
                                            currHEMultiplier = permanentChoseHEMultiplier
                                        }
                                        var arrPayoutHelperMultiplier = htPayoutTables[currHEMultiplier][getPropertyCount($("#tblInstantLotteryNumbers").data()) - 1];
                                        var highestMultiplierDialogMultiplier = arrPayoutHelperMultiplier[arrPayoutHelperMultiplier.length - 1];
                                        var choseBetValueHelper = (Math.floor((mPPB / highestMultiplierDialogMultiplier) * 100000000 * (currHEMultiplier == 0 ? 0.09 : currHEMultiplier)) / 100000000);
                                        if (choseBetValueHelper < choseBetValue) {
                                            choseBetValue = choseBetValueHelper;
                                        }
                                        if (permanentChoseHEMultiplier < 0 && $("#cbDoNotShowDialogHouseEdgeMultiplier").is(":checked")) {
                                            permanentChoseHEMultiplier = parseFloat($("#slctHouseEdgeDialogHouseEdgeChangeMultiplier").val());
                                            $('#divShowDialogChangeHouseEdge').show();
                                        }
                                        choseHE = currHEMultiplier;
                                        playClickedHelper(true);
                                        $("#dialogHouseEdgeChangeMultiplier").dialog("close");
                                    });
                                    if (permanentChoseHEMultiplier >= 0) {
                                        $("#btConfirmChangeHouseEdgeMultiplier").trigger("click")
                                    } else {
                                        $("#dialogHouseEdgeChangeMultiplier").dialog({
                                            resizable: false,
                                            modal: true,
                                            width: 500,
                                            show: {
                                                effect: "drop",
                                                duration: "fast"
                                            },
                                            dialogClass: 'biggerBorder'
                                        });
                                        $("#slctHouseEdgeDialogHouseEdgeChangeMultiplier").val($("#slctHouseEdgeDialogHouseEdgeChangeMultiplier option:first").val());
                                        $("#slctHouseEdgeDialogHouseEdgeChangeMultiplier").trigger("change");
                                    }
                                    return;
                                }
                            }
                        }
                        isPlaying = true;
                        $("#divButtonsPlay").hide();
                        $("#divButtonsPlay2").hide();
                        $("#divButtonsStop").show();
                        if (isAutoPlay) {
                            $("#divAdvanceRounds").show();
                        } else {
                            $("#divAdvanceRounds").hide();
                        }
                        if (iCILG > 0) {
                            currentGameStats = {
                                'round': rCILG,
                                'betValue': bVCILG,
                                'winnings': wCILG,
                                'couldHaveWon': cHWCILG
                            };
                        } else {
                            currentGameStats = {
                                'round': 0,
                                'betValue': ((choseBetValue > 0 && betValue > choseBetValue) ? choseBetValue : betValue),
                                'winnings': 0,
                                'couldHaveWon': 0
                            };
                        }
                        arrInstantLotteryTicketNumbers = new Array();
                        $.each($("#tblInstantLotteryNumbers").data(), function(name, val) {
                            var dataNumberHelper = parseInt(name, 10);
                            if (dataNumberHelper >= 1 && dataNumberHelper <= 67 && $.inArray(dataNumberHelper, arrInstantLotteryTicketNumbers) == -1) {
                                arrInstantLotteryTicketNumbers.push(dataNumberHelper);
                            } else {
                                alert(decodeEntities(translatedSelectMoreNumbers));
                                return false;
                            }
                        });
                        if (arrInstantLotteryTicketNumbers.length > 0 || iCILG > 0) {
                            $("#divQuickPick").hide("fast");
                            $("#tdRounds").html(currentGameStats.round);
                            $("#tdBetValue").html(langNumberFormatterSatoshi(currentGameStats.betValue));
                            $("#tdWinnings").css("color", (currentGameStats.winnings >= 0 ? "#00BB00" : "#FF0000"));
                            $("#tdWinnings").html((currentGameStats.winnings >= 0 ? "+" : "") + langNumberFormatterSatoshi(currentGameStats.winnings));
                            $("#tdCouldHaveWon").html(langNumberFormatterSatoshi(currentGameStats.couldHaveWon));
                            $("#divCurrentGame").show();

                            $("#cbAutoPlay").prop('disabled', true);
                            $("#cbStopAfterRounds").prop('disabled', true);
                            $("#tbMaximumRounds").prop('readonly', true);
                            $("#cbStopIfBalanceDrops").prop('disabled', true);
                            $("#tbStopIfBalanceDrops").prop('readonly', true);
                            $("#cbStopIfBalanceIncreases").prop('disabled', true);
                            $("#tbStopIfBalanceIncreases").prop('readonly', true);
                            $("#cbStopIfWinningsDropFromMaximumProfit").prop('disabled', true);
                            $("#tbStopIfWinningsDropFromMaximumProfit").prop('readonly', true);
                            $("#cbMultiplyYourBetBy").prop('disabled', true);
                            $("#tbBetMultiplier").prop('readonly', true);
                            $("#tbPrizeMultiplier").prop('readonly', true);
                            $("#cbPlayForFun").prop('disabled', true);
                            $("#tbBetValue").prop('readonly', true);
                            $("#slctHouseEdge").prop('disabled', true);

                            roundsStillToAdvance = 0;
                            lastBetValue = 0;
                            nextBetValue = 0;
                            playInstantLottery();
                        }
                    }
                    if (isPlayForFunChecked || iCILG > 0 || dNSCD) {
                        playClickedHelper();
                    }
                    if (!isPlayForFunChecked && iCILG <= 0 && !dNSCD) {
                        $("#spConfirmStartGame").html(translatedDoYouWannaStartTheGameWithTheFollowingValues + "<br>" + translatedBetValue.replace("%betValue%", langNumberFormatterSatoshi(betValue)) + confirmMessageHelper);
                        var dialog_buttons = {};
                        dialog_buttons[translatedYes] = function() {
                            if ($("#cbDisableConfirmStartGame").get(0).checked) {
                                dNSCD = true;
                                PageMethods.updateDNSCD(csrf1, csrf2, null, null);
                            }
                            playClickedHelper();
                            $(this).dialog("close");
                        }
                        dialog_buttons[translatedNo] = function() {
                            $(this).dialog("close");
                        }
                        $("#dialogConfirmPlay").dialog({
                            resizable: false,
                            modal: true,
                            width: 400,
                            show: {
                                effect: "drop",
                                duration: "fast"
                            },
                            focus: function(event, ui) {
                                setTimeout(function() {
                                    $('.ui-dialog-buttonpane').find('button:eq(0)').focus();
                                }, 1);
                            },
                            buttons: dialog_buttons,
                            dialogClass: 'noTitleStuff'
                        });
                    }

                }
            });
            if (iCILG > 0) {
                if (confirm(translatedYouHaveAnInstantLotteryGameInProgress)) {
                    if (iAPCILG) {
                        $("#cbAutoPlay").get(0).checked = true;
                        $("#divAutoPlay").show();
                        if (sARCILG >= 1) {
                            $("#cbStopAfterRounds").get(0).checked = true;
                            $("#tbMaximumRounds").get(0).disabled = false;
                            $("#tbMaximumRounds").val(sARCILG);
                        } else {
                            $("#cbStopAfterRounds").get(0).checked = false;
                            $("#tbMaximumRounds").get(0).disabled = true;
                        }
                        if (sIBDCILG > 0) {
                            $("#cbStopIfBalanceDrops").get(0).checked = true;
                            $("#tbStopIfBalanceDrops").get(0).disabled = false;
                            $("#tbStopIfBalanceDrops").val(langNumberFormatterSatoshi(sIBDCILG));
                        } else {
                            $("#cbStopIfBalanceDrops").get(0).checked = false;
                            $("#tbStopIfBalanceDrops").get(0).disabled = true;
                        }
                        if (sIBICILG > 0) {
                            $("#cbStopIfBalanceIncreases").get(0).checked = true;
                            $("#tbStopIfBalanceIncreases").get(0).disabled = false;
                            $("#tbStopIfBalanceIncreases").val(langNumberFormatterSatoshi(sIBICILG));
                        } else {
                            $("#cbStopIfBalanceIncreases").get(0).checked = false;
                            $("#tbStopIfBalanceIncreases").get(0).disabled = true;
                        }
                        if (sIWDFMPCILG > 0) {
                            $("#cbStopIfWinningsDropFromMaximumProfit").get(0).checked = true;
                            $("#tbStopIfWinningsDropFromMaximumProfit").get(0).disabled = false;
                            $("#tbStopIfWinningsDropFromMaximumProfit").val(langNumberFormatterSatoshi(sIWDFMPCILG));
                        } else {
                            $("#cbStopIfWinningsDropFromMaximumProfit").get(0).checked = false;
                            $("#tbStopIfWinningsDropFromMaximumProfit").get(0).disabled = true;
                        }
                        if (bMCILG > 1 && pMCILG > 0) {
                            $("#cbMultiplyYourBetBy").get(0).checked = true;
                            $("#tbBetMultiplier").get(0).disabled = false;
                            $("#tbBetMultiplier").val(langNumberFormatter(bMCILG));
                            $("#tbPrizeMultiplier").get(0).disabled = false;
                            $("#tbPrizeMultiplier").val(langNumberFormatter(pMCILG));
                        } else {
                            $("#cbMultiplyYourBetBy").get(0).checked = false;
                            $("#tbBetMultiplier").get(0).disabled = true;
                            $("#tbPrizeMultiplier").get(0).disabled = true;
                        }
                    }
                    var arrNumbersChosen = cNCILG.split("-");
                    clickInstantNumber(0, arrNumbersChosen, function() {
                        //alert("teste");
                        $("#btPlayInstant").click();
                    });
                } else {
                    stopPlaying();
                }
            }
            function showGameDetails(betValue, rounds, secret, player, winnings, maximumProfitGot, stopAfterRounds, stopWhenBalanceDrops, stopWhenBalanceIncreases, date, stopIfWinningsDropFromMaximumProfit, betMultiplier, prizeMultiplier, numbers, houseEdgePercent) {
                $("#spGDBetValue").html(betValue);
                $("#spGDRounds").html(rounds);
                $("#spGDSecret").html(secret);
                $("#spGDPlayer").html(player);
                $("#spGDWinnings").html(winnings);
                $("#spGDMaximumProfitGot").html(maximumProfitGot);
                if (langNumberParser(stopAfterRounds) > 0) {
                    $("#trGDStopAfterRounds").show();
                    $("#spGDStopAfterRounds").html(stopAfterRounds);
                } else {
                    $("#trGDStopAfterRounds").hide();
                }
                if (langNumberParser(stopWhenBalanceDrops) > 0) {
                    $("#trGDStopIfBalanceDropsBy").show();
                    $("#spGDStopIfBalanceDropsBy").html(stopWhenBalanceDrops);
                } else {
                    $("#trGDStopIfBalanceDropsBy").hide();
                }
                if (langNumberParser(stopWhenBalanceIncreases) > 0) {
                    $("#trGDStopIfBalanceIncreasesBy").show();
                    $("#spGDStopIfBalanceIncreasesBy").html(stopWhenBalanceIncreases);
                } else {
                    $("#trGDStopIfBalanceIncreasesBy").hide();
                }
                if (langNumberParser(stopIfWinningsDropFromMaximumProfit) > 0) {
                    $("#trGDStopIfWinningsDropFromMaximumProfit").show();
                    $("#spGDStopIfWinningsDropFromMaximumProfit").html(stopIfWinningsDropFromMaximumProfit);
                } else {
                    $("#trGDStopIfWinningsDropFromMaximumProfit").hide();
                }
                if (langNumberParser(betMultiplier) > 0) {
                    $("#trGDBetMultiplier").show();
                    $("#spGDBetMultiplier").html(betMultiplier);
                } else {
                    $("#trGDBetMultiplier").hide();
                }
                if (langNumberParser(prizeMultiplier) > 0) {
                    $("#trGDWhenYourPrizeMultiplierIsLowerThan").show();
                    $("#spGDWhenYourPrizeMultiplierIsLowerThan").html(prizeMultiplier);
                } else {
                    $("#trGDWhenYourPrizeMultiplierIsLowerThan").hide();
                }
                $("#spGDChosenNumbers").html(numbers);
                $("#spGDHouseEdgePercent").html(houseEdgePercent + "%");
                $("#divGameDetails").dialog({
                    resizable: true,
                    height: 456,
                    width: 895,
                    show: {
                        effect: "drop",
                        duration: "fast"
                    },
                    modal: true,
                    open: function(event, ui) {
                        $('.ui-widget-overlay').bind('click', function(event, ui) {
                            $('#divGameDetails').dialog('close');
                        });
                    }
                });
            }
            window.showGameDetails = showGameDetails;
            var createdRecaptcha = false;
            $("#btFreeBitcoins").click(function() {
                $("#btFreeBitcoins").removeClass("btFreeBitcoinsAnimation")
                document.cookie = "clickedFreeBitcoins=true; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/";
                if (!iULI) {
                    alert(decodeEntities(translatedToGetYourFreeBitcoins));
                    return;
                }
                $("#divFreeBitcoinsMiddle").show();
                $("#divClaimedFreeBitcoins").hide();
                $("#divFreeBitcoins").dialog({
                    resizable: true,
                    height: 606,
                    width: 855,
                    show: {
                        effect: "drop",
                        duration: "fast"
                    },
                    modal: true,
                    open: function(event, ui) {
                        $('.ui-widget-overlay').bind('click', function(event, ui) {
                            $('#divFreeBitcoins').dialog('close');
                        });
                        $(this).parent().promise().done(function() {
                            if (!createdRecaptcha) {
                                var captchaContainer = null;
                                captchaContainer = grecaptcha.render('divRecaptcha', {
                                    'sitekey': '6LcDY2oUAAAAAM2p3J3YBswouBcJHh5J_zfuaYyN'
                                });
                                createdRecaptcha = true;
                            } else {
                                grecaptcha.reset();
                            }
                        });
                    }
                });
            });
            $("#btClose").click(function() {
                $('#divFreeBitcoins').dialog('close');
            });
            var listLastClaims = lLCFB;
            $("#btClaimNow").click(function() {
                if (!iULI) {
                    alert(decodeEntities(translatedToGetYourFreeBitcoins));
                    return;
                }
                function claimFreeBitcoinsSuccess(result, userContext, methodName) {
                    $("#btClaimNow").get(0).disabled = false;
                    if (result.indexOf("err||") == 0) {
                        alert(decodeEntities(result.split("||")[1]));
                    } else if (result.indexOf("ok||") == 0) {
                        var arrHelper = result.split("||");
                        listLastClaims = new Array();
                        for (var iterHelper = 2; iterHelper < arrHelper.length; iterHelper++) {
                            var claim = {};
                            claim.dateClaimed = new Date((new Date()).getTime() - parseInt(arrHelper[iterHelper].split("|")[0]));
                            claim.amountClaimed = parseFloat(arrHelper[iterHelper].split("|")[1]);
                            listLastClaims.push(claim);
                        }
                        lLCFB = listLastClaims;
                        fBR += parseFloat(Math.floor(parseFloat(result.split("||")[1]))) / 100000000;
                        changeHouseEdge(1);
                        $("#spClaimedSatoshiAmount").html(langNumberFormatter(Math.floor(parseFloat(result.split("||")[1]))));
                        $("#divFreeBitcoinsMiddle").hide("fast");
                        $("#divClaimedFreeBitcoins").show("fast");
                        FB.XFBML.parse();
                        $("#divShareThis").html('');
                        $("#divShareThis").html('<a href="javascript:void(0);" id="aFBShareButton"><img src="images/SquareSocial/facebook.png" alt="facebook" width="28" height="28"/></a>');
                        $("#aFBShareButton").click(function() {
                            FB.ui({
                                method: 'share',
                                href: 'https://yabtcl.com/' + (addrUserID > 0 ? '?ref=' + addrUserID : '')
                            }, function(response) { });
                        });
                        $($.parseHTML('&nbsp;&nbsp;<a href="https://twitter.com/share" class="twitter-share-button" data-lang="en" data-via="yabtcl" data-text="#YABTCL - The most complete provably fair #Bitcoin #Lottery with the greatest jackpots:" data-count="none" data-size="large" data-url="https://yabtcl.com/' + (addrUserID > 0 ? '?ref=' + addrUserID : '') + '">Tweet</a>')).appendTo("#divShareThis");
                        twttr.widgets.load();
                        $($.parseHTML('&nbsp;&nbsp;<div class="g-plus" data-action="share" data-href="https://yabtcl.com/' + (addrUserID > 0 ? '?ref=' + addrUserID : '') + '" data-annotation="none" style="height: 26px;"></div>')).appendTo("#divShareThis");
                        (function() {
                            var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
                            po.src = 'https://apis.google.com/js/platform.js';
                            var s = document.getElementById('divShareThis').appendChild(po);
                        })();
                        $($.parseHTML('&nbsp;&nbsp;<a href="//www.pinterest.com/pin/create/button/?url=https%3A%2F%2Fyabtcl.com%2F' + (addrUserID > 0 ? '%3Fref%3D' + addrUserID : '') + '&media=https%3A%2F%2Fyabtcl.com%2Fimages%2Fpage.jpg&description=YABTCL.com%20-%20The%20most%20complete%20provably%20fair%20Bitcoin%20lottery%20with%20the%20greatest%20jackpots" data-pin-do="buttonPin" data-pin-config="none" data-pin-height="28"><img src="//assets.pinterest.com/images/pidgets/pinit_fg_en_rect_gray_28.png" /></a>')).appendTo("#divShareThis");
                        (function() {
                            var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
                            po.src = '//assets.pinterest.com/js/pinit.js';
                            var s = document.getElementById('divShareThis').appendChild(po);
                        })();

                    }
                }
                PageMethods.claimFreeBitcoins("rcv2", grecaptcha.getResponse(), csrf1, csrf2, claimFreeBitcoinsSuccess, errorOcurred);
                $("#btClaimNow").get(0).disabled = true;
            });

            if (sEM) {
                var dialog_buttons = {};
                dialog_buttons[translatedYes] = function() {
                    location.href = 'profile.aspx';
                }
                dialog_buttons[translatedNo] = function() {
                    $(this).dialog("close");
                }
                $("#divInformEmail").dialog({
                    resizable: false,
                    modal: true,
                    width: 400,
                    show: {
                        effect: "drop",
                        duration: "fast"
                    },
                    focus: function(event, ui) {
                        setTimeout(function() {
                            $('.ui-dialog-buttonpane').find('button:eq(0)').focus();
                        }, 1);
                    },
                    buttons: dialog_buttons,
                    dialogClass: 'noTitleStuff'
                });
            }

            function updateFreeBTCAmount() {
                if (iULI) {
                    var dateNow = new Date();
                    var amountToClaimHelper = mCFBIS;
                    for (var iterHelper = 0; iterHelper < listLastClaims.length; ++iterHelper) {
                        var claim = listLastClaims[iterHelper];
                        var diffMS = dateNow.getTime() - claim.dateClaimed.getTime();
                        if (diffMS > (mMCFB * 60 * 1000)) {
                            continue;
                        }
                        amountToClaimHelper -= claim.amountClaimed;
                        amountToClaimHelper += (claim.amountClaimed / (mMCFB * 60 * 1000)) * diffMS;
                    }
                    var usBalance = langNumberParser($("#spBalance").html());
                    var maximumFreeBTC = ((mBFBIS / 100000000) - usBalance);
                    if (maximumFreeBTC <= 0) {
                        $("#spSatoshiAmountToClaim").html(0)
                        idTimeoutUpdateFreeBTCAmount = setTimeout(updateFreeBTCAmount, 100);
                        return;
                    }
                    maximumFreeBTC = (maximumFreeBTC * 100000000);
                    var maxAmountHelper = amountToClaimHelper;
                    if (maxAmountHelper < maximumFreeBTC) {
                        maximumFreeBTC = maxAmountHelper
                    }
                    $("#spSatoshiAmountToClaim").html(parseInt(Math.round(maximumFreeBTC)));
                    idTimeoutUpdateFreeBTCAmount = setTimeout(updateFreeBTCAmount, 100);
                    return;
                }
            }
            var idTimeoutUpdateFreeBTCAmount = setTimeout(updateFreeBTCAmount, 100);
            $("#tbBetMultiplier").change(function() {
                if (!($("#cbPlayForFun").get(0).checked)) {
                    changeHouseEdge(decreaseHouseEdgeBasedOnBetValue());
                }
            });

            function verifyFreeBitcoinsClicked() {
                if (document.cookie.replace(/(?:(?:^|.*;\s*)clickedFreeBitcoins\s*\=\s*([^;]*).*$)|^.*$/, "$1") !== "true") {
                    return false;
                } else {
                    return true;
                }
            }
            function verifyWageredClicked() {
                if (document.cookie.replace(/(?:(?:^|.*;\s*)clickedWagered\s*\=\s*([^;]*).*$)|^.*$/, "$1") !== "true") {
                    return false;
                } else {
                    return true;
                }
            }
            function verifyChatClicked() {
                if (document.cookie.replace(/(?:(?:^|.*;\s*)clickedChat\s*\=\s*([^;]*).*$)|^.*$/, "$1") !== "true") {
                    return false;
                } else {
                    return true;
                }
            }
            if (verifyFreeBitcoinsClicked()) {
                $("#btFreeBitcoins").removeClass("btFreeBitcoinsAnimation");
            }

            $("#btBetValueMin").click(function() {
                $("#tbBetValue").val(langNumberFormatterSatoshi(mILBV));
                $("#tbBetValue").trigger("change");
            });
            $("#btBetValued2").click(function() {
                if (langNumberParser($("#tbBetValue").val()) / 2 < mILBV) {
                    $("#tbBetValue").val(langNumberFormatterSatoshi(mILBV));
                } else {
                    $("#tbBetValue").val(langNumberFormatterSatoshi(langNumberParser($("#tbBetValue").val()) / 2));
                }
                $("#tbBetValue").trigger("change");
            });
            $("#btBetValuex2").click(function() {
                var valueToCompare = langNumberParser(!($("#cbPlayForFun").get(0).checked) ? $("#spBalance").html() : $("#spFreeCreditsValue").html())
                if (langNumberParser($("#tbBetValue").val()) * 2 > valueToCompare) {
                    $("#tbBetValue").val(langNumberFormatterSatoshi(valueToCompare));
                } else {
                    $("#tbBetValue").val(langNumberFormatterSatoshi(langNumberParser($("#tbBetValue").val()) * 2));
                }
                $("#tbBetValue").trigger("change");
            });
            $("#btBetValueMax").click(function() {
                var valueToCompare = langNumberParser(!($("#cbPlayForFun").get(0).checked) ? $("#spBalance").html() : $("#spFreeCreditsValue").html())
                if (!($("#cbPlayForFun").is(":checked")) && getPropertyCount($("#tblInstantLotteryNumbers").data()) > 0) {
                    var currMaxBetHelper = langNumberParser($("#spMaximumBet").html());
                    if (currMaxBetHelper < valueToCompare) {
                        valueToCompare = currMaxBetHelper;
                    }
                }
                $("#tbBetValue").val(langNumberFormatterSatoshi(valueToCompare));
                $("#tbBetValue").trigger("change");
            });
            $("#spWageredRanking").buildMbExtruder({
                position: "right",
                width: 300,
                extruderOpacity: .9,
                textOrientation: "tb",
                contentTopRelativeToFlap: 0,
                hidePanelsOnClose: false,
                accordionPanels: false,
                onExtOpen: function() { },
                onExtContentLoad: function() { $("#extruderLeft").openPanel(); },
                onExtClose: function() { }
            });
            $("#spWageredRanking").css("display", "");
            $("#spWageredRanking").find("div.flap").click(function() {
                $(this).removeClass("btFreeBitcoinsAnimation");
                document.cookie = "clickedWagered=true; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/";
            });
            if (verifyWageredClicked()) {
                $("#spWageredRanking").find("div.flap").removeClass("btFreeBitcoinsAnimation");
            } else {
                $("#spWageredRanking").find("div.flap").addClass("btFreeBitcoinsAnimation");
            }
            var openedChat = false;
            if (iULI) {
                $("#spChat").buildMbExtruder({
                    position: "bottom",
                    width: "100%",
                    extruderOpacity: 1,
                    hidePanelsOnClose: false,
                    accordionPanels: false,
                    onExtOpen: function() {
                        if (!openedChat) {
                            openedChat = true;
                            setTimeout(function() {
                                document.getElementById("iframeChat").src = cIFCA;
                            }, 50);
                        }
                        $("#spChat").find(".ext_wrapper").width("100%");
                    },
                    onExtContentLoad: function() { },
                    afterExtClose: function() {
                        $("#spChat").find(".ext_wrapper").width("auto");
                    },
                    leftTopOrBottom: "0",
                    includeExtWraperWhenAdjustingSize: false
                });
                $("#spChat").css("display", "");
                $("#spChat").find(".ext_wrapper").width("auto");
                $("#spChat").find(".ext_content").resizable({
                    handles: 'n, s'
                });
                $("#spChat").find("div.flap").click(function() {
                    $(this).removeClass("btChatAnimation");
                    document.cookie = "clickedChat=true; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/";
                });
                if (verifyChatClicked()) {
                    $("#spChat").find("div.flap").removeClass("btChatAnimation");
                } else {
                    $("#spChat").find("div.flap").addClass("btChatAnimation");
                }
            }
            var idTimeoutULBW = 0
            function updateLBW() {
                if (idleTime > 2) {
                    idTimeoutULBW = setTimeout(updateLBW, 5000);
                    return;
                }
                function updateLBWError(error, userContext, methodName) {
                    idTimeoutULBW = setTimeout(updateLBW, 20000);
                }
                function updateLBWSuccess(result, userContext, methodName) {
                    var totalLBRows = -1;
                    if (result != "" && result.split("|--|").length >= 2) {
                        totalLBRows = parseInt(result.split("|--|")[1], 10);
                        result = result.split("|--|")[0]
                    }
                    if (result != "") {
                        var rowsToChange = result.split("|-|");
                        var trs = $("#tblLBWT").find("tr");
                        var lastTrIdxChanged = 0;
                        $.each(rowsToChange, function(index, value) {
                            var trIdx = parseInt(value.split("|")[0], 10);
                            lastTrIdxChanged = trIdx;
                            var pName = value.split("|")[1];
                            var amount = value.split("|")[2];
                            if (trs.length >= trIdx + 2) {
                                if (pName != "" && trs.eq(trIdx + 1).find("td").eq(0).html() != pName) {
                                    trs.eq(trIdx + 1).find("td").eq(0).html(pName);
                                    trs.eq(trIdx + 1).find("td").eq(0).effect("highlight", { color: "#FFFF00" }, 600);
                                }
                                if (amount != "" && trs.eq(trIdx + 1).find("td").eq(1).html() != amount) {
                                    trs.eq(trIdx + 1).find("td").eq(1).html(amount);
                                    trs.eq(trIdx + 1).find("td").eq(1).effect("highlight", { color: "#FFFF00" }, 600);
                                }
                            } else {
                                trs.eq(trs.length - 1).after('<tr class="' + ((trs.length % 2 == 1) ? "whiteCell" : "greenCell") + '"><td>' + pName + '</td><td>' + amount + '</td></tr>');
                                trs = $("#tblLBWT").find("tr");
                                trs.eq(trs.length - 1).effect("highlight", { color: "#FFFF00" }, 600);
                            }
                        });
                    }
                    trs = $("#tblLBWT").find("tr");
                    while (totalLBRows >= 0 && trs.length > totalLBRows + 1) {
                        trs.eq(trs.length - 1).remove();
                        trs = $("#tblLBWT").find("tr");
                    }
                    idTimeoutULBW = setTimeout(updateLBW, 5000);
                }
                PageMethods.updateLBW(updateLBWSuccess, updateLBWError);
            }
            idTimeoutULBW = setTimeout(updateLBW, 5000);
            $("#aChangesCalcHouseEdge").click(function() {
                $("#divInformationChangesHouseEdge").dialog({
                    resizable: true,
                    height: 200,
                    width: 600,
                    show: {
                        effect: "drop",
                        duration: "fast"
                    },
                    modal: true,
                    open: function(event, ui) {
                        $('.ui-widget-overlay').bind('click', function(event, ui) {
                            $('#divGameDetails').dialog('close');
                        });
                    }
                });
            });
        });
    }
    verifyGlobalizeLoad();
</script>
</div>
</div>
<div id="button">
</div>
</div>
<script type="text/javascript">
    var showLanguageSelectMenu = true;
    jQuery(document).ready(function ($) {
        $("input").keypress(function (e) {
            if (this.type != "button" && ((e.which && e.which == 13) || (e.keyCode && e.keyCode == 13))) {
                $('.default:visible')[0].click();
                return true;
            }
        });
    });

    
</script>
<script type="text/javascript">

    var rpguid = '';
    
</script>
<script type="text/javascript">
    var refUserID = 0;
</script>
<div id="divLoginSignUp" style="display: none; position: absolute; width: 450px; background-color: #378f2d; font-family: Verdana; font-size: 13px; font-weight:bold; color: #FFFFFF; padding: 5px 5px 15px 5px; border: 2px solid #000000">
<div style="float: right"><a id="aHideLoginOrSignup" href="javascript:void(0);"><img alt="hide" src="images/Delete_12x12.png" /></a></div><br />
<table border="0" style="margin: 0 auto;">
<tr>
<td align="right">
<span id="txtTitle">Login or Bitcoin Address:</span>
<div id="lblLoginAddress" style="display: none">Login (Optional): </div>
<div style="height: 5px"></div>
</td>
<td align="left">
<div id="divLoginAddress"><input type="text" name="loginOrAddress" id="tbLoginOrAddress" style="width: 200px" /></div>
<div style="height: 5px"></div>
</td>
</tr>
<tr id="divLoginAddress2" style="display: none">
<td align="right">
<span id="lblLoginAddress2">Bitcoin Address: </span>
<div style="height: 5px"></div>
</td>
<td align="left">
<input type="text" name="tbLoginOrAddress2" id="tbLoginOrAddress2" style="width: 200px" />
<div style="height: 5px"></div>
</td>
</tr>
<tr id="divPassword">
<td align="right">
<div id="txtPassword1">Password: </div><div id="txtPassword2" style="display: none; ">Password:&nbsp;</div>
<div style="height: 5px"></div>
</td>
<td align="left">
<input type="password" name="tbPass" id="tbPass" style="width: 200px" />
<div style="height: 5px"></div>
</td>
</tr>
<tr id="divConfirmPassword" style="display: none">
<td align="right">
<span id="txtConfirmPassword">Confirm Password: </span>
<div style="height: 5px"></div>
</td>
<td align="left">
<input type="password" name="tbConfirmPass" id="tbConfirmPass" style="width: 200px" />
<div style="height: 5px"></div>
</td>
</tr>
<tr id="divEmailRegisterUser" style="display: none">
<td align="right">
<span id="txtEmail">Email (Optional): </span>
<div style="height: 5px"></div>
</td>
<td align="left" style="vertical-align: middle;">
<input type="text" name="tbEmailRegisterUser" id="tbEmailRegisterUser" style="width: 200px; vertical-align: middle;" />&nbsp;&nbsp;<img src="images/circle-question-mark16x16.png" style="vertical-align: middle; cursor: pointer;" alt="" id="imgHelpEmail" />
<div style="height: 5px"></div>
</td>
</tr>
</table>
<div style="display: none; padding-bottom: 10px;" id="divResetPasswordByEmail">
<a style="color: rgb(255, 255, 255);" href="javascript:void(0)" id="aResetPassEmail">Click here to receive a link to reset your password in your registered email</a><br /><br />
Or you can reset your password signing a message with one of your registered addresses:
</div>
<div id="divSelectAddress" style="display:none; padding-bottom: 10px;"><select id="selAddress"></select></div>
<div id="divSignMessage" style="display: none; padding-bottom: 10px"><div style="padding-bottom: 10px;"><span id="titleTxtMessage">To complete your registration we will need to verify that the address informed is really yours, so, sign the message below with your address <span id="addressMessage"></span>:</span><br /><textarea id="txtMessage" readonly="readonly" cols="56" rows="8" style="font-size: 13px; background-color: #e0e0e0"></textarea></div>Signature: <input type="text" id="txtSignature" style="width: 346px" /></div>
<div id="divCountDown" style="display: none; padding-bottom: 10px">Your request will be proccessed in about <span id="spSeconds"></span> seconds, thanks for your patience...</div>
<div id="divPasswordReset" style="display: none; padding-bottom: 10px">Inform your new password:<br /><table border="0" style="margin: 0 auto"><tr><td align="right">
<div id="divPRPassword" style="padding-top: 10px; padding-bottom: 10px"><span id="spPRPassword">Password: </span><input type="password" name="tbPRPassword" id="tbPRPassword" style="width: 200px" /><br /></div>
<div id="divPRConfirmPassword"><span id="spPRConfirmPassword">Confirm Password: </span><input type="password" name="tbPRConfirmPassword" id="tbPRConfirmPassword" style="width: 200px" /><br /></div>
</td></tr></table>
</div>
<input type="button" value="Login" id="btLoginOrRegister" class="defaultButton" />&nbsp;&nbsp;<input type="button" value="Back" id="btBack" class="defaultButton" style="display: none" />
<div id="divForgotPassword" style="padding-top: 5px"><a href="javascript:void(0)" id="linkForgotPassword" style="text-decoration: none; color: #000298"><u>Forgot Password</u></a>&nbsp;&nbsp;<a href="javascript:void(0)" id="linkCreateAccount" style="text-decoration: none; color: #000298"><u>Create new account</u></a></div>
<div style="display: none" id="modalConfirm" title="IMPORTANT">As a security measure, some features are only available through message signing using your Bitcoin Address (Original bitcoin client format (Bitcoin Core)), including: <br />
&nbsp;&nbsp;&nbsp;&nbsp;- Reset your password;<br />
&nbsp;&nbsp;&nbsp;&nbsp;- Spend more than <span id="spBTCSpentToStartAskingSignatures" style="font-weight: bold;">5</span> BTC in tickets and quotas between draws (this value can be changed in your profile. Or you can <a href="javascript:void(0)" id="aChangeMinBTC"><b>CLICK HERE</b></a> to change it now.);<br />
&nbsp;&nbsp;&nbsp;&nbsp;- Withdraw to another address that isn&#39;t registered in your account;<br />
<br />We strongly recommend that you use a wallet where you are in control of your private key (like Bitcoin Core or Blockchain.info Wallet) to avoid problems in the future.<br /><br />Are you sure you want to finish your registration with the address <span id="spRegistrationAddress"></span>?</div>
<div style="display: none; padding-top: 20px" id="divResetPassEmail" title="Reset Password"><table style="border: 0px; margin: 0 auto;"><tr><td style="text-align: right;">New Password: </td><td><input type="password" id="tbNewPassword" /></td></tr><tr><td style="text-align: right;">Confirm Password:</td><td><input type="password" id="tbConfirmNewPassword" /></td></tr></table></div>
</div>
<script type="text/javascript">

    jQuery(document).ready(function ($) {
        $.when(
        $.get("js/unicodeCLDR/supplemental/likelySubtags.json"),
        $.get("js/unicodeCLDR/supplemental/numberingSystems.json"),
        $.get("js/unicodeCLDR/main/" + langCode + "/numbers.json"),
        $.get("js/unicodeCLDR/main/" + langCode + "/ca-gregorian.json"),
        $.get("js/unicodeCLDR/main/" + langCode + "/timeZoneNames.json"),
        $.get("js/unicodeCLDR/supplemental/timeData.json"),
        $.get("js/unicodeCLDR/supplemental/weekData.json"),
        $.get("js/unicodeCLDR/supplemental/currencyData.json"),
        $.get("js/unicodeCLDR/main/" + langCode + "/currencies.json"),
        $.get("js/unicodeCLDR/supplemental/weekData.json")).then(function () {
            // Normalize $.get results, we only need the JSON, not the request statuses.
            return [].slice.apply(arguments, [0]).map(function (result) {
                if (typeof result[0] == "string") {
                    return $.parseJSON(result[0]);
                } else {
                    return result[0];
                }
            });

        }).then(Globalize.load).then(function () {
            langObject = Globalize(langCode);
            langNumberFormatter = langObject.numberFormatter({ maximumFractionDigits: 8, useGrouping: false });
            langNumberParser = function (pStr) {
                langNumberParserHelper = langObject.numberParser();
                var pStrHelper = pStr.replace(/[ ]/g, "");
                var mtch = pStrHelper.match(/[^\d]/g);
                if (mtch == null || mtch.length <= 1) {
                    pStrHelper = pStrHelper.replace(/[^\d]/g, ".");
                    return parseFloat(pStrHelper);
                } else {
                    return langNumberParserHelper(pStrHelper);
                }
            }
            var minBTC = "";
            $("#aChangeMinBTC").click(function () {
                var minBTCHelper = prompt(informMinimumBTC, "");
                if (minBTCHelper != null && minBTCHelper != "") {
                    minBTCHelper = langNumberParser(minBTCHelper);
                }
                while (minBTCHelper != null && minBTCHelper != "" && (isNaN(minBTCHelper) || minBTCHelper <= 0)) {
                    alert(informValueGreaterThan0);
                    minBTCHelper = prompt(informMinimumBTC, "");
                    if (minBTCHelper != null && minBTCHelper != "") {
                        minBTCHelper = langNumberParser(minBTCHelper);
                    }
                }
                if (minBTCHelper != null && minBTCHelper != "") {
                    minBTC = minBTCHelper.toFixed(8);
                    while (minBTC.charAt(minBTC.length - 1) == "0") {
                        minBTC = minBTC.substring(0, minBTC.length - 1);
                    }
                    if (minBTC.charAt(minBTC.length - 1) == ".") {
                        minBTC = minBTC.substring(0, minBTC.length - 1);
                    }
                    $("#spBTCSpentToStartAskingSignatures").html(langNumberFormatter(minBTCHelper))
                }
            });
            $("#aHideLoginOrSignup").click(function () {
                $("#divLoginSignUp").slideUp("fast");
                $("#btLoginOrRegister").removeClass("default");
            });
            var divLoginSignUpPosAlreadySet = false
            $("#aLoginSignup").click(function () {
                if ($("#divLoginSignUp").is(":visible")) {
                    $("#divLoginSignUp").slideUp("fast");
                    $("#btLoginOrRegister").removeClass("default");
                } else {
                    if (!divLoginSignUpPosAlreadySet) {
                        var offsetMenu = $("#menuRight").offset();
                        var offsetMenuBottom = $("#menuRight").outerHeight() + offsetMenu.top + 2;
                        var offsetMenuRight = $("#aLoginSignup").width() + $("#aLoginSignup").offset().left + 32;
                        $("#divLoginSignUp").offset({
                            top: offsetMenuBottom,
                            left: (offsetMenuRight - 450)
                        });
                        divLoginSignUpPosAlreadySet = true;
                    }
                    $("#divLoginSignUp").slideDown("fast");
                    $("#btLoginOrRegister").addClass("default");
                }
            });
            function selectTextArea() {
                var $this = $(this);

                $this.select();

                window.setTimeout(function () {
                    $this.select();
                }, 1);

                // Work around WebKit's little problem
                $this.mouseup(function () {
                    // Prevent further mouseup intervention
                    $this.unbind("mouseup");
                    return false;
                });
            }
            $("#txtMessage").focus(selectTextArea);
            $("#txtMessage").click(selectTextArea);
            function errorOcurred(error, userContext, methodName) {
                document.getElementById("btContinue").disabled = false;
                document.getElementById("btLoginOrRegister").disabled = false;
                document.getElementById("tbLoginOrAddress").disabled = false;
                document.getElementById("tbLoginOrAddress2").disabled = false;
                document.getElementById("tbEmailRegisterUser").disabled = false;
                document.getElementById("tbPass").disabled = false;
                document.getElementById("tbConfirmPass").disabled = false;
                alert(anErrorOcurredDuringTheRequest + "\n" + error.get_message());
            }
            function clickLogin() {
                document.getElementById("btLoginOrRegister").disabled = true;
                PageMethods.login($("#tbLoginOrAddress").val(), $("#tbPass").val(), loginSuccess, errorOcurred);
                function loginSuccess(result, userContext, methodName) {
                    document.getElementById("btLoginOrRegister").disabled = false;
                    if (result == "il") {
                        alert(invalidLoginAddressOrPassword);
                    }
                    if (result == "lo") {
                        location.href = "userAccount.aspx"
                    }
                    if (result.indexOf("err") == 0) {
                        alert(translatedSentences[result.split("|")[1]]);
                    }
                }
            }
            $("#btLoginOrRegister").click(clickLogin);
            $("#linkCreateAccount").click(function () {
                $("#txtPassword1").hide("fast");
                $("#txtPassword2").show("fast");
                $("#lblLoginAddress").show("fast");
                $("#btLoginOrRegister").val(decodeEntities(translatedRegister));
                $("#divLoginAddress2").show("fast");
                $("#divConfirmPassword").show("fast");
                $("#divEmailRegisterUser").show("fast");
                //$("#divShowLogin").show("fast");
                $("#btBack").show("fast");
                $("#divForgotPassword").hide("fast");
                $("#txtTitle").hide("fast");
                function clickBackCreateNewAccount() {
                    $("#txtPassword1").show("fast");
                    $("#txtPassword2").hide("fast");
                    $("#lblLoginAddress").hide("fast");
                    $("#btLoginOrRegister").val(decodeEntities(translatedLogin));
                    $("#divLoginAddress2").hide("fast");
                    $("#divConfirmPassword").hide("fast");
                    $("#divEmailRegisterUser").hide("fast");
                    //$("#divShowLogin").hide("fast");
                    $("#btBack").hide("fast");
                    $("#divForgotPassword").show("fast");
                    $("#txtTitle").show("fast");
                    $("#btLoginOrRegister").unbind("click");
                    $("#btLoginOrRegister").click(clickLogin);
                }
                $("#btBack").unbind('click');
                $("#btBack").click(clickBackCreateNewAccount);
                $("#btLoginOrRegister").unbind('click');
                function clickLoginOrRegisterHelper() {
                    if ($.trim($("#tbLoginOrAddress").val()).length > 0 && ($.trim($("#tbLoginOrAddress").val()).length < 4 || $.trim($("#tbLoginOrAddress").val()).length > 30)) {
                        alert(translatedSentences['yourLoginShouldHaveAtLeast']);
                        return;
                    }
                    if ($("#tbPass").val() == "") {
                        alert(youMustInformAPassword);
                        return;
                    }
                    if ($("#tbPass").val().length < 6) {
                        alert(thePasswordMustHaveAtLeast6Characters);
                        return;
                    }
                    if ($("#tbConfirmPass").val() != $("#tbPass").val()) {
                        alert(thePasswordsDontMatch);
                        return;
                    }
                    document.getElementById("btLoginOrRegister").disabled = true;
                    document.getElementById("tbLoginOrAddress").disabled = true;
                    document.getElementById("tbLoginOrAddress2").disabled = true;
                    document.getElementById("tbPass").disabled = true;
                    document.getElementById("tbConfirmPass").disabled = true;
                    document.getElementById("tbEmailRegisterUser").disabled = true;
                    PageMethods.register($("#tbLoginOrAddress").val(), $("#tbLoginOrAddress2").val(), $("#tbPass").val(), $("#tbEmailRegisterUser").val(), registerSuccess, errorOcurred);
                    function registerSuccess(result, userContext, methodName) {
                        document.getElementById("btLoginOrRegister").disabled = false;
                        document.getElementById("tbLoginOrAddress").disabled = false;
                        document.getElementById("tbLoginOrAddress2").disabled = false;
                        document.getElementById("tbPass").disabled = false;
                        document.getElementById("tbEmailRegisterUser").disabled = false;
                        document.getElementById("tbConfirmPass").disabled = false;
                        if (result == "aar") {
                            alert(translatedSentences['thisAddressIsAlreadyRegistered']);
                        } else if (result == "lar") {
                            alert(translatedSentences['thisUsernameIsAlreadyRegistered']);
                        } else if (result == "ia") {
                            alert(theAddressInformedIsInvalid);
                        } else if (result == "il") {
                            alert(translatedSentences['yourLoginShouldHaveAtLeast']);
                        } else if (result == "iem") {
                            alert(translatedSentences['invalidEmail']);
                        } else if (result == "ear") {
                            alert(translatedSentences['thisEmailIsAlreadyRegistered']);
                        } else if (result.indexOf("ro|") == 0) {
                            var addrIndex = result.split("|")[1];
                            var v = result.split("|")[2];
                            $("#spRegistrationAddress").html((addrIndex == 1) ? $("#tbLoginOrAddress").val() : $("#tbLoginOrAddress2").val())
                            document.getElementById("btLoginOrRegister").disabled = true;
                            $("#modalConfirm").dialog({
                                resizable: true,
                                height: 426,
                                width: 669,
                                show: {
                                    effect: "drop",
                                    duration: "fast"
                                },
                                focus: function (event, ui) {
                                    setTimeout(function () {
                                        $('.ui-dialog-buttonpane').find('button:eq(0)').focus();
                                    }, 1);
                                },
                                modal: true,
                                buttons: [
                                    {
                                        text: translatedFinishRegistration,
                                        click: function () {
                                            $(":button:contains('" + translatedFinishRegistration + "')").prop("disabled", true).removeClass("ui-state-enabled").addClass("ui-state-disabled");
                                            PageMethods.finishRegistration($("#txtMessage").val(), (addrIndex == 1) ? $("#tbLoginOrAddress").val() : $("#tbLoginOrAddress2").val(), $("#txtSignature").val(), $("#tbLoginOrAddress").val(), $("#tbLoginOrAddress2").val(), $("#tbPass").val(), v, minBTC, refUserID, $("#tbEmailRegisterUser").val(), finishRegistrationSuccess, errorOcurred);
                                            function finishRegistrationSuccess(result, userContext, methodName) {
                                                $(":button:contains('" + translatedFinishRegistration + "')").prop("disabled", false).removeClass("ui-state-disabled").addClass("ui-state-enabled");
                                                if (result.indexOf("err") == 0) {
                                                    alert(translatedSentences[result.split("|")[1]]);
                                                } else {
                                                    location.href = "userAccount.aspx";
                                                }
                                                document.getElementById("btLoginOrRegister").disabled = false;
                                            }
                                        }
                                    }, {
                                        text: translatedCancel,
                                        click: function () {
                                            document.getElementById("btLoginOrRegister").disabled = false;
                                            $(this).dialog("close");
                                        }
                                    }
                                ]
                            });
                        }
                        document.getElementById("btLoginOrRegister").disabled = false;
                    }
                }
                $("#btLoginOrRegister").click(clickLoginOrRegisterHelper);
            });

            $("#linkForgotPassword").click(function () {
                var loginOrAddress = $("#tbLoginOrAddress").val();
                if (loginOrAddress == "") {
                    alert(pleaseInformYourLoginOrAddress);
                    return;
                }
                function verifyLoginSuccess(result, userContext, methodName) {
                    if (result.indexOf("lnr") == 0 || result.indexOf("anr") == 0 || result.indexOf("il") == 0) { //loginNotRegistered, addressNotRegistered, invalidLogin
                        if (result.split("|").length > 1) {
                            alert(translatedSentences[result.split("|")[1]]);
                        } else if (result.indexOf("lnr") == 0 || result.indexOf("il") == 0) {
                            alert(loginNotRegistered);
                        } else if (result.indexOf("anr") == 0) {
                            alert(addressNotRegistered);
                        }
                    } else if (result.indexOf("np") == 0) {
                        var arr = result.split("||")[0].split("|");
                        hER = false;
                        if (result.split("||").length > 1) {
                            hER = true;
                        }
                        document.getElementById("selAddress").options.length = 0;
                        document.getElementById("selAddress").options[0] = new Option("- " + selectAnAddress + " -", "");
                        for (var iter = 1; iter < arr.length; iter++) {
                            document.getElementById("selAddress").options[iter] = new Option(arr[iter], arr[iter]);
                        }
                        if (hER) {
                            $("#divResetPasswordByEmail").show("fast");
                        }
                        $("#divSelectAddress").show("fast");
                        $("#btLoginOrRegister").hide("fast");
                        $("#btLoginOrRegister").removeClass("default");
                        $("#btBack").addClass("default");
                        $("#btBack").show("fast");
                        $("#divForgotPassword").hide("fast");
                        $("#divPassword").hide("fast");
                        var idResetPasswordTimeout = 0;
                        function backForgotPasswordClick() {
                            if (hER) {
                                $("#divResetPasswordByEmail").hide("fast");
                            }
                            $("#divSelectAddress").hide("fast");
                            $("#btLoginOrRegister").show("fast");
                            $("#btBack").hide("fast");
                            $("#btBack").removeClass("default");
                            $("#btLoginOrRegister").addClass("default");
                            $("#divForgotPassword").show("fast");
                            $("#divPassword").show("fast");
                            $("#divSignMessage").hide("fast");
                            $("#btLoginOrRegister").unbind("click");
                            $("#btLoginOrRegister").click(clickLogin);
                            $("#btLoginOrRegister").val(decodeEntities(translatedLogin));
                            $("#btLoginOrRegister").get(0).disabled = false;
                            clearTimeout(idResetPasswordTimeout);
                            document.getElementById("selAddress").disabled = false;
                            $("#divCountDown").hide("fast");
                            $("#btLoginOrRegister").unbind("mousedown");
                            $("#btLoginOrRegister").unbind("mouseup");
                            $("#divPasswordReset").hide("fast");
                        }
                        $("#btBack").unbind("click");
                        $("#btBack").click(backForgotPasswordClick);
                        if (hER) {
                            $("#aResetPassEmail").unbind("click");
                            $("#aResetPassEmail").click(function () {
                                function resetPassByEmailSuccess(result, userContext, methodName) {
                                    if (result == "ok") {
                                        alert(translatedSentences['weSentAnEmailToTheAddressRegisteredInYourAccountWithInstructionsToResetYourPassword']);
                                    }
                                    if (result.indexOf("err|") == 0) {
                                        alert(decodeEntities(result.split("|")[1]));
                                    }
                                }
                                PageMethods.resetPassByEmail(loginOrAddress, resetPassByEmailSuccess, errorOcurred);
                            });
                        }
                        $("#selAddress").change(function () {
                            if (this.value != "") {
                                $("#titleTxtMessage").html(toResetYourPassword);
                                $("#addressMessage").html(this.value);
                                $("#txtMessage").val("Reset password with the Address: " + this.value);
                                $("#btLoginOrRegister").val(decodeEntities(translatedResetPassword));
                                $("#btLoginOrRegister").show("fast");
                                $("#btLoginOrRegister").unbind("click");
                                $("#btBack").removeClass("default");
                                $("#btLoginOrRegister").addClass("default");
                                $("#divSignMessage").show("fast");
                                setTimeout(function () { $("#txtMessage").focus() }, 100);
                                $("#btLoginOrRegister").click(function () {
                                    if ($("#txtSignature").val() == "") {
                                        alert(youMustInformTheSignature);
                                        return;
                                    }
                                    document.getElementById("btLoginOrRegister").disabled = true;
                                    document.getElementById("selAddress").disabled = true;
                                    var addrResetPass = $("#addressMessage").html();
                                    PageMethods.resetPassword($("#txtMessage").val(), addrResetPass, $("#txtSignature").val(), resetPasswordSuccess, errorOcurred);
                                    function resetPasswordSuccess(result, userContext, methodName) {
                                        var reqID = result.split("|")[0];
                                        var v = result.split("|")[1];
                                        $("#divCountDown").html(yourRequestWillBeProccessedInAbout);
                                        $("#divCountDown").show("fast");
                                        var iterSec = 5;
                                        var iterTries = 0;
                                        function updateCountdown() {
                                            if (iterSec == 0) {
                                                function verifyPasswordResetSuccess(result, userContext, methodName) {
                                                    if (result.indexOf('vprok') == 0) {
                                                        document.getElementById("btLoginOrRegister").disabled = false;
                                                        var usID = result.split("|")[1];
                                                        var vUsID = result.split("|")[2];
                                                        //location.href = "userAccount.aspx";
                                                        if (hER) {
                                                            $("#divResetPasswordByEmail").hide("fast");
                                                        }
                                                        $("#divSelectAddress").hide("fast");
                                                        $("#divSignMessage").hide("fast");
                                                        $("#divCountDown").hide("fast");
                                                        $("#divPasswordReset").show("fast");
                                                        $("#btLoginOrRegister").val(decodeEntities(translatedResetPassword));
                                                        $("#btLoginOrRegister").unbind("click");
                                                        $("#btLoginOrRegister").click(function () {
                                                            document.getElementById("btLoginOrRegister").disabled = true;
                                                            if ($("#tbPRPassword").val() == "") {
                                                                alert(pleaseSpecifyThePassword);
                                                                document.getElementById("btLoginOrRegister").disabled = false;
                                                                return;
                                                            }
                                                            if ($("#tbPRPassword").val().length < 6) {
                                                                alert(thePasswordMustHaveAtLeast6Characters);
                                                                document.getElementById("btLoginOrRegister").disabled = false;
                                                                return;
                                                            }
                                                            if ($("#tbPRPassword").val() != $("#tbPRConfirmPassword").val()) {
                                                                alert(thePasswordsDontMatch);
                                                                document.getElementById("btLoginOrRegister").disabled = false;
                                                                return;
                                                            }
                                                            function saveResetPasswordSuccess(result, userContext, methodName) {
                                                                if (result == 'sprok') {
                                                                    location.href = "userAccount.aspx"
                                                                } else {
                                                                    alert(anErrorOccuredWhenProccessingYourRequestPleaseTryAgain);
                                                                    location.href = 'default.aspx?awqs=y'
                                                                }
                                                            }
                                                            PageMethods.saveResetPassword($("#tbPRPassword").val(), usID, vUsID, saveResetPasswordSuccess, errorOcurred);
                                                        });

                                                    } else if (result == 'f') {
                                                        alert(theSignatureVerificationFailedWeWillRefreshThePage);
                                                        location.href = location.href;
                                                    } else {
                                                        iterTries += 1;
                                                        iterSec = 5;
                                                        if (iterTries < 4) {
                                                            $("#divCountDown").html(tryingAgainInSeconds.replace("%triesCount%", iterTries));
                                                        } else {
                                                            $("#divCountDown").html(looksLikeOurServer.replace("%triesCount%", iterTries));
                                                        }
                                                        idResetPasswordTimeout = setTimeout(updateCountdown, 0);
                                                    }
                                                }
                                                function verifyPasswordResetError(error, userContext, methodName) {
                                                    alert(anErrorOcurredDuringTheRequest + "\n" + error.get_message());
                                                    iterTries += 1;
                                                    iterSec = 5;
                                                    $("#divCountDown").html(tryingAgainInSeconds.replace("%triesCount%", iterTries));
                                                    idResetPasswordTimeout = setTimeout(updateCountdown, 0);
                                                }
                                                $("#divCountDown").html(translatedVerifying);
                                                PageMethods.verifyPasswordReset(addrResetPass, reqID, v, verifyPasswordResetSuccess, verifyPasswordResetError);
                                            } else {
                                                $("#spSeconds").html(iterSec);
                                                iterSec--;
                                                idResetPasswordTimeout = setTimeout(updateCountdown, 1000)
                                            }
                                        }
                                        updateCountdown();
                                    }
                                });
                            }
                        });
                    }
                }
                PageMethods.verifyLogin(loginOrAddress, verifyLoginSuccess, errorOcurred);
            });
            !function (d, s, id) { var js, fjs = d.getElementsByTagName(s)[0], p = /^http:/.test(d.location) ? 'http' : 'https'; if (!d.getElementById(id)) { js = d.createElement(s); js.id = id; js.async = true; js.src = p + '://platform.twitter.com/widgets.js'; fjs.parentNode.insertBefore(js, fjs); } } (document, 'script', 'twitter-wjs');
            (function (d, s, id) {
                var js, fjs = d.getElementsByTagName(s)[0];
                if (d.getElementById(id)) return;
                js = d.createElement(s); js.id = id;
                js.async = true;
                js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.5&appId=353869758101477";
                fjs.parentNode.insertBefore(js, fjs);
            } (document, 'script', 'facebook-jssdk'));
            (function () {
                var po = document.createElement('script'); po.type = 'text/javascript'; po.async = true;
                po.src = 'https://apis.google.com/js/platform.js';
                var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(po, s);
            })();
            if (rpguid != "") {
                $("#divResetPassEmail").dialog({
                    resizable: true,
                    height: 205,
                    width: 669,
                    show: {
                        effect: "drop",
                        duration: "fast"
                    },
                    focus: function (event, ui) {
                        setTimeout(function () {
                            $('.ui-dialog-buttonpane').find('button:eq(0)').focus();
                        }, 1);
                    },
                    modal: true,
                    buttons: [
                                    {
                                        text: resetPassword,
                                        click: function () {
                                            var $this = this;
                                            if ($("#tbNewPassword").val() == "") {
                                                alert(youMustInformAPassword);
                                                return;
                                            }
                                            if ($("#tbNewPassword").val().length < 6) {
                                                alert(thePasswordMustHaveAtLeast6Characters);
                                                return;
                                            }
                                            if ($("#tbConfirmNewPassword").val() != $("#tbNewPassword").val()) {
                                                alert(thePasswordsDontMatch);
                                                return;
                                            }
                                            $(":button:contains('" + resetPassword + "')").prop("disabled", true).removeClass("ui-state-enabled").addClass("ui-state-disabled");
                                            PageMethods.resetPasswordEmail(rpguid, $("#tbNewPassword").val(), resetPasswordEmailSuccess, errorOcurred);
                                            function resetPasswordEmailSuccess(result, userContext, methodName) {
                                                $(":button:contains('" + resetPassword + "')").prop("disabled", false).removeClass("ui-state-disabled").addClass("ui-state-enabled");
                                                if (result.indexOf("err") == 0) {
                                                    alert(decodeEntities(result.split("|")[1]));
                                                } else {
                                                    alert(decodeEntities(result.split("|")[1]));
                                                    $($this).dialog("close");
                                                }
                                            }
                                        }
                                    }, {
                                        text: translatedCancel,
                                        click: function () {
                                            document.getElementById("btLoginOrRegister").disabled = false;
                                            $(this).dialog("close");
                                        }
                                    }
                                ]
                });
            }
        });
    }); 
</script>
</form>
<div style="display: none"> 1GrD6sUeJyjsFcFHqhTuYbwqbqYGQ2dAzY / 1PhmMsdwamJA6soKw5mNMXxzGomHEHWY5P / 16WZdBhUoeSyr8k5ktLtkKRmRvDHPvLWmY / 1NzwvMkNK9ZzbrN73U8ZYXKSw4GqNiT7E6 / 1Mo8J5Xj3VGpQRZshaaSZxjQ3gxedHtS45 / 1KU3SLYCrWJndq14CS2nWQDxLX4yH7swoR / 1B4cZx3kWwbLeGQ72r1ezPsmpAK657wMKZ / 1CQX8b8D8KHnNf1vujMpcStT6rjxGjmjms / 19GUFrWfxBuoEnj1pt8c5Q94CEKBVXLEVq / 19d34XeAVcBevWEQg1KAEc8BEHxMVHQotV / 1LbjoKreUJDBSoTXTuxZAchpjzcHgKoCyh / 11gPDNRqiK4gHQ6kNsHwyo6ZzLAUMMPnu / 1MBbGKJzBqyJaJJ7VLTr6BsYGT41ycUoC7</div>
<script type="text/javascript">
    if (showLanguageSelectMenu) {
        $("#menuLang").menu({
            position: { my: "left top", at: "left bottom" },
            icons: { submenu: "ui-icon-triangle-1-s" },
            blur: function (event, ui) {
                $("#liMenuLang").addClass("ui-state-focus");
            }
        });
    }
    $(".value-jack").qtip({
        content: '<span style="font-size: 14px"><b>' + hitsJackpot6 + '</b><br><b>' + hitsJackpot5 + '</b><br><b>' + hitsJackpot4 + '</b><br><b>' + hitsJackpot3 + '</b><br><b>' + hitsJackpot2 + '</b></span>',
        position: {
            target: 'mouse',
            adjust: { x: 5, y: 5 },
            viewport: $(window)
        },
        events: {
            render: function (event, api) {
                $(".qtip").css("max-width", 480);
            }
        }
    });
    $("#imgHelpEmail").qtip({
        content: '<span style="font-size: 14px"><b>' + translatedProvidingYourEmail + '</b><br/><br/>' + translatedWeWillSendYouEmailsInTwoSituations + '<ul><li>' + translatedWhenResettingYourPasswordIfYouDoNotProvideAnEmail + '</li><li>' + translatedToInformYouAboutUpdatesPromotionsGiveawaysAndOtherImportantInformation + '</li></ul><b>' + translatedWeHateSpamSoWeWontGiveOrSellYourEmailAddress + '</b>',
        position: {
            target: 'mouse',
            adjust: { x: 5, y: 5 },
            viewport: $(window)
        },
        events: {
            render: function (event, api) {
                $(".qtip").css("max-width", 480);
            }
        }
    });
</script>
</body>
</html>
